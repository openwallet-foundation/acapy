name: Scenario Integration Tests

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: read
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    # Run on openwallet-foundation and non-draft PRs or on non-PR events
    if: (github.repository == 'openwallet-foundation/acapy') && ((github.event_name == 'pull_request' && github.event.pull_request.draft == false) || (github.event_name != 'pull_request'))
    steps:
      - name: checkout-acapy
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Check changed files
        id: check-changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files_yaml: |
            scenarios: "scenarios/**/*"
            src: 
              - acapy_agent/**/*
              - poetry.lock 
              - pyproject.toml
      - name: Check if scenarios or src files changed
        id: check-if-scenarios-or-src-changed
        run: |
          if [ "${{ steps.check-changed-files.outputs.scenarios_any_changed }}" != "true" ] && [ "${{ steps.check-changed-files.outputs.src_any_changed }}" != "true" ] && [ '${{ github.event_name }}' == 'pull_request' ]; then
            echo "No scenarios or src files changed..."
            echo run_tests=false >> $GITHUB_OUTPUT
          fi
      - name: Install poetry
        if: steps.check-if-scenarios-or-src-changed.outputs.run_tests != 'false'
        run: pipx install poetry
        id: setup-poetry
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        if: steps.check-if-scenarios-or-src-changed.outputs.run_tests != 'false'
        with:
          python-version: "3.12"
          cache: "poetry"
      - name: Run Scenario Tests
        if: steps.check-if-scenarios-or-src-changed.outputs.run_tests != 'false'
        run: |
          # Build the docker image for testing
          docker build -t acapy-test -f docker/Dockerfile.run .
          cd scenarios
          poetry install --no-root
          poetry run pytest -m examples
