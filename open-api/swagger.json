{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1.3.0rc2",
    "title" : "Aries Cloud Agent"
  },
  "tags" : [ {
    "name" : "AnonCreds - Credential Definitions",
    "description" : "AnonCreds credential definition management",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://hyperledger.github.io/anoncreds-spec"
    }
  }, {
    "name" : "AnonCreds - Revocation",
    "description" : "Revocation registry management",
    "externalDocs" : {
      "description" : "Overview",
      "url" : "https://github.com/hyperledger/indy-hipe/tree/master/text/0011-cred-revocation"
    }
  }, {
    "name" : "AnonCreds - Schemas",
    "description" : "AnonCreds schema management",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://hyperledger.github.io/anoncreds-spec"
    }
  }, {
    "name" : "AnonCreds - Wallet Upgrade",
    "description" : "AnonCreds wallet upgrade",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://hyperledger.github.io/anoncreds-spec"
    }
  }, {
    "name" : "action-menu",
    "description" : "Menu interaction over connection"
  }, {
    "name" : "basicmessage",
    "description" : "Simple messaging",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/527849ec3aa2a8fd47a7bb6c57f918ff8bcb5e8c/features/0095-basic-message"
    }
  }, {
    "name" : "connection",
    "description" : "Connection management"
  }, {
    "name" : "credential-definition",
    "description" : "Credential definition operations",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#cred_def"
    }
  }, {
    "name" : "credentials",
    "description" : "Holder credential management",
    "externalDocs" : {
      "description" : "Overview",
      "url" : "https://w3c.github.io/vc-data-model/#credentials"
    }
  }, {
    "name" : "did",
    "description" : "Endpoints for managing dids",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://www.w3.org/TR/did-core/"
    }
  }, {
    "name" : "did-exchange",
    "description" : "Connection management via DID exchange",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/25464a5c8f8a17b14edaa4310393df6094ace7b0/features/0023-did-exchange"
    }
  }, {
    "name" : "did-rotate",
    "description" : "Rotate a DID",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/main/features/0794-did-rotate"
    }
  }, {
    "name" : "discover-features",
    "description" : "Feature discovery",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/b3a3942ef052039e73cd23d847f42947f8287da2/features/0031-discover-features"
    }
  }, {
    "name" : "discover-features v2.0",
    "description" : "Feature discovery v2",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/b3a3942ef052039e73cd23d847f42947f8287da2/features/0557-discover-features-v2"
    }
  }, {
    "name" : "endorse-transaction",
    "description" : "Endorse a Transaction"
  }, {
    "name" : "introduction",
    "description" : "Introduction of known parties"
  }, {
    "name" : "issue-credential v1.0",
    "description" : "Credential issue v1.0",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/bb42a6c35e0d5543718fb36dd099551ab192f7b0/features/0036-issue-credential"
    }
  }, {
    "name" : "issue-credential v2.0",
    "description" : "Credential issue v2.0",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/cd27fc64aa2805f756a118043d7c880354353047/features/0453-issue-credential-v2"
    }
  }, {
    "name" : "jsonld",
    "description" : "Sign and verify json-ld data",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://tools.ietf.org/html/rfc7515"
    }
  }, {
    "name" : "ledger",
    "description" : "Interaction with ledger",
    "externalDocs" : {
      "description" : "Overview",
      "url" : "https://hyperledger-indy.readthedocs.io/projects/plenum/en/latest/storage.html#ledger"
    }
  }, {
    "name" : "mediation",
    "description" : "Mediation management",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/fa8dc4ea1e667eb07db8f9ffeaf074a4455697c0/features/0211-route-coordination"
    }
  }, {
    "name" : "multitenancy",
    "description" : "Multitenant wallet management"
  }, {
    "name" : "out-of-band",
    "description" : "Out-of-band connections",
    "externalDocs" : {
      "description" : "Design",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/2da7fc4ee043effa3a9960150e7ba8c9a4628b68/features/0434-outofband"
    }
  }, {
    "name" : "present-proof v1.0",
    "description" : "Proof presentation v1.0",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/4fae574c03f9f1013db30bf2c0c676b1122f7149/features/0037-present-proof"
    }
  }, {
    "name" : "present-proof v2.0",
    "description" : "Proof presentation v2.0",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/eace815c3e8598d4a8dd7881d8c731fdb2bcc0aa/features/0454-present-proof-v2"
    }
  }, {
    "name" : "resolver",
    "description" : "did resolver interface.",
    "externalDocs" : {
      "description" : "DID Resolution Specification",
      "url" : "https://www.w3.org/TR/did-core/#resolution"
    }
  }, {
    "name" : "revocation",
    "description" : "Revocation registry management",
    "externalDocs" : {
      "description" : "Overview",
      "url" : "https://github.com/hyperledger/indy-hipe/tree/master/text/0011-cred-revocation"
    }
  }, {
    "name" : "schema",
    "description" : "Schema operations",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#schema"
    }
  }, {
    "name" : "settings",
    "description" : "Agent settings interface."
  }, {
    "name" : "trustping",
    "description" : "Trust-ping over connection",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/527849ec3aa2a8fd47a7bb6c57f918ff8bcb5e8c/features/0048-trust-ping"
    }
  }, {
    "name" : "vc-api",
    "description" : "Endpoints for managing w3c credentials and presentations",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://w3c-ccg.github.io/vc-api/"
    }
  }, {
    "name" : "wallet",
    "description" : "DID and tag policy management",
    "externalDocs" : {
      "description" : "Design",
      "url" : "https://github.com/hyperledger/indy-sdk/tree/master/docs/design/003-wallet-storage"
    }
  } ],
  "security" : [ {
    "AuthorizationHeader" : [ ]
  } ],
  "paths" : {
    "/action-menu/{conn_id}/close" : {
      "post" : {
        "tags" : [ "action-menu" ],
        "summary" : "Close the active menu associated with a connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ActionMenuModulesResult"
            }
          }
        }
      }
    },
    "/action-menu/{conn_id}/fetch" : {
      "post" : {
        "tags" : [ "action-menu" ],
        "summary" : "Fetch the active menu",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ActionMenuFetchResult"
            }
          }
        }
      }
    },
    "/action-menu/{conn_id}/perform" : {
      "post" : {
        "tags" : [ "action-menu" ],
        "summary" : "Perform an action associated with the active menu",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PerformRequest"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ActionMenuModulesResult"
            }
          }
        }
      }
    },
    "/action-menu/{conn_id}/request" : {
      "post" : {
        "tags" : [ "action-menu" ],
        "summary" : "Request the active menu",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ActionMenuModulesResult"
            }
          }
        }
      }
    },
    "/action-menu/{conn_id}/send-menu" : {
      "post" : {
        "tags" : [ "action-menu" ],
        "summary" : "Send an action menu to a connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SendMenu"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ActionMenuModulesResult"
            }
          }
        }
      }
    },
    "/anoncreds/credential-definition" : {
      "post" : {
        "tags" : [ "AnonCreds - Credential Definitions" ],
        "summary" : "Create a credential definition on the connected datastore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredDefPostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredDefResult"
            }
          }
        }
      }
    },
    "/anoncreds/credential-definition/{cred_def_id}" : {
      "get" : {
        "tags" : [ "AnonCreds - Credential Definitions" ],
        "summary" : "Retrieve an individual credential definition details",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "path",
          "description" : "Credential definition identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetCredDefResult"
            }
          }
        }
      }
    },
    "/anoncreds/credential-definitions" : {
      "get" : {
        "tags" : [ "AnonCreds - Credential Definitions" ],
        "summary" : "Retrieve all credential definition ids",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "issuer_id",
          "in" : "query",
          "description" : "Issuer Identifier of the credential definition",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema_id",
          "in" : "query",
          "description" : "Schema identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema_name",
          "in" : "query",
          "description" : "Schema name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema_version",
          "in" : "query",
          "description" : "Schema version",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetCredDefsResponse"
            }
          }
        }
      }
    },
    "/anoncreds/registry/{rev_reg_id}/active" : {
      "put" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Update the active registry",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AnonCredsRevocationModuleResponse"
            }
          }
        }
      }
    },
    "/anoncreds/registry/{rev_reg_id}/tails-file" : {
      "put" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Upload local tails file to server",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AnonCredsRevocationModuleResponse"
            }
          }
        }
      }
    },
    "/anoncreds/revocation-list" : {
      "post" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Create and publish a revocation status list on the connected datastore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RevListCreateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevListResult"
            }
          }
        }
      }
    },
    "/anoncreds/revocation-registry-definition" : {
      "post" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Create and publish a registration revocation on the connected datastore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RevRegCreateRequestSchemaAnonCreds"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegDefResult"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/active-registry/{cred_def_id}" : {
      "get" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Get current active revocation registry by credential definition id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "path",
          "description" : "Credential definition identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegResultSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/active-registry/{cred_def_id}/rotate" : {
      "post" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Rotate revocation registry",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "path",
          "description" : "Credential definition identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegsCreatedSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/credential-record" : {
      "get" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Get credential revocation status",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "query",
          "description" : "Credential exchange identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }, {
          "name" : "cred_rev_id",
          "in" : "query",
          "description" : "Credential revocation identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^[1-9][0-9]*$"
        }, {
          "name" : "rev_reg_id",
          "in" : "query",
          "description" : "Revocation registry identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredRevRecordResultSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/publish-revocations" : {
      "post" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Publish pending revocations to ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PublishRevocationsSchemaAnonCreds"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PublishRevocationsResultSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/registries" : {
      "get" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Search for matching revocation registries that current agent created",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "query",
          "description" : "Credential definition identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^(.+$)"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Revocation registry state",
          "required" : false,
          "type" : "string",
          "enum" : [ "finished", "failed", "action", "wait", "decommissioned", "full" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegsCreatedSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/registry/{rev_reg_id}" : {
      "get" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Get revocation registry by revocation registry id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegResultSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/registry/{rev_reg_id}/fix-revocation-entry-state" : {
      "put" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Fix revocation state in wallet and return number of updated entries",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        }, {
          "name" : "apply_ledger_update",
          "in" : "query",
          "description" : "Apply updated accumulator transaction to ledger",
          "required" : true,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegWalletUpdatedResultSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/registry/{rev_reg_id}/issued" : {
      "get" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Get number of credentials issued against revocation registry",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegIssuedResultSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/registry/{rev_reg_id}/issued/details" : {
      "get" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Get details of credentials issued against revocation registry",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredRevRecordDetailsResultSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/registry/{rev_reg_id}/issued/indy_recs" : {
      "get" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Get details of revoked credentials from ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredRevIndyRecordsResultSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/registry/{rev_reg_id}/set-state" : {
      "patch" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Set revocation registry state manually",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Revocation registry state to set",
          "required" : true,
          "type" : "string",
          "enum" : [ "finished", "failed", "action", "wait", "decommissioned", "full" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegResultSchemaAnonCreds"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/registry/{rev_reg_id}/tails-file" : {
      "get" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Download tails file",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "tails file",
            "schema" : {
              "$ref" : "#/definitions/AnonCredsRevocationModuleResponse"
            }
          }
        }
      }
    },
    "/anoncreds/revocation/revoke" : {
      "post" : {
        "tags" : [ "AnonCreds - Revocation" ],
        "summary" : "Revoke an issued credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RevokeRequestSchemaAnonCreds"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AnonCredsRevocationModuleResponse"
            }
          }
        }
      }
    },
    "/anoncreds/schema" : {
      "post" : {
        "tags" : [ "AnonCreds - Schemas" ],
        "summary" : "Create a schema on the connected datastore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SchemaPostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/SchemaResult"
            }
          }
        }
      }
    },
    "/anoncreds/schema/{schema_id}" : {
      "get" : {
        "tags" : [ "AnonCreds - Schemas" ],
        "summary" : "Retrieve an individual schemas details",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema_id",
          "in" : "path",
          "description" : "Schema identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetSchemaResult"
            }
          }
        }
      }
    },
    "/anoncreds/schemas" : {
      "get" : {
        "tags" : [ "AnonCreds - Schemas" ],
        "summary" : "Retrieve all schema ids",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema_issuer_id",
          "in" : "query",
          "description" : "Schema issuer identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema_name",
          "in" : "query",
          "description" : "Schema name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema_version",
          "in" : "query",
          "description" : "Schema version",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetSchemasResponse"
            }
          }
        }
      }
    },
    "/anoncreds/wallet/upgrade" : {
      "post" : {
        "tags" : [ "AnonCreds - Wallet Upgrade" ],
        "summary" : "Upgrade the wallet from askar to askar-anoncreds. Be very careful with this! You cannot go back! See migration guide for more information.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "wallet_name",
          "in" : "query",
          "description" : "Name of wallet to upgrade to anoncreds",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/UpgradeResult"
            }
          }
        }
      }
    },
    "/connections" : {
      "get" : {
        "tags" : [ "connection" ],
        "summary" : "Query agent-to-agent connections",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "alias",
          "in" : "query",
          "description" : "Alias",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "connection_protocol",
          "in" : "query",
          "description" : "Connection protocol used",
          "required" : false,
          "type" : "string",
          "enum" : [ "didexchange/1.0", "didexchange/1.1" ]
        }, {
          "name" : "descending",
          "in" : "query",
          "description" : "Order results in descending order if true",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "invitation_key",
          "in" : "query",
          "description" : "invitation key",
          "required" : false,
          "type" : "string",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        }, {
          "name" : "invitation_msg_id",
          "in" : "query",
          "description" : "Identifier of the associated Invitation Message",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results to return",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "maximum" : 10000,
          "minimum" : 1
        }, {
          "name" : "my_did",
          "in" : "query",
          "description" : "My DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset for pagination",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "The column to order results by. Only \"id\" is currently supported.",
          "required" : false,
          "type" : "string",
          "default" : "id",
          "enum" : [ "id" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Connection state",
          "required" : false,
          "type" : "string",
          "enum" : [ "abandoned", "active", "completed", "error", "init", "invitation", "request", "response", "start" ]
        }, {
          "name" : "their_did",
          "in" : "query",
          "description" : "Their DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        }, {
          "name" : "their_public_did",
          "in" : "query",
          "description" : "Their Public DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        }, {
          "name" : "their_role",
          "in" : "query",
          "description" : "Their role in the connection protocol",
          "required" : false,
          "type" : "string",
          "enum" : [ "invitee", "requester", "inviter", "responder" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnectionList"
            }
          }
        }
      }
    },
    "/connections/create-static" : {
      "post" : {
        "tags" : [ "connection" ],
        "summary" : "Create a new static connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConnectionStaticRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnectionStaticResult"
            }
          }
        }
      }
    },
    "/connections/{conn_id}" : {
      "get" : {
        "tags" : [ "connection" ],
        "summary" : "Fetch a single connection record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnRecord"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "connection" ],
        "summary" : "Remove an existing connection record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnectionModuleResponse"
            }
          }
        }
      }
    },
    "/connections/{conn_id}/endpoints" : {
      "get" : {
        "tags" : [ "connection" ],
        "summary" : "Fetch connection remote endpoint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/EndpointsResult"
            }
          }
        }
      }
    },
    "/connections/{conn_id}/metadata" : {
      "get" : {
        "tags" : [ "connection" ],
        "summary" : "Fetch connection metadata",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "Key to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnectionMetadata"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "connection" ],
        "summary" : "Set connection metadata",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConnectionMetadataSetRequest"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnectionMetadata"
            }
          }
        }
      }
    },
    "/connections/{conn_id}/send-message" : {
      "post" : {
        "tags" : [ "basicmessage" ],
        "summary" : "Send a basic message to a connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SendMessage"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/BasicMessageModuleResponse"
            }
          }
        }
      }
    },
    "/connections/{conn_id}/send-ping" : {
      "post" : {
        "tags" : [ "trustping" ],
        "summary" : "Send a trust ping to a connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PingRequest"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PingRequestResponse"
            }
          }
        }
      }
    },
    "/connections/{conn_id}/start-introduction" : {
      "post" : {
        "tags" : [ "introduction" ],
        "summary" : "Start an introduction between two connections",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "target_connection_id",
          "in" : "query",
          "description" : "Target connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "message",
          "in" : "query",
          "description" : "Message",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/IntroModuleResponse"
            }
          }
        }
      }
    },
    "/credential-definitions" : {
      "post" : {
        "tags" : [ "credential-definition" ],
        "summary" : "Sends a credential definition to the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialDefinitionSendRequest"
          }
        }, {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create_transaction_for_endorser",
          "in" : "query",
          "description" : "Create Transaction For Endorser's signature",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TxnOrCredentialDefinitionSendResult"
            }
          }
        }
      }
    },
    "/credential-definitions/created" : {
      "get" : {
        "tags" : [ "credential-definition" ],
        "summary" : "Search for matching credential definitions that agent originated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "query",
          "description" : "Credential definition id",
          "required" : false,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        }, {
          "name" : "issuer_did",
          "in" : "query",
          "description" : "Issuer DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "schema_id",
          "in" : "query",
          "description" : "Schema identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        }, {
          "name" : "schema_issuer_did",
          "in" : "query",
          "description" : "Schema issuer DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "schema_name",
          "in" : "query",
          "description" : "Schema name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema_version",
          "in" : "query",
          "description" : "Schema version",
          "required" : false,
          "type" : "string",
          "pattern" : "^[0-9.]+$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredentialDefinitionsCreatedResult"
            }
          }
        }
      }
    },
    "/credential-definitions/{cred_def_id}" : {
      "get" : {
        "tags" : [ "credential-definition" ],
        "summary" : "Gets a credential definition from the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "path",
          "description" : "Credential definition identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredentialDefinitionGetResult"
            }
          }
        }
      }
    },
    "/credential-definitions/{cred_def_id}/write_record" : {
      "post" : {
        "tags" : [ "credential-definition" ],
        "summary" : "Writes a credential definition non-secret record to the wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "path",
          "description" : "Credential definition identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredentialDefinitionGetResult"
            }
          }
        }
      }
    },
    "/credential/mime-types/{credential_id}" : {
      "get" : {
        "tags" : [ "credentials" ],
        "summary" : "Get attribute MIME types from wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "description" : "Credential identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AttributeMimeTypesResult"
            }
          }
        }
      }
    },
    "/credential/revoked/{credential_id}" : {
      "get" : {
        "tags" : [ "credentials" ],
        "summary" : "Query credential revocation status by id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "description" : "Credential identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Earliest epoch of revocation status interval of interest",
          "required" : false,
          "type" : "string",
          "pattern" : "^[0-9]*$"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Latest epoch of revocation status interval of interest",
          "required" : false,
          "type" : "string",
          "pattern" : "^[0-9]*$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredRevokedResult"
            }
          }
        }
      }
    },
    "/credential/w3c/{credential_id}" : {
      "get" : {
        "tags" : [ "credentials" ],
        "summary" : "Fetch W3C credential from wallet by id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "description" : "Credential identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/VCRecord"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "credentials" ],
        "summary" : "Remove W3C credential from wallet by id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "description" : "Credential identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/HolderModuleResponse"
            }
          }
        }
      }
    },
    "/credential/{credential_id}" : {
      "get" : {
        "tags" : [ "credentials" ],
        "summary" : "Fetch credential from wallet by id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "description" : "Credential identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/IndyCredInfo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "credentials" ],
        "summary" : "Remove credential from wallet by id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "description" : "Credential identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/HolderModuleResponse"
            }
          }
        }
      }
    },
    "/credentials" : {
      "get" : {
        "tags" : [ "credentials" ],
        "summary" : "Fetch credentials from wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum number to retrieve (DEPRECATED - use limit instead)",
          "required" : false,
          "type" : "string",
          "default" : "10",
          "pattern" : "^[1-9][0-9]*$"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results to return",
          "required" : false,
          "type" : "integer",
          "maximum" : 10000,
          "minimum" : 1
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset for pagination",
          "required" : false,
          "type" : "integer",
          "minimum" : 0
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start index (DEPRECATED - use offset instead)",
          "required" : false,
          "type" : "string",
          "default" : "0",
          "pattern" : "^[0-9]*$"
        }, {
          "name" : "wql",
          "in" : "query",
          "description" : "(JSON) WQL query",
          "required" : false,
          "type" : "string",
          "pattern" : "^{.*}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredInfoList"
            }
          }
        }
      }
    },
    "/credentials/w3c" : {
      "post" : {
        "tags" : [ "credentials" ],
        "summary" : "Fetch W3C credentials from wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/W3CCredentialsListRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/VCRecordList"
            }
          }
        }
      }
    },
    "/did-rotate/{conn_id}/hangup" : {
      "post" : {
        "tags" : [ "did-rotate" ],
        "summary" : "Send hangup of DID rotation as a rotator",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Hangup agent message for observer",
            "schema" : {
              "$ref" : "#/definitions/Hangup"
            }
          }
        }
      }
    },
    "/did-rotate/{conn_id}/rotate" : {
      "post" : {
        "tags" : [ "did-rotate" ],
        "summary" : "Begin rotation of a DID as a rotator",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DIDRotateRequestJSON"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Rotate agent message for observer",
            "schema" : {
              "$ref" : "#/definitions/Rotate"
            }
          }
        }
      }
    },
    "/did/indy/create" : {
      "post" : {
        "tags" : [ "did" ],
        "summary" : "Create a did:indy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateDidIndyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CreateDidIndyResponse"
            }
          }
        }
      }
    },
    "/didexchange/create-request" : {
      "post" : {
        "tags" : [ "did-exchange" ],
        "summary" : "Create and send a request against public DID's implicit invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "their_public_did",
          "in" : "query",
          "description" : "Qualified public DID to which to request connection",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Alias for connection",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "auto_accept",
          "in" : "query",
          "description" : "Auto-accept connection (defaults to configuration)",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "goal",
          "in" : "query",
          "description" : "A self-attested string that the receiver may want to display to the user about the context-specific goal of the out-of-band message",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "goal_code",
          "in" : "query",
          "description" : "A self-attested code the receiver may want to display to the user or use in automatically deciding what to do with the out-of-band message",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mediation_id",
          "in" : "query",
          "description" : "Identifier for active mediation record to be used",
          "required" : false,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }, {
          "name" : "my_endpoint",
          "in" : "query",
          "description" : "My URL endpoint",
          "required" : false,
          "type" : "string",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        }, {
          "name" : "my_label",
          "in" : "query",
          "description" : "Label for connection request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "protocol",
          "in" : "query",
          "description" : "Which DID Exchange Protocol version to use",
          "required" : false,
          "type" : "string",
          "enum" : [ "didexchange/1.0", "didexchange/1.1" ]
        }, {
          "name" : "use_did",
          "in" : "query",
          "description" : "The DID to use to for this connection",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "use_did_method",
          "in" : "query",
          "description" : "The DID method to use to generate a DID for this connection",
          "required" : false,
          "type" : "string",
          "enum" : [ "did:peer:2", "did:peer:4" ]
        }, {
          "name" : "use_public_did",
          "in" : "query",
          "description" : "Use public DID for this connection",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnRecord"
            }
          }
        }
      }
    },
    "/didexchange/receive-request" : {
      "post" : {
        "tags" : [ "did-exchange" ],
        "summary" : "Receive request against public DID's implicit invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DIDXRequest"
          }
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Alias for connection",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "auto_accept",
          "in" : "query",
          "description" : "Auto-accept connection (defaults to configuration)",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "mediation_id",
          "in" : "query",
          "description" : "Identifier for active mediation record to be used",
          "required" : false,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }, {
          "name" : "my_endpoint",
          "in" : "query",
          "description" : "My URL endpoint",
          "required" : false,
          "type" : "string",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnRecord"
            }
          }
        }
      }
    },
    "/didexchange/{conn_id}/accept-invitation" : {
      "post" : {
        "tags" : [ "did-exchange" ],
        "summary" : "Accept a stored connection invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "my_endpoint",
          "in" : "query",
          "description" : "My URL endpoint",
          "required" : false,
          "type" : "string",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        }, {
          "name" : "my_label",
          "in" : "query",
          "description" : "Label for connection request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "use_did",
          "in" : "query",
          "description" : "The DID to use to for this connection",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "use_did_method",
          "in" : "query",
          "description" : "The DID method to use to generate a DID for this connection",
          "required" : false,
          "type" : "string",
          "enum" : [ "did:peer:2", "did:peer:4" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnRecord"
            }
          }
        }
      }
    },
    "/didexchange/{conn_id}/accept-request" : {
      "post" : {
        "tags" : [ "did-exchange" ],
        "summary" : "Accept a stored connection request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "mediation_id",
          "in" : "query",
          "description" : "Identifier for active mediation record to be used",
          "required" : false,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }, {
          "name" : "my_endpoint",
          "in" : "query",
          "description" : "My URL endpoint",
          "required" : false,
          "type" : "string",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        }, {
          "name" : "use_public_did",
          "in" : "query",
          "description" : "Use public DID for this connection",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnRecord"
            }
          }
        }
      }
    },
    "/didexchange/{conn_id}/reject" : {
      "post" : {
        "tags" : [ "did-exchange" ],
        "summary" : "Abandon or reject a DID Exchange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DIDXRejectRequest"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConnRecord"
            }
          }
        }
      }
    },
    "/discover-features-2.0/queries" : {
      "get" : {
        "tags" : [ "discover-features v2.0" ],
        "summary" : "Query supported features",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connection_id",
          "in" : "query",
          "description" : "Connection identifier, if none specified, then the query will provide features for this agent.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "query_goal_code",
          "in" : "query",
          "description" : "Goal-code feature-type query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "query_protocol",
          "in" : "query",
          "description" : "Protocol feature-type query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20DiscoveryExchangeResult"
            }
          }
        }
      }
    },
    "/discover-features-2.0/records" : {
      "get" : {
        "tags" : [ "discover-features v2.0" ],
        "summary" : "Discover Features v2.0 records",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connection_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20DiscoveryExchangeListResult"
            }
          }
        }
      }
    },
    "/discover-features/query" : {
      "get" : {
        "tags" : [ "discover-features" ],
        "summary" : "Query supported features",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "comment",
          "in" : "query",
          "description" : "Comment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "connection_id",
          "in" : "query",
          "description" : "Connection identifier, if none specified, then the query will provide features for this agent.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Protocol feature query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10DiscoveryRecord"
            }
          }
        }
      }
    },
    "/discover-features/records" : {
      "get" : {
        "tags" : [ "discover-features" ],
        "summary" : "Discover Features records",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connection_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10DiscoveryExchangeListResult"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/create" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Create a credential record without sending (generally for use with Out-Of-Band)",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20IssueCredSchemaCore"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecord"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/create-offer" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Create a credential offer, independent of any proposal or connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20CredOfferConnFreeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecord"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/records" : {
      "get" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Fetch all credential exchange records",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connection_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "descending",
          "in" : "query",
          "description" : "Order results in descending order if true",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results to return",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "maximum" : 10000,
          "minimum" : 1
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset for pagination",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "The column to order results by. Only \"id\" is currently supported.",
          "required" : false,
          "type" : "string",
          "default" : "id",
          "enum" : [ "id" ]
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role assigned in credential exchange",
          "required" : false,
          "type" : "string",
          "enum" : [ "issuer", "holder" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Credential exchange state",
          "required" : false,
          "type" : "string",
          "enum" : [ "proposal-sent", "proposal-received", "offer-sent", "offer-received", "request-sent", "request-received", "credential-issued", "credential-received", "done", "credential-revoked", "abandoned" ]
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "Thread identifier",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecordListResult"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/records/{cred_ex_id}" : {
      "get" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Fetch a single credential exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecordDetail"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Remove an existing credential exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20IssueCredentialModuleResponse"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/records/{cred_ex_id}/issue" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Send holder a credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20CredIssueRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecordDetail"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/records/{cred_ex_id}/problem-report" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Send a problem report for credential exchange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20CredIssueProblemReportRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20IssueCredentialModuleResponse"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/records/{cred_ex_id}/send-offer" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Send holder a credential offer in reference to a proposal with preview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20CredBoundOfferRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecord"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/records/{cred_ex_id}/send-request" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Send issuer a credential request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20CredRequestRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecord"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/records/{cred_ex_id}/store" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Store a received credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20CredStoreRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecordDetail"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/send" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Send holder a credential, automating entire flow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20CredExFree"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecord"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/send-offer" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Send holder a credential offer, independent of any proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20CredOfferRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecord"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/send-proposal" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Send issuer a credential proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20CredExFree"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecord"
            }
          }
        }
      }
    },
    "/issue-credential-2.0/send-request" : {
      "post" : {
        "tags" : [ "issue-credential v2.0" ],
        "summary" : "Send issuer a credential request not bound to an existing thread. Indy credentials cannot start at a request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20CredRequestFree"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20CredExRecord"
            }
          }
        }
      }
    },
    "/issue-credential/create" : {
      "post" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Create a credential record without sending (generally for use with Out-Of-Band)",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialCreate"
          }
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/create-offer" : {
      "post" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Create a credential offer, independent of any proposal or connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialConnFreeOfferRequest"
          }
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/records" : {
      "get" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Fetch all credential exchange records",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connection_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "descending",
          "in" : "query",
          "description" : "Order results in descending order if true",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results to return",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "maximum" : 10000,
          "minimum" : 1
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset for pagination",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "The column to order results by. Only \"id\" is currently supported.",
          "required" : false,
          "type" : "string",
          "default" : "id",
          "enum" : [ "id" ]
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role assigned in credential exchange",
          "required" : false,
          "type" : "string",
          "enum" : [ "issuer", "holder" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Credential exchange state",
          "required" : false,
          "type" : "string",
          "enum" : [ "proposal_sent", "proposal_received", "offer_sent", "offer_received", "request_sent", "request_received", "credential_issued", "credential_received", "credential_acked", "credential_revoked", "abandoned" ]
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "Thread identifier",
          "required" : false,
          "type" : "string"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchangeListResult"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}" : {
      "get" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Fetch a single credential exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Remove an existing credential exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/IssueCredentialModuleResponse"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}/issue" : {
      "post" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Send holder a credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialIssueRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}/problem-report" : {
      "post" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Send a problem report for credential exchange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialProblemReportRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/IssueCredentialModuleResponse"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}/send-offer" : {
      "post" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Send holder a credential offer in reference to a proposal with preview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialBoundOfferRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}/send-request" : {
      "post" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Send issuer a credential request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialExchangeAutoRemoveRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}/store" : {
      "post" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Store a received credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialStoreRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/send" : {
      "post" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Send holder a credential, automating entire flow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialProposalRequestMand"
          }
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/send-offer" : {
      "post" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Send holder a credential offer, independent of any proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialFreeOfferRequest"
          }
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/send-proposal" : {
      "post" : {
        "tags" : [ "issue-credential v1.0" ],
        "summary" : "Send issuer a credential proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialProposalRequestOpt"
          }
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/jsonld/sign" : {
      "post" : {
        "tags" : [ "jsonld" ],
        "summary" : "Sign a JSON-LD structure and return it",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SignRequest"
          }
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/SignResponse"
            }
          }
        }
      }
    },
    "/jsonld/verify" : {
      "post" : {
        "tags" : [ "jsonld" ],
        "summary" : "Verify a JSON-LD structure.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VerifyRequest"
          }
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/VerifyResponse"
            }
          }
        }
      }
    },
    "/ledger/config" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Fetch the multiple ledger configuration currently in use",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/LedgerConfigList"
            }
          }
        }
      }
    },
    "/ledger/did-endpoint" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Get the endpoint for a DID from the ledger.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "endpoint_type",
          "in" : "query",
          "description" : "Endpoint type of interest (default 'Endpoint')",
          "required" : false,
          "type" : "string",
          "enum" : [ "Endpoint", "Profile", "LinkedDomains" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetDIDEndpointResponse"
            }
          }
        }
      }
    },
    "/ledger/did-verkey" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Get the verkey for a DID from the ledger.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetDIDVerkeyResponse"
            }
          }
        }
      }
    },
    "/ledger/get-nym-role" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Get the role from the NYM registration of a public DID.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetNymRoleResponse"
            }
          }
        }
      }
    },
    "/ledger/get-write-ledger" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Fetch the current write ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/WriteLedger"
            }
          }
        }
      }
    },
    "/ledger/get-write-ledgers" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Fetch list of available write ledgers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ConfigurableWriteLedgers"
            }
          }
        }
      }
    },
    "/ledger/register-nym" : {
      "post" : {
        "tags" : [ "ledger" ],
        "summary" : "Send a NYM registration to the ledger.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID to register",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "verkey",
          "in" : "query",
          "description" : "Verification key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Alias",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create_transaction_for_endorser",
          "in" : "query",
          "description" : "Create Transaction For Endorser's signature",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role",
          "required" : false,
          "type" : "string",
          "enum" : [ "STEWARD", "TRUSTEE", "ENDORSER", "NETWORK_MONITOR", "reset" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TxnOrRegisterLedgerNymResponse"
            }
          }
        }
      }
    },
    "/ledger/rotate-public-did-keypair" : {
      "patch" : {
        "tags" : [ "ledger" ],
        "summary" : "Rotate key pair for public DID.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/LedgerModulesResult"
            }
          }
        }
      }
    },
    "/ledger/taa" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Fetch the current transaction author agreement, if any",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TAAResult"
            }
          }
        }
      }
    },
    "/ledger/taa/accept" : {
      "post" : {
        "tags" : [ "ledger" ],
        "summary" : "Accept the transaction author agreement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TAAAccept"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/LedgerModulesResult"
            }
          }
        }
      }
    },
    "/ledger/{ledger_id}/set-write-ledger" : {
      "put" : {
        "tags" : [ "ledger" ],
        "summary" : "Set write ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ledger_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/WriteLedger"
            }
          }
        }
      }
    },
    "/mediation/default-mediator" : {
      "get" : {
        "tags" : [ "mediation" ],
        "summary" : "Get default mediator",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MediationRecord"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "mediation" ],
        "summary" : "Clear default mediator",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "201" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MediationRecord"
            }
          }
        }
      }
    },
    "/mediation/keylists" : {
      "get" : {
        "tags" : [ "mediation" ],
        "summary" : "Retrieve keylists by connection or role",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier (optional)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Filer on role, 'client' for keys mediated by other agents, 'server' for keys mediated by this agent",
          "required" : false,
          "type" : "string",
          "default" : "server",
          "enum" : [ "client", "server" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/Keylist"
            }
          }
        }
      }
    },
    "/mediation/keylists/{mediation_id}/send-keylist-query" : {
      "post" : {
        "tags" : [ "mediation" ],
        "summary" : "Send keylist query to mediator",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/KeylistQueryFilterRequest"
          }
        }, {
          "name" : "mediation_id",
          "in" : "path",
          "description" : "Mediation record identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "paginate_limit",
          "in" : "query",
          "description" : "limit number of results",
          "required" : false,
          "type" : "integer",
          "default" : -1
        }, {
          "name" : "paginate_offset",
          "in" : "query",
          "description" : "offset to use in pagination",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "201" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/KeylistQuery"
            }
          }
        }
      }
    },
    "/mediation/keylists/{mediation_id}/send-keylist-update" : {
      "post" : {
        "tags" : [ "mediation" ],
        "summary" : "Send keylist update to mediator",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/KeylistUpdateRequest"
          }
        }, {
          "name" : "mediation_id",
          "in" : "path",
          "description" : "Mediation record identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/KeylistUpdate"
            }
          }
        }
      }
    },
    "/mediation/request/{conn_id}" : {
      "post" : {
        "tags" : [ "mediation" ],
        "summary" : "Request mediation from connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MediationCreateRequest"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MediationRecord"
            }
          }
        }
      }
    },
    "/mediation/requests" : {
      "get" : {
        "tags" : [ "mediation" ],
        "summary" : "Query mediation requests, returns list of all mediation records",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier (optional)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Mediation state (optional)",
          "required" : false,
          "type" : "string",
          "enum" : [ "request", "granted", "denied" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MediationList"
            }
          }
        }
      }
    },
    "/mediation/requests/{mediation_id}" : {
      "get" : {
        "tags" : [ "mediation" ],
        "summary" : "Retrieve mediation request record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "mediation_id",
          "in" : "path",
          "description" : "Mediation record identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MediationRecord"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "mediation" ],
        "summary" : "Delete mediation request by ID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "mediation_id",
          "in" : "path",
          "description" : "Mediation record identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MediationRecord"
            }
          }
        }
      }
    },
    "/mediation/requests/{mediation_id}/deny" : {
      "post" : {
        "tags" : [ "mediation" ],
        "summary" : "Deny a stored mediation request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AdminMediationDeny"
          }
        }, {
          "name" : "mediation_id",
          "in" : "path",
          "description" : "Mediation record identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MediationDeny"
            }
          }
        }
      }
    },
    "/mediation/requests/{mediation_id}/grant" : {
      "post" : {
        "tags" : [ "mediation" ],
        "summary" : "Grant received mediation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "mediation_id",
          "in" : "path",
          "description" : "Mediation record identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MediationGrant"
            }
          }
        }
      }
    },
    "/mediation/update-keylist/{conn_id}" : {
      "post" : {
        "tags" : [ "mediation" ],
        "summary" : "Update keylist for a connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MediationIdMatchInfo"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/KeylistUpdate"
            }
          }
        }
      }
    },
    "/mediation/{mediation_id}/default-mediator" : {
      "put" : {
        "tags" : [ "mediation" ],
        "summary" : "Set default mediator",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "mediation_id",
          "in" : "path",
          "description" : "Mediation record identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MediationRecord"
            }
          }
        }
      }
    },
    "/multitenancy/wallet" : {
      "post" : {
        "tags" : [ "multitenancy" ],
        "summary" : "Create a subwallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateWalletRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CreateWalletResponse"
            }
          }
        }
      }
    },
    "/multitenancy/wallet/{wallet_id}" : {
      "get" : {
        "tags" : [ "multitenancy" ],
        "summary" : "Get a single subwallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "wallet_id",
          "in" : "path",
          "description" : "Subwallet identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/WalletRecord"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "multitenancy" ],
        "summary" : "Update a subwallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateWalletRequest"
          }
        }, {
          "name" : "wallet_id",
          "in" : "path",
          "description" : "Subwallet identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/WalletRecord"
            }
          }
        }
      }
    },
    "/multitenancy/wallet/{wallet_id}/remove" : {
      "post" : {
        "tags" : [ "multitenancy" ],
        "summary" : "Remove a subwallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RemoveWalletRequest"
          }
        }, {
          "name" : "wallet_id",
          "in" : "path",
          "description" : "Subwallet identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MultitenantModuleResponse"
            }
          }
        }
      }
    },
    "/multitenancy/wallet/{wallet_id}/token" : {
      "post" : {
        "tags" : [ "multitenancy" ],
        "summary" : "Get auth token for a subwallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateWalletTokenRequest"
          }
        }, {
          "name" : "wallet_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CreateWalletTokenResponse"
            }
          }
        }
      }
    },
    "/multitenancy/wallets" : {
      "get" : {
        "tags" : [ "multitenancy" ],
        "summary" : "Query subwallets",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "descending",
          "in" : "query",
          "description" : "Order results in descending order if true",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results to return",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "maximum" : 10000,
          "minimum" : 1
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset for pagination",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "The column to order results by. Only \"id\" is currently supported.",
          "required" : false,
          "type" : "string",
          "default" : "id",
          "enum" : [ "id" ]
        }, {
          "name" : "wallet_name",
          "in" : "query",
          "description" : "Wallet name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/WalletList"
            }
          }
        }
      }
    },
    "/out-of-band/create-invitation" : {
      "post" : {
        "tags" : [ "out-of-band" ],
        "summary" : "Create a new connection invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InvitationCreateRequest"
          }
        }, {
          "name" : "auto_accept",
          "in" : "query",
          "description" : "Auto-accept connection (defaults to configuration)",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "create_unique_did",
          "in" : "query",
          "description" : "Create unique DID for this invitation (default false)",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "multi_use",
          "in" : "query",
          "description" : "Create invitation for multiple use (default false)",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/InvitationRecord"
            }
          }
        }
      }
    },
    "/out-of-band/invitations" : {
      "get" : {
        "tags" : [ "out-of-band" ],
        "summary" : "Fetch an existing Out-of-Band invitation.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "oob_id",
          "in" : "query",
          "description" : "The Out of Band id to fetch",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/InvitationRecordResponse"
            }
          }
        }
      }
    },
    "/out-of-band/invitations/{invi_msg_id}" : {
      "delete" : {
        "tags" : [ "out-of-band" ],
        "summary" : "Delete records associated with invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "invi_msg_id",
          "in" : "path",
          "description" : "Invitation Message identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/InvitationRecordResponse"
            }
          }
        }
      }
    },
    "/out-of-band/receive-invitation" : {
      "post" : {
        "tags" : [ "out-of-band" ],
        "summary" : "Receive a new connection invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InvitationMessage"
          }
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Alias for connection",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "auto_accept",
          "in" : "query",
          "description" : "Auto-accept connection (defaults to configuration)",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "mediation_id",
          "in" : "query",
          "description" : "Identifier for active mediation record to be used",
          "required" : false,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }, {
          "name" : "use_existing_connection",
          "in" : "query",
          "description" : "Use an existing connection, if possible",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/OobRecord"
            }
          }
        }
      }
    },
    "/plugins" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Fetch the list of loaded plugins",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AdminModules"
            }
          }
        }
      }
    },
    "/present-proof-2.0/create-request" : {
      "post" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Creates a presentation request not bound to any proposal or connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20PresCreateRequestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20PresExRecord"
            }
          }
        }
      }
    },
    "/present-proof-2.0/records" : {
      "get" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Fetch all present-proof exchange records",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connection_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "descending",
          "in" : "query",
          "description" : "Order results in descending order if true",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results to return",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "maximum" : 10000,
          "minimum" : 1
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset for pagination",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "The column to order results by. Only \"id\" is currently supported.",
          "required" : false,
          "type" : "string",
          "default" : "id",
          "enum" : [ "id" ]
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role assigned in presentation exchange",
          "required" : false,
          "type" : "string",
          "enum" : [ "prover", "verifier" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Presentation exchange state",
          "required" : false,
          "type" : "string",
          "enum" : [ "proposal-sent", "proposal-received", "request-sent", "request-received", "presentation-sent", "presentation-received", "done", "abandoned" ]
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "Thread identifier",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20PresExRecordList"
            }
          }
        }
      }
    },
    "/present-proof-2.0/records/{pres_ex_id}" : {
      "get" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Fetch a single presentation exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20PresExRecord"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Remove an existing presentation exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20PresentProofModuleResponse"
            }
          }
        }
      }
    },
    "/present-proof-2.0/records/{pres_ex_id}/credentials" : {
      "get" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Fetch credentials from wallet for presentation request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum number to retrieve (DEPRECATED - use limit instead)",
          "required" : false,
          "type" : "string",
          "default" : "10",
          "pattern" : "^[1-9][0-9]*$"
        }, {
          "name" : "extra_query",
          "in" : "query",
          "description" : "(JSON) object mapping referents to extra WQL queries",
          "required" : false,
          "type" : "string",
          "pattern" : "^{\\s*\".*?\"\\s*:\\s*{.*?}\\s*(,\\s*\".*?\"\\s*:\\s*{.*?}\\s*)*\\s*}$"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results to return",
          "required" : false,
          "type" : "integer",
          "maximum" : 10000,
          "minimum" : 1
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset for pagination",
          "required" : false,
          "type" : "integer",
          "minimum" : 0
        }, {
          "name" : "referent",
          "in" : "query",
          "description" : "Proof request referents of interest, comma-separated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start index (DEPRECATED - use offset instead)",
          "required" : false,
          "type" : "string",
          "default" : "0",
          "pattern" : "^[0-9]*$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IndyCredPrecis"
              }
            }
          }
        }
      }
    },
    "/present-proof-2.0/records/{pres_ex_id}/problem-report" : {
      "post" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Send a problem report for presentation exchange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20PresProblemReportRequest"
          }
        }, {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20PresentProofModuleResponse"
            }
          }
        }
      }
    },
    "/present-proof-2.0/records/{pres_ex_id}/send-presentation" : {
      "post" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Sends a proof presentation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20PresSpecByFormatRequest"
          }
        }, {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20PresExRecord"
            }
          }
        }
      }
    },
    "/present-proof-2.0/records/{pres_ex_id}/send-request" : {
      "post" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Sends a presentation request in reference to a proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20PresentationSendRequestToProposal"
          }
        }, {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20PresExRecord"
            }
          }
        }
      }
    },
    "/present-proof-2.0/records/{pres_ex_id}/verify-presentation" : {
      "post" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Verify a received presentation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20PresExRecord"
            }
          }
        }
      }
    },
    "/present-proof-2.0/send-proposal" : {
      "post" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Sends a presentation proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20PresProposalRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20PresExRecord"
            }
          }
        }
      }
    },
    "/present-proof-2.0/send-request" : {
      "post" : {
        "tags" : [ "present-proof v2.0" ],
        "summary" : "Sends a free presentation request not bound to any proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V20PresSendRequestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V20PresExRecord"
            }
          }
        }
      }
    },
    "/present-proof/create-request" : {
      "post" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Creates a presentation request not bound to any proposal or connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationCreateRequestRequest"
          }
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/present-proof/records" : {
      "get" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Fetch all present-proof exchange records",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connection_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "descending",
          "in" : "query",
          "description" : "Order results in descending order if true",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results to return",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "maximum" : 10000,
          "minimum" : 1
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset for pagination",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "minimum" : 0
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "The column to order results by. Only \"id\" is currently supported.",
          "required" : false,
          "type" : "string",
          "default" : "id",
          "enum" : [ "id" ]
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role assigned in presentation exchange",
          "required" : false,
          "type" : "string",
          "enum" : [ "prover", "verifier" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Presentation exchange state",
          "required" : false,
          "type" : "string",
          "enum" : [ "proposal_sent", "proposal_received", "request_sent", "request_received", "presentation_sent", "presentation_received", "verified", "presentation_acked", "abandoned" ]
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "Thread identifier",
          "required" : false,
          "type" : "string"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchangeList"
            }
          }
        }
      }
    },
    "/present-proof/records/{pres_ex_id}" : {
      "get" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Fetch a single presentation exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Remove an existing presentation exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10PresentProofModuleResponse"
            }
          }
        }
      }
    },
    "/present-proof/records/{pres_ex_id}/credentials" : {
      "get" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Fetch credentials for a presentation request from wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum number to retrieve (DEPRECATED - use limit instead)",
          "required" : false,
          "type" : "string",
          "default" : "10",
          "pattern" : "^[1-9][0-9]*$"
        }, {
          "name" : "extra_query",
          "in" : "query",
          "description" : "(JSON) object mapping referents to extra WQL queries",
          "required" : false,
          "type" : "string",
          "pattern" : "^{\\s*\".*?\"\\s*:\\s*{.*?}\\s*(,\\s*\".*?\"\\s*:\\s*{.*?}\\s*)*\\s*}$"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results to return",
          "required" : false,
          "type" : "integer",
          "maximum" : 10000,
          "minimum" : 1
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset for pagination",
          "required" : false,
          "type" : "integer",
          "minimum" : 0
        }, {
          "name" : "referent",
          "in" : "query",
          "description" : "Proof request referents of interest, comma-separated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start index (DEPRECATED - use offset instead)",
          "required" : false,
          "type" : "string",
          "default" : "0",
          "pattern" : "^[0-9]*$"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IndyCredPrecis"
              }
            }
          }
        }
      }
    },
    "/present-proof/records/{pres_ex_id}/problem-report" : {
      "post" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Send a problem report for presentation exchange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationProblemReportRequest"
          }
        }, {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10PresentProofModuleResponse"
            }
          }
        }
      }
    },
    "/present-proof/records/{pres_ex_id}/send-presentation" : {
      "post" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Sends a proof presentation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationSendRequest"
          }
        }, {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/present-proof/records/{pres_ex_id}/send-request" : {
      "post" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Sends a presentation request in reference to a proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationSendRequestToProposal"
          }
        }, {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/present-proof/records/{pres_ex_id}/verify-presentation" : {
      "post" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Verify a received presentation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/present-proof/send-proposal" : {
      "post" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Sends a presentation proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationProposalRequest"
          }
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/present-proof/send-request" : {
      "post" : {
        "tags" : [ "present-proof v1.0" ],
        "summary" : "Sends a free presentation request not bound to any proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationSendRequestRequest"
          }
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/resolver/resolve/{did}" : {
      "get" : {
        "tags" : [ "resolver" ],
        "summary" : "Retrieve doc for requested did",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "DID",
          "required" : true,
          "type" : "string",
          "pattern" : "^did:([a-z0-9]+):((?:[a-zA-Z0-9._%-]*:)*[a-zA-Z0-9._%-]+)$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ResolutionResult"
            }
          }
        }
      }
    },
    "/revocation/active-registry/{cred_def_id}" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Get current active revocation registry by credential definition id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "path",
          "description" : "Credential definition identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/revocation/active-registry/{cred_def_id}/rotate" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Rotate revocation registry",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "path",
          "description" : "Credential definition identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegsCreated"
            }
          }
        }
      }
    },
    "/revocation/clear-pending-revocations" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Clear pending revocations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClearPendingRevocationsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PublishRevocations"
            }
          }
        }
      }
    },
    "/revocation/create-registry" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Creates a new revocation registry",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RevRegCreateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/revocation/credential-record" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Get credential revocation status",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "query",
          "description" : "Credential exchange identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }, {
          "name" : "cred_rev_id",
          "in" : "query",
          "description" : "Credential revocation identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^[1-9][0-9]*$"
        }, {
          "name" : "rev_reg_id",
          "in" : "query",
          "description" : "Revocation registry identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredRevRecordResult"
            }
          }
        }
      }
    },
    "/revocation/publish-revocations" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Publish pending revocations to ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PublishRevocations"
          }
        }, {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create_transaction_for_endorser",
          "in" : "query",
          "description" : "Create Transaction For Endorser's signature",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TxnOrPublishRevocationsResult"
            }
          }
        }
      }
    },
    "/revocation/registries/created" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Search for matching revocation registries that current agent created",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "query",
          "description" : "Credential definition identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Revocation registry state",
          "required" : false,
          "type" : "string",
          "enum" : [ "init", "generated", "posted", "active", "full", "decommissioned" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegsCreated"
            }
          }
        }
      }
    },
    "/revocation/registry/delete-tails-file" : {
      "delete" : {
        "tags" : [ "revocation" ],
        "summary" : "Delete the tail files",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "query",
          "description" : "Credential definition identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        }, {
          "name" : "rev_reg_id",
          "in" : "query",
          "description" : "Revocation registry identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TailsDeleteResponse"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Get revocation registry by revocation registry id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "revocation" ],
        "summary" : "Update revocation registry with new public URI to its tails file",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RevRegUpdateTailsFileUri"
          }
        }, {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/definition" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Send revocation registry definition to ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        }, {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create_transaction_for_endorser",
          "in" : "query",
          "description" : "Create Transaction For Endorser's signature",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TxnOrRevRegResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/entry" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Send revocation registry entry to ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        }, {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create_transaction_for_endorser",
          "in" : "query",
          "description" : "Create Transaction For Endorser's signature",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/fix-revocation-entry-state" : {
      "put" : {
        "tags" : [ "revocation" ],
        "summary" : "Fix revocation state in wallet and return number of updated entries",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        }, {
          "name" : "apply_ledger_update",
          "in" : "query",
          "description" : "Apply updated accumulator transaction to ledger",
          "required" : true,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegWalletUpdatedResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/issued" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Get number of credentials issued against revocation registry",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegIssuedResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/issued/details" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Get details of credentials issued against revocation registry",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredRevRecordDetailsResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/issued/indy_recs" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Get details of revoked credentials from ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CredRevIndyRecordsResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/set-state" : {
      "patch" : {
        "tags" : [ "revocation" ],
        "summary" : "Set revocation registry state manually",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Revocation registry state to set",
          "required" : true,
          "type" : "string",
          "enum" : [ "init", "generated", "posted", "active", "full" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/tails-file" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Download tails file",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "tails file",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "revocation" ],
        "summary" : "Upload local tails file to server",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevocationModuleResponse"
            }
          }
        }
      }
    },
    "/revocation/revoke" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Revoke an issued credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RevokeRequest"
          }
        }, {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create_transaction_for_endorser",
          "in" : "query",
          "description" : "Create Transaction For Endorser's signature",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RevocationModuleResponse"
            }
          }
        }
      }
    },
    "/schemas" : {
      "post" : {
        "tags" : [ "schema" ],
        "summary" : "Sends a schema to the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SchemaSendRequest"
          }
        }, {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create_transaction_for_endorser",
          "in" : "query",
          "description" : "Create Transaction For Endorser's signature",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TxnOrSchemaSendResult"
            }
          }
        }
      }
    },
    "/schemas/created" : {
      "get" : {
        "tags" : [ "schema" ],
        "summary" : "Search for matching schema that agent originated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema_id",
          "in" : "query",
          "description" : "Schema identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        }, {
          "name" : "schema_issuer_did",
          "in" : "query",
          "description" : "Schema issuer DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "schema_name",
          "in" : "query",
          "description" : "Schema name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema_version",
          "in" : "query",
          "description" : "Schema version",
          "required" : false,
          "type" : "string",
          "pattern" : "^[0-9.]+$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/SchemasCreatedResult"
            }
          }
        }
      }
    },
    "/schemas/{schema_id}" : {
      "get" : {
        "tags" : [ "schema" ],
        "summary" : "Gets a schema from the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema_id",
          "in" : "path",
          "description" : "Schema identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^[1-9][0-9]*|[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/SchemaGetResult"
            }
          }
        }
      }
    },
    "/schemas/{schema_id}/write_record" : {
      "post" : {
        "tags" : [ "schema" ],
        "summary" : "Writes a schema non-secret record to the wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema_id",
          "in" : "path",
          "description" : "Schema identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^[1-9][0-9]*|[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/SchemaGetResult"
            }
          }
        }
      }
    },
    "/settings" : {
      "get" : {
        "tags" : [ "settings" ],
        "summary" : "Get the configurable settings associated with the profile.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProfileSettings"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "settings" ],
        "summary" : "Update configurable settings associated with the profile.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateProfileSettings"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProfileSettings"
            }
          }
        }
      }
    },
    "/shutdown" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Shut down server",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AdminShutdown"
            }
          }
        }
      }
    },
    "/status" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Fetch the server status",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AdminStatus"
            }
          }
        }
      }
    },
    "/status/config" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Fetch the server configuration",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AdminConfig"
            }
          }
        }
      }
    },
    "/status/live" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Liveliness check",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AdminStatusLiveliness"
            }
          }
        }
      }
    },
    "/status/ready" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Readiness check",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AdminStatusReadiness"
            }
          }
        }
      }
    },
    "/status/reset" : {
      "post" : {
        "tags" : [ "server" ],
        "summary" : "Reset statistics",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AdminReset"
            }
          }
        }
      }
    },
    "/transaction/{tran_id}/resend" : {
      "post" : {
        "tags" : [ "endorse-transaction" ],
        "summary" : "For Author to resend a particular transaction request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tran_id",
          "in" : "path",
          "description" : "Transaction identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransactionRecord"
            }
          }
        }
      }
    },
    "/transactions" : {
      "get" : {
        "tags" : [ "endorse-transaction" ],
        "summary" : "Query transactions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransactionList"
            }
          }
        }
      }
    },
    "/transactions/create-request" : {
      "post" : {
        "tags" : [ "endorse-transaction" ],
        "summary" : "For author to send a transaction request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Date"
          }
        }, {
          "name" : "tran_id",
          "in" : "query",
          "description" : "Transaction identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransactionRecord"
            }
          }
        }
      }
    },
    "/transactions/{conn_id}/set-endorser-info" : {
      "post" : {
        "tags" : [ "endorse-transaction" ],
        "summary" : "Set Endorser Info",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "endorser_did",
          "in" : "query",
          "description" : "Endorser DID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "endorser_name",
          "in" : "query",
          "description" : "Endorser Name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/EndorserInfo"
            }
          }
        }
      }
    },
    "/transactions/{conn_id}/set-endorser-role" : {
      "post" : {
        "tags" : [ "endorse-transaction" ],
        "summary" : "Set transaction jobs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transaction_my_job",
          "in" : "query",
          "description" : "Transaction related jobs",
          "required" : false,
          "type" : "string",
          "enum" : [ "TRANSACTION_AUTHOR", "TRANSACTION_ENDORSER", "reset" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransactionJobs"
            }
          }
        }
      }
    },
    "/transactions/{tran_id}" : {
      "get" : {
        "tags" : [ "endorse-transaction" ],
        "summary" : "Fetch a single transaction record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tran_id",
          "in" : "path",
          "description" : "Transaction identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransactionRecord"
            }
          }
        }
      }
    },
    "/transactions/{tran_id}/cancel" : {
      "post" : {
        "tags" : [ "endorse-transaction" ],
        "summary" : "For Author to cancel a particular transaction request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tran_id",
          "in" : "path",
          "description" : "Transaction identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransactionRecord"
            }
          }
        }
      }
    },
    "/transactions/{tran_id}/endorse" : {
      "post" : {
        "tags" : [ "endorse-transaction" ],
        "summary" : "For Endorser to endorse a particular transaction record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tran_id",
          "in" : "path",
          "description" : "Transaction identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "endorser_did",
          "in" : "query",
          "description" : "Endorser DID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransactionRecord"
            }
          }
        }
      }
    },
    "/transactions/{tran_id}/refuse" : {
      "post" : {
        "tags" : [ "endorse-transaction" ],
        "summary" : "For Endorser to refuse a particular transaction record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tran_id",
          "in" : "path",
          "description" : "Transaction identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransactionRecord"
            }
          }
        }
      }
    },
    "/transactions/{tran_id}/write" : {
      "post" : {
        "tags" : [ "endorse-transaction" ],
        "summary" : "For Author / Endorser to write an endorsed transaction to the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tran_id",
          "in" : "path",
          "description" : "Transaction identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/TransactionRecord"
            }
          }
        }
      }
    },
    "/vc/credentials" : {
      "get" : {
        "tags" : [ "vc-api" ],
        "summary" : "List credentials",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ListCredentialsResponse"
            }
          }
        }
      }
    },
    "/vc/credentials/issue" : {
      "post" : {
        "tags" : [ "vc-api" ],
        "summary" : "Issue a credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueCredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/IssueCredentialResponse"
            }
          }
        }
      }
    },
    "/vc/credentials/store" : {
      "post" : {
        "tags" : [ "vc-api" ],
        "summary" : "Store a credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StoreCredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/StoreCredentialResponse"
            }
          }
        }
      }
    },
    "/vc/credentials/verify" : {
      "post" : {
        "tags" : [ "vc-api" ],
        "summary" : "Verify a credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VerifyCredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/VerifyCredentialResponse"
            }
          }
        }
      }
    },
    "/vc/credentials/{credential_id}" : {
      "get" : {
        "tags" : [ "vc-api" ],
        "summary" : "Fetch credential by ID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/FetchCredentialResponse"
            }
          }
        }
      }
    },
    "/vc/di/add-proof" : {
      "post" : {
        "tags" : [ "vc" ],
        "summary" : "Add a DataIntegrityProof to a document.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddProof"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AddProofResponse"
            }
          }
        }
      }
    },
    "/vc/di/verify" : {
      "post" : {
        "tags" : [ "vc" ],
        "summary" : "Verify a document secured with a data integrity proof.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VerifyDiRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/VerifyDiResponse"
            }
          }
        }
      }
    },
    "/vc/presentations/prove" : {
      "post" : {
        "tags" : [ "vc-api" ],
        "summary" : "Prove a presentation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProvePresentationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProvePresentationResponse"
            }
          }
        }
      }
    },
    "/vc/presentations/verify" : {
      "post" : {
        "tags" : [ "vc-api" ],
        "summary" : "Verify a Presentation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VerifyPresentationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/VerifyPresentationResponse"
            }
          }
        }
      }
    },
    "/wallet/did" : {
      "get" : {
        "tags" : [ "wallet" ],
        "summary" : "List wallet DIDs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        }, {
          "name" : "key_type",
          "in" : "query",
          "description" : "Key type to query for.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ed25519", "bls12381g2", "p256" ]
        }, {
          "name" : "method",
          "in" : "query",
          "description" : "DID method to query for. e.g. sov to only fetch indy/sov DIDs",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "posture",
          "in" : "query",
          "description" : "Whether DID is current public DID, posted to ledger but current public DID, or local to the wallet",
          "required" : false,
          "type" : "string",
          "enum" : [ "public", "posted", "wallet_only" ]
        }, {
          "name" : "verkey",
          "in" : "query",
          "description" : "Verification key of interest",
          "required" : false,
          "type" : "string",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/DIDList"
            }
          }
        }
      }
    },
    "/wallet/did/create" : {
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Create a local DID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DIDCreate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/DIDResult"
            }
          }
        }
      }
    },
    "/wallet/did/local/rotate-keypair" : {
      "patch" : {
        "tags" : [ "wallet" ],
        "summary" : "Rotate keypair for a DID not posted to the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/WalletModuleResponse"
            }
          }
        }
      }
    },
    "/wallet/did/public" : {
      "get" : {
        "tags" : [ "wallet" ],
        "summary" : "Fetch the current public DID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/DIDResult"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Assign the current public DID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        }, {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create_transaction_for_endorser",
          "in" : "query",
          "description" : "Create Transaction For Endorser's signature",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "mediation_id",
          "in" : "query",
          "description" : "Mediation identifier",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/DIDResult"
            }
          }
        }
      }
    },
    "/wallet/get-did-endpoint" : {
      "get" : {
        "tags" : [ "wallet" ],
        "summary" : "Query DID endpoint in wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/DIDEndpoint"
            }
          }
        }
      }
    },
    "/wallet/jwt/sign" : {
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Create a jws using did keys with a given payload",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JWSCreate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/WalletModuleResponse"
            }
          }
        }
      }
    },
    "/wallet/jwt/verify" : {
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Verify a jws using did keys with a given JWS",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JWSVerify"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/JWSVerifyResponse"
            }
          }
        }
      }
    },
    "/wallet/keys" : {
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Create a key pair",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateKeyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CreateKeyResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "wallet" ],
        "summary" : "Update a key pair's kid",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateKeyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/UpdateKeyResponse"
            }
          }
        }
      }
    },
    "/wallet/keys/{multikey}" : {
      "get" : {
        "tags" : [ "wallet" ],
        "summary" : "Fetch key info.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "multikey",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/FetchKeyResponse"
            }
          }
        }
      }
    },
    "/wallet/sd-jwt/sign" : {
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Create an sd-jws using did keys with a given payload",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SDJWSCreate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/WalletModuleResponse"
            }
          }
        }
      }
    },
    "/wallet/sd-jwt/verify" : {
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Verify an sd-jws using did keys with a given SD-JWS with optional key binding",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SDJWSVerify"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/SDJWSVerifyResponse"
            }
          }
        }
      }
    },
    "/wallet/set-did-endpoint" : {
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Update endpoint in wallet and on ledger if posted to it",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DIDEndpointWithType"
          }
        }, {
          "name" : "conn_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create_transaction_for_endorser",
          "in" : "query",
          "description" : "Create Transaction For Endorser's signature",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/WalletModuleResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "AuthorizationHeader" : {
      "description" : "Bearer token. Be sure to prepend token with 'Bearer '",
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "AMLRecord" : {
      "type" : "object",
      "properties" : {
        "aml" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "amlContext" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ActionMenuFetchResult" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/ActionMenuFetchResult_result"
        }
      }
    },
    "ActionMenuModulesResult" : {
      "type" : "object"
    },
    "AddProof" : {
      "type" : "object",
      "required" : [ "document" ],
      "properties" : {
        "document" : {
          "type" : "object",
          "example" : {
            "hello" : "world"
          },
          "additionalProperties" : { }
        },
        "options" : {
          "$ref" : "#/definitions/AddProof_options"
        }
      }
    },
    "AddProofResponse" : {
      "type" : "object",
      "required" : [ "secured_document" ],
      "properties" : {
        "secured_document" : {
          "type" : "object",
          "example" : {
            "hello" : "world"
          },
          "additionalProperties" : { }
        }
      }
    },
    "AdminConfig" : {
      "type" : "object",
      "required" : [ "config" ],
      "properties" : {
        "config" : {
          "type" : "object",
          "description" : "Configuration settings",
          "additionalProperties" : { }
        }
      }
    },
    "AdminMediationDeny" : {
      "type" : "object"
    },
    "AdminModules" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "array",
          "description" : "List of admin modules",
          "items" : {
            "type" : "string",
            "description" : "admin module"
          }
        }
      }
    },
    "AdminReset" : {
      "type" : "object"
    },
    "AdminShutdown" : {
      "type" : "object"
    },
    "AdminStatus" : {
      "type" : "object",
      "properties" : {
        "conductor" : {
          "type" : "object",
          "description" : "Conductor statistics",
          "additionalProperties" : { }
        },
        "label" : {
          "type" : "string",
          "description" : "Default label",
          "x-nullable" : true
        },
        "timing" : {
          "type" : "object",
          "description" : "Timing results",
          "additionalProperties" : { }
        },
        "version" : {
          "type" : "string",
          "description" : "Version code"
        }
      }
    },
    "AdminStatusLiveliness" : {
      "type" : "object",
      "properties" : {
        "alive" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Liveliness status"
        }
      }
    },
    "AdminStatusReadiness" : {
      "type" : "object",
      "properties" : {
        "ready" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Readiness status"
        }
      }
    },
    "AnonCredsPresSpec" : {
      "type" : "object",
      "required" : [ "requested_attributes", "requested_predicates", "self_attested_attributes" ],
      "properties" : {
        "requested_attributes" : {
          "type" : "object",
          "description" : "Nested object mapping proof request attribute referents to requested-attribute specifiers",
          "additionalProperties" : {
            "$ref" : "#/definitions/AnonCredsRequestedCredsRequestedAttr"
          }
        },
        "requested_predicates" : {
          "type" : "object",
          "description" : "Nested object mapping proof request predicate referents to requested-predicate specifiers",
          "additionalProperties" : {
            "$ref" : "#/definitions/AnonCredsRequestedCredsRequestedPred"
          }
        },
        "self_attested_attributes" : {
          "type" : "object",
          "description" : "Self-attested attributes to build into proof",
          "additionalProperties" : {
            "type" : "string",
            "example" : "self_attested_value",
            "description" : "Self-attested attribute values to use in requested-credentials structure for proof construction"
          }
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "AnonCredsPresentationReqAttrSpec" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "favouriteDrink",
          "description" : "Attribute name"
        },
        "names" : {
          "type" : "array",
          "description" : "Attribute name group",
          "items" : {
            "type" : "string",
            "example" : "age"
          }
        },
        "non_revoked" : {
          "$ref" : "#/definitions/AnonCredsPresentationReqAttrSpecNonRevoked"
        },
        "restrictions" : {
          "type" : "array",
          "description" : "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "example" : "did:(method):3:CL:20:tag"
            }
          }
        }
      }
    },
    "AnonCredsPresentationReqAttrSpecNonRevoked" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Earliest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        },
        "to" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Latest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "AnonCredsPresentationReqPredSpec" : {
      "type" : "object",
      "required" : [ "name", "p_type", "p_value" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "index",
          "description" : "Attribute name"
        },
        "non_revoked" : {
          "$ref" : "#/definitions/AnonCredsPresentationReqPredSpecNonRevoked"
        },
        "p_type" : {
          "type" : "string",
          "example" : ">=",
          "description" : "Predicate type ('<', '<=', '>=', or '>')",
          "enum" : [ "<", "<=", ">=", ">" ]
        },
        "p_value" : {
          "type" : "integer",
          "description" : "Threshold value"
        },
        "restrictions" : {
          "type" : "array",
          "description" : "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "example" : "did:(method):3:CL:20:tag"
            }
          }
        }
      }
    },
    "AnonCredsPresentationReqPredSpecNonRevoked" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Earliest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        },
        "to" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Latest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "AnonCredsPresentationRequest" : {
      "type" : "object",
      "required" : [ "requested_attributes", "requested_predicates" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Proof request",
          "description" : "Proof request name"
        },
        "non_revoked" : {
          "$ref" : "#/definitions/AnonCredsPresentationRequestNonRevoked"
        },
        "nonce" : {
          "type" : "string",
          "example" : "1",
          "description" : "Nonce",
          "pattern" : "^[1-9][0-9]*$"
        },
        "requested_attributes" : {
          "type" : "object",
          "description" : "Requested attribute specifications of proof request",
          "additionalProperties" : {
            "$ref" : "#/definitions/AnonCredsPresentationReqAttrSpec"
          }
        },
        "requested_predicates" : {
          "type" : "object",
          "description" : "Requested predicate specifications of proof request",
          "additionalProperties" : {
            "$ref" : "#/definitions/AnonCredsPresentationReqPredSpec"
          }
        },
        "version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Proof request version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "AnonCredsPresentationRequestNonRevoked" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Earliest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        },
        "to" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Latest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "AnonCredsRequestedCredsRequestedAttr" : {
      "type" : "object",
      "required" : [ "cred_id" ],
      "properties" : {
        "cred_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Wallet credential identifier (typically but not necessarily a UUID)"
        },
        "revealed" : {
          "type" : "boolean",
          "description" : "Whether to reveal attribute in proof (default true)"
        }
      }
    },
    "AnonCredsRequestedCredsRequestedPred" : {
      "type" : "object",
      "required" : [ "cred_id" ],
      "properties" : {
        "cred_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Wallet credential identifier (typically but not necessarily a UUID)"
        },
        "timestamp" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Epoch timestamp of interest for non-revocation proof",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "AnonCredsRevocationModuleResponse" : {
      "type" : "object"
    },
    "AnonCredsSchema" : {
      "type" : "object",
      "required" : [ "attrNames", "issuerId", "name", "version" ],
      "properties" : {
        "attrNames" : {
          "type" : "array",
          "description" : "Schema attribute names",
          "items" : {
            "type" : "string",
            "example" : "score",
            "description" : "Attribute name"
          }
        },
        "issuerId" : {
          "type" : "string",
          "example" : "did:(method):WgWxqztrNooG92RXvxSTWv",
          "description" : "Issuer Identifier of the credential definition or schema"
        },
        "name" : {
          "type" : "string",
          "example" : "Example schema",
          "description" : "Schema name"
        },
        "version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version"
        }
      }
    },
    "AttachDecorator" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Attachment identifier"
        },
        "byte_count" : {
          "type" : "integer",
          "example" : 1234,
          "description" : "Byte count of data included by reference"
        },
        "data" : {
          "$ref" : "#/definitions/AttachDecoratorData"
        },
        "description" : {
          "type" : "string",
          "example" : "view from doorway, facing east, with lights off",
          "description" : "Human-readable description of content"
        },
        "filename" : {
          "type" : "string",
          "example" : "IMG1092348.png",
          "description" : "File name"
        },
        "lastmod_time" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Hint regarding last modification datetime, in ISO-8601 format",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "mime-type" : {
          "type" : "string",
          "example" : "image/png",
          "description" : "MIME type"
        }
      }
    },
    "AttachDecoratorData" : {
      "type" : "object",
      "properties" : {
        "base64" : {
          "type" : "string",
          "example" : "ey4uLn0=",
          "description" : "Base64-encoded data",
          "pattern" : "^[a-zA-Z0-9+/]*={0,2}$"
        },
        "json" : {
          "example" : "{\"sample\": \"content\"}",
          "description" : "JSON-serialized data"
        },
        "jws" : {
          "$ref" : "#/definitions/AttachDecoratorData_jws"
        },
        "links" : {
          "type" : "array",
          "description" : "List of hypertext links to data",
          "items" : {
            "type" : "string",
            "example" : "https://link.to/data"
          }
        },
        "sha256" : {
          "type" : "string",
          "example" : "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
          "description" : "SHA256 hash (binhex encoded) of content",
          "pattern" : "^[a-fA-F0-9+/]{64}$"
        }
      }
    },
    "AttachDecoratorData1JWS" : {
      "type" : "object",
      "required" : [ "header", "signature" ],
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/AttachDecoratorDataJWSHeader"
        },
        "protected" : {
          "type" : "string",
          "example" : "ey4uLn0",
          "description" : "protected JWS header",
          "pattern" : "^[-_a-zA-Z0-9]*$"
        },
        "signature" : {
          "type" : "string",
          "example" : "ey4uLn0",
          "description" : "signature",
          "pattern" : "^[-_a-zA-Z0-9]*$"
        }
      }
    },
    "AttachDecoratorDataJWS" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/AttachDecoratorDataJWSHeader"
        },
        "protected" : {
          "type" : "string",
          "example" : "ey4uLn0",
          "description" : "protected JWS header",
          "pattern" : "^[-_a-zA-Z0-9]*$"
        },
        "signature" : {
          "type" : "string",
          "example" : "ey4uLn0",
          "description" : "signature",
          "pattern" : "^[-_a-zA-Z0-9]*$"
        },
        "signatures" : {
          "type" : "array",
          "description" : "List of signatures",
          "items" : {
            "$ref" : "#/definitions/AttachDecoratorData1JWS"
          }
        }
      }
    },
    "AttachDecoratorDataJWSHeader" : {
      "type" : "object",
      "required" : [ "kid" ],
      "properties" : {
        "kid" : {
          "type" : "string",
          "example" : "did:sov:LjgpST2rjsoxYegQDRm7EL#keys-4",
          "description" : "Key identifier, in W3C did:key or DID URL format",
          "pattern" : "^did:(?:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+|sov:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}(;.*)?(\\?.*)?#.+)$"
        }
      }
    },
    "AttachmentDef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "attachment-0",
          "description" : "Attachment identifier"
        },
        "type" : {
          "type" : "string",
          "example" : "present-proof",
          "description" : "Attachment type",
          "enum" : [ "credential-offer", "present-proof" ]
        }
      }
    },
    "AttributeMimeTypesResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string",
            "description" : "MIME type"
          },
          "x-nullable" : true
        }
      }
    },
    "BasicMessageModuleResponse" : {
      "type" : "object"
    },
    "ClaimFormat" : {
      "type" : "object",
      "properties" : {
        "di_vc" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "jwt" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "jwt_vc" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "jwt_vp" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "ldp" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "ldp_vc" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "ldp_vp" : {
          "type" : "object",
          "additionalProperties" : { }
        }
      }
    },
    "ClearPendingRevocationsRequest" : {
      "type" : "object",
      "properties" : {
        "purge" : {
          "type" : "object",
          "description" : "Credential revocation ids by revocation registry id: omit for all, specify null or empty list for all pending per revocation registry",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "12345",
              "description" : "Credential revocation identifier",
              "pattern" : "^[1-9][0-9]*$"
            }
          }
        }
      }
    },
    "ConfigurableWriteLedgers" : {
      "type" : "object",
      "properties" : {
        "write_ledgers" : {
          "type" : "array",
          "description" : "List of configurable write ledgers identifiers",
          "items" : {
            "type" : "string",
            "description" : "Ledgers identifiers"
          }
        }
      }
    },
    "ConnRecord" : {
      "type" : "object",
      "required" : [ "connection_id" ],
      "properties" : {
        "accept" : {
          "type" : "string",
          "example" : "auto",
          "description" : "Connection acceptance: manual or auto",
          "enum" : [ "manual", "auto" ]
        },
        "alias" : {
          "type" : "string",
          "example" : "Bob, providing quotes",
          "description" : "Optional alias to apply to connection for later use"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "connection_protocol" : {
          "type" : "string",
          "example" : "didexchange/1.1",
          "description" : "Connection protocol used",
          "enum" : [ "didexchange/1.0", "didexchange/1.1" ]
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "error_msg" : {
          "type" : "string",
          "example" : "No DIDDoc provided; cannot connect to public DID",
          "description" : "Error message"
        },
        "inbound_connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Inbound routing connection id to use"
        },
        "invitation_key" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "Public key for connection",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        },
        "invitation_mode" : {
          "type" : "string",
          "example" : "once",
          "description" : "Invitation mode",
          "enum" : [ "once", "multi", "static" ]
        },
        "invitation_msg_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "ID of out-of-band invitation message"
        },
        "my_did" : {
          "type" : "string",
          "example" : "did:peer:WgWxqztrNooG92RXvxSTWv",
          "description" : "Our DID for connection",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        },
        "request_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection request identifier"
        },
        "rfc23_state" : {
          "type" : "string",
          "example" : "invitation-sent",
          "description" : "State per RFC 23",
          "readOnly" : true
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "their_did" : {
          "type" : "string",
          "example" : "did:peer:WgWxqztrNooG92RXvxSTWv",
          "description" : "Their DID for connection",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        },
        "their_label" : {
          "type" : "string",
          "example" : "Bob",
          "description" : "Their label for connection"
        },
        "their_public_did" : {
          "type" : "string",
          "example" : "2cpBmR3FqGKWi5EyUbpRY8",
          "description" : "Other agent's public DID for connection"
        },
        "their_role" : {
          "type" : "string",
          "example" : "requester",
          "description" : "Their role in the connection protocol",
          "enum" : [ "invitee", "requester", "inviter", "responder" ]
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "ConnectionList" : {
      "type" : "object",
      "required" : [ "results" ],
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "List of connection records",
          "items" : {
            "$ref" : "#/definitions/ConnRecord"
          }
        }
      }
    },
    "ConnectionMetadata" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "object",
          "description" : "Dictionary of metadata associated with connection.",
          "additionalProperties" : { }
        }
      }
    },
    "ConnectionMetadataSetRequest" : {
      "type" : "object",
      "required" : [ "metadata" ],
      "properties" : {
        "metadata" : {
          "type" : "object",
          "description" : "Dictionary of metadata to set for connection.",
          "additionalProperties" : { }
        }
      }
    },
    "ConnectionModuleResponse" : {
      "type" : "object"
    },
    "ConnectionStaticRequest" : {
      "type" : "object",
      "properties" : {
        "alias" : {
          "type" : "string",
          "description" : "Alias to assign to this connection"
        },
        "my_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Local DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "my_seed" : {
          "type" : "string",
          "description" : "Seed to use for the local DID"
        },
        "their_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Remote DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "their_endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "URL endpoint for other party",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        },
        "their_label" : {
          "type" : "string",
          "description" : "Other party's label for this connection"
        },
        "their_seed" : {
          "type" : "string",
          "description" : "Seed to use for the remote DID"
        },
        "their_verkey" : {
          "type" : "string",
          "description" : "Remote verification key"
        }
      }
    },
    "ConnectionStaticResult" : {
      "type" : "object",
      "required" : [ "my_did", "my_endpoint", "my_verkey", "record", "their_did", "their_verkey" ],
      "properties" : {
        "my_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Local DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "my_endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "My URL endpoint",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        },
        "my_verkey" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "My verification key",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        },
        "record" : {
          "$ref" : "#/definitions/ConnRecord"
        },
        "their_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Remote DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "their_verkey" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "Remote verification key",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        }
      }
    },
    "Constraints" : {
      "type" : "object",
      "properties" : {
        "fields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DIFField"
          }
        },
        "is_holder" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DIFHolder"
          }
        },
        "limit_disclosure" : {
          "type" : "string",
          "description" : "LimitDisclosure"
        },
        "status_active" : {
          "type" : "string",
          "enum" : [ "required", "allowed", "disallowed" ]
        },
        "status_revoked" : {
          "type" : "string",
          "enum" : [ "required", "allowed", "disallowed" ]
        },
        "status_suspended" : {
          "type" : "string",
          "enum" : [ "required", "allowed", "disallowed" ]
        },
        "subject_is_issuer" : {
          "type" : "string",
          "description" : "SubjectIsIssuer",
          "enum" : [ "required", "preferred" ]
        }
      }
    },
    "CreateDidIndyRequest" : {
      "type" : "object",
      "properties" : {
        "features" : {
          "type" : "object",
          "example" : "{}",
          "description" : "Additional features to enable for the did.",
          "additionalProperties" : { }
        },
        "options" : {
          "type" : "object",
          "example" : {
            "did" : "did:indy:WRfXPg8dantKVubE3HX8pw",
            "key_type" : "ed25519",
            "seed" : "000000000000000000000000Trustee1"
          },
          "description" : "Additional configuration options. Supported options: did, seed, key_type. Default key_type is ed25519.",
          "additionalProperties" : { }
        }
      }
    },
    "CreateDidIndyResponse" : {
      "type" : "object",
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "did:indy:DFZgMggBEXcZFVQ2ZBTwdr",
          "description" : "DID created"
        },
        "verkey" : {
          "type" : "string",
          "example" : "BnSWTUQmdYCewSGFrRUhT6LmKdcCcSzRGqWXMPnEP168",
          "description" : "Verification key"
        }
      }
    },
    "CreateKeyRequest" : {
      "type" : "object",
      "properties" : {
        "alg" : {
          "type" : "string",
          "example" : "ed25519",
          "description" : "Which key algorithm to use."
        },
        "kid" : {
          "type" : "string",
          "example" : "did:web:example.com#key-01",
          "description" : "Optional kid to bind to the keypair, such as a verificationMethod."
        },
        "seed" : {
          "type" : "string",
          "example" : "00000000000000000000000000000000",
          "description" : "Optional seed to generate the key pair. Must enable insecure wallet mode."
        }
      }
    },
    "CreateKeyResponse" : {
      "type" : "object",
      "properties" : {
        "kid" : {
          "type" : "string",
          "example" : "did:web:example.com#key-01",
          "description" : "The associated kid"
        },
        "multikey" : {
          "type" : "string",
          "example" : "z6MkgKA7yrw5kYSiDuQFcye4bMaJpcfHFry3Bx45pdWh3s8i",
          "description" : "The Public Key Multibase format (multikey)"
        }
      }
    },
    "CreateWalletRequest" : {
      "type" : "object",
      "properties" : {
        "extra_settings" : {
          "type" : "object",
          "description" : "Agent config key-value pairs",
          "additionalProperties" : { }
        },
        "image_url" : {
          "type" : "string",
          "example" : "https://aries.ca/images/sample.png",
          "description" : "Image url for this wallet. This image url is publicized (self-attested) to other agents as part of forming a connection."
        },
        "key_management_mode" : {
          "type" : "string",
          "example" : "managed",
          "description" : "Key management method to use for this wallet.",
          "enum" : [ "managed" ]
        },
        "label" : {
          "type" : "string",
          "example" : "Alice",
          "description" : "Label for this wallet. This label is publicized (self-attested) to other agents as part of forming a connection."
        },
        "wallet_dispatch_type" : {
          "type" : "string",
          "example" : "default",
          "description" : "Webhook target dispatch type for this wallet. default: Dispatch only to webhooks associated with this wallet. base: Dispatch only to webhooks associated with the base wallet. both: Dispatch to both webhook targets.",
          "enum" : [ "default", "both", "base" ]
        },
        "wallet_key" : {
          "type" : "string",
          "example" : "MySecretKey123",
          "description" : "Master key used for key derivation."
        },
        "wallet_key_derivation" : {
          "type" : "string",
          "example" : "RAW",
          "description" : "Key derivation",
          "enum" : [ "ARGON2I_MOD", "ARGON2I_INT", "RAW" ]
        },
        "wallet_name" : {
          "type" : "string",
          "example" : "MyNewWallet",
          "description" : "Wallet name"
        },
        "wallet_type" : {
          "type" : "string",
          "example" : "askar",
          "description" : "Type of the wallet to create. Must be same as base wallet.",
          "enum" : [ "askar", "askar-anoncreds" ]
        },
        "wallet_webhook_urls" : {
          "type" : "array",
          "description" : "List of Webhook URLs associated with this subwallet",
          "items" : {
            "type" : "string",
            "example" : "http://localhost:8022/webhooks",
            "description" : "Optional webhook URL to receive webhook messages"
          }
        }
      }
    },
    "CreateWalletResponse" : {
      "type" : "object",
      "required" : [ "key_management_mode", "wallet_id" ],
      "properties" : {
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "key_management_mode" : {
          "type" : "string",
          "description" : "Mode regarding management of wallet key",
          "enum" : [ "managed", "unmanaged" ]
        },
        "settings" : {
          "type" : "object",
          "description" : "Settings for this wallet.",
          "additionalProperties" : { }
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "token" : {
          "type" : "string",
          "example" : "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk",
          "description" : "Authorization token to authenticate wallet requests"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "wallet_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Wallet record ID"
        }
      }
    },
    "CreateWalletTokenRequest" : {
      "type" : "object",
      "properties" : {
        "wallet_key" : {
          "type" : "string",
          "example" : "MySecretKey123",
          "description" : "Master key used for key derivation. Only required for unmanaged wallets."
        }
      }
    },
    "CreateWalletTokenResponse" : {
      "type" : "object",
      "properties" : {
        "token" : {
          "type" : "string",
          "example" : "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk",
          "description" : "Authorization token to authenticate wallet requests"
        }
      }
    },
    "CredAttrSpec" : {
      "type" : "object",
      "required" : [ "name", "value" ],
      "properties" : {
        "mime-type" : {
          "type" : "string",
          "example" : "image/jpeg",
          "description" : "MIME type: omit for (null) default",
          "x-nullable" : true
        },
        "name" : {
          "type" : "string",
          "example" : "favourite_drink",
          "description" : "Attribute name"
        },
        "value" : {
          "type" : "string",
          "example" : "martini",
          "description" : "Attribute value: base64-encode if MIME type is present"
        }
      }
    },
    "CredDef" : {
      "type" : "object",
      "properties" : {
        "issuerId" : {
          "type" : "string",
          "example" : "did:(method):WgWxqztrNooG92RXvxSTWv",
          "description" : "Issuer Identifier of the credential definition or schema"
        },
        "schemaId" : {
          "type" : "string",
          "example" : "did:(method):2:schema_name:1.0",
          "description" : "Schema identifier"
        },
        "tag" : {
          "type" : "string",
          "example" : "default",
          "description" : "The tag value passed in by the Issuer to an AnonCred's Credential Definition create and store implementation."
        },
        "type" : {
          "type" : "string",
          "enum" : [ "CL" ]
        },
        "value" : {
          "$ref" : "#/definitions/CredDefValueSchemaAnonCreds"
        }
      }
    },
    "CredDefPostOptions" : {
      "type" : "object",
      "properties" : {
        "create_transaction_for_endorser" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Create transaction for endorser (optional, default false). Use this for agents who don't specify an author role but want to create a transaction for an endorser to sign."
        },
        "endorser_connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier (optional) (this is an example). You can set this if you know the endorser's connection id you want to use. If not specified then the agent will attempt to find an endorser connection."
        },
        "revocation_registry_size" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "Maximum number of credential revocations per registry"
        },
        "support_revocation" : {
          "type" : "boolean",
          "description" : "Support credential revocation"
        }
      }
    },
    "CredDefPostRequest" : {
      "type" : "object",
      "properties" : {
        "credential_definition" : {
          "$ref" : "#/definitions/InnerCredDef"
        },
        "options" : {
          "$ref" : "#/definitions/CredDefPostOptions"
        }
      }
    },
    "CredDefResult" : {
      "type" : "object",
      "properties" : {
        "credential_definition_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "credential_definition_state" : {
          "$ref" : "#/definitions/CredDefState"
        },
        "job_id" : {
          "type" : "string"
        },
        "registration_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        }
      }
    },
    "CredDefState" : {
      "type" : "object",
      "properties" : {
        "credential_definition" : {
          "$ref" : "#/definitions/CredDefState_credential_definition"
        },
        "credential_definition_id" : {
          "type" : "string",
          "example" : "did:(method):3:CL:20:tag",
          "description" : "credential definition id",
          "x-nullable" : true
        },
        "state" : {
          "type" : "string",
          "enum" : [ "finished", "failed", "action", "wait" ]
        }
      }
    },
    "CredDefValue" : {
      "type" : "object",
      "properties" : {
        "primary" : {
          "$ref" : "#/definitions/CredDefValue_primary"
        },
        "revocation" : {
          "$ref" : "#/definitions/CredDefValue_revocation"
        }
      }
    },
    "CredDefValuePrimary" : {
      "type" : "object",
      "properties" : {
        "n" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "r" : {
          "$ref" : "#/definitions/Generated"
        },
        "rctxt" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "s" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "z" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        }
      }
    },
    "CredDefValuePrimarySchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "n" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "r" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "rctxt" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "s" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "z" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        }
      }
    },
    "CredDefValueRevocation" : {
      "type" : "object",
      "properties" : {
        "g" : {
          "type" : "string",
          "example" : "1 1F14F&ECB578F 2 095E45DDF417D"
        },
        "g_dash" : {
          "type" : "string",
          "example" : "1 1D64716fCDC00C 1 0C781960FA66E3D3 2 095E45DDF417D"
        },
        "h" : {
          "type" : "string",
          "example" : "1 16675DAE54BFAE8 2 095E45DD417D"
        },
        "h0" : {
          "type" : "string",
          "example" : "1 21E5EF9476EAF18 2 095E45DDF417D"
        },
        "h1" : {
          "type" : "string",
          "example" : "1 236D1D99236090 2 095E45DDF417D"
        },
        "h2" : {
          "type" : "string",
          "example" : "1 1C3AE8D1F1E277 2 095E45DDF417D"
        },
        "h_cap" : {
          "type" : "string",
          "example" : "1 1B2A32CF3167 1 2490FEBF6EE55 1 0000000000000000"
        },
        "htilde" : {
          "type" : "string",
          "example" : "1 1D8549E8C0F8 2 095E45DDF417D"
        },
        "pk" : {
          "type" : "string",
          "example" : "1 142CD5E5A7DC 1 153885BD903312 2 095E45DDF417D"
        },
        "u" : {
          "type" : "string",
          "example" : "1 0C430AAB2B4710 1 1CB3A0932EE7E 1 0000000000000000"
        },
        "y" : {
          "type" : "string",
          "example" : "1 153558BD903312 2 095E45DDF417D 1 0000000000000000"
        }
      }
    },
    "CredDefValueRevocationSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "g" : {
          "type" : "string",
          "example" : "1 1F14F&ECB578F 2 095E45DDF417D"
        },
        "g_dash" : {
          "type" : "string",
          "example" : "1 1D64716fCDC00C 1 0C781960FA66E3D3 2 095E45DDF417D"
        },
        "h" : {
          "type" : "string",
          "example" : "1 16675DAE54BFAE8 2 095E45DD417D"
        },
        "h0" : {
          "type" : "string",
          "example" : "1 21E5EF9476EAF18 2 095E45DDF417D"
        },
        "h1" : {
          "type" : "string",
          "example" : "1 236D1D99236090 2 095E45DDF417D"
        },
        "h2" : {
          "type" : "string",
          "example" : "1 1C3AE8D1F1E277 2 095E45DDF417D"
        },
        "h_cap" : {
          "type" : "string",
          "example" : "1 1B2A32CF3167 1 2490FEBF6EE55 1 0000000000000000"
        },
        "htilde" : {
          "type" : "string",
          "example" : "1 1D8549E8C0F8 2 095E45DDF417D"
        },
        "pk" : {
          "type" : "string",
          "example" : "1 142CD5E5A7DC 1 153885BD903312 2 095E45DDF417D"
        },
        "u" : {
          "type" : "string",
          "example" : "1 0C430AAB2B4710 1 1CB3A0932EE7E 1 0000000000000000"
        },
        "y" : {
          "type" : "string",
          "example" : "1 153558BD903312 2 095E45DDF417D 1 0000000000000000"
        }
      }
    },
    "CredDefValueSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "primary" : {
          "$ref" : "#/definitions/CredDefValue_primary"
        },
        "revocation" : {
          "$ref" : "#/definitions/CredDefValue_revocation"
        }
      }
    },
    "CredInfoList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IndyCredInfo"
          }
        }
      }
    },
    "CredRevIndyRecordsResult" : {
      "type" : "object",
      "properties" : {
        "rev_reg_delta" : {
          "type" : "object",
          "description" : "Indy revocation registry delta",
          "additionalProperties" : { }
        }
      }
    },
    "CredRevIndyRecordsResultSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "rev_reg_delta" : {
          "type" : "object",
          "description" : "Indy revocation registry delta",
          "additionalProperties" : { }
        }
      }
    },
    "CredRevRecordDetailsResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IssuerCredRevRecord"
          }
        }
      }
    },
    "CredRevRecordDetailsResultSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IssuerCredRevRecordSchemaAnonCreds"
          }
        }
      }
    },
    "CredRevRecordResult" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/IssuerCredRevRecord"
        }
      }
    },
    "CredRevRecordResultSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/IssuerCredRevRecordSchemaAnonCreds"
        }
      }
    },
    "CredRevokedResult" : {
      "type" : "object",
      "properties" : {
        "revoked" : {
          "type" : "boolean",
          "description" : "Whether credential is revoked on the ledger"
        }
      }
    },
    "Credential" : {
      "type" : "object",
      "required" : [ "@context", "credentialSubject", "issuer", "type" ],
      "properties" : {
        "@context" : {
          "type" : "array",
          "example" : [ "https://www.w3.org/2018/credentials/v1", "https://www.w3.org/2018/credentials/examples/v1" ],
          "description" : "The JSON-LD context of the credential",
          "items" : { }
        },
        "credentialStatus" : {
          "example" : ""
        },
        "credentialSubject" : {
          "example" : ""
        },
        "expirationDate" : {
          "type" : "string",
          "example" : "2010-01-01T19:23:24Z",
          "description" : "The expiration date",
          "pattern" : "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$"
        },
        "id" : {
          "type" : "string",
          "example" : "http://example.edu/credentials/1872",
          "description" : "The ID of the credential",
          "pattern" : "\\w+:(\\/?\\/?)[^\\s]+"
        },
        "issuanceDate" : {
          "type" : "string",
          "example" : "2010-01-01T19:23:24Z",
          "description" : "The issuance date",
          "pattern" : "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$"
        },
        "issuer" : {
          "example" : "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
          "description" : "The JSON-LD Verifiable Credential Issuer. Either string of object with id field."
        },
        "proof" : {
          "$ref" : "#/definitions/Credential_proof"
        },
        "type" : {
          "type" : "array",
          "example" : [ "VerifiableCredential", "AlumniCredential" ],
          "description" : "The JSON-LD type of the credential",
          "items" : {
            "type" : "string"
          }
        },
        "validFrom" : {
          "type" : "string",
          "example" : "2010-01-01T19:23:24Z",
          "description" : "The valid from date",
          "pattern" : "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$"
        },
        "validUntil" : {
          "type" : "string",
          "example" : "2010-01-01T19:23:24Z",
          "description" : "The valid until date",
          "pattern" : "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$"
        }
      },
      "additionalProperties" : true
    },
    "CredentialDefinition" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "schemaId" : {
          "type" : "string",
          "example" : "20",
          "description" : "Schema identifier within credential definition identifier"
        },
        "tag" : {
          "type" : "string",
          "example" : "tag",
          "description" : "Tag within credential definition identifier"
        },
        "type" : {
          "example" : "CL",
          "description" : "Signature type: CL for Camenisch-Lysyanskaya"
        },
        "value" : {
          "$ref" : "#/definitions/CredentialDefinition_value"
        },
        "ver" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Node protocol version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "CredentialDefinitionGetResult" : {
      "type" : "object",
      "properties" : {
        "credential_definition" : {
          "$ref" : "#/definitions/CredentialDefinition"
        }
      }
    },
    "CredentialDefinitionSendRequest" : {
      "type" : "object",
      "properties" : {
        "revocation_registry_size" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "Revocation registry size",
          "minimum" : 4,
          "maximum" : 32768
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "support_revocation" : {
          "type" : "boolean",
          "description" : "Revocation supported flag"
        },
        "tag" : {
          "type" : "string",
          "example" : "default",
          "description" : "Credential definition identifier tag"
        }
      }
    },
    "CredentialDefinitionSendResult" : {
      "type" : "object",
      "required" : [ "credential_definition_id" ],
      "properties" : {
        "credential_definition_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        }
      }
    },
    "CredentialDefinitionsCreatedResult" : {
      "type" : "object",
      "properties" : {
        "credential_definition_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
            "description" : "Credential definition identifiers",
            "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
          }
        }
      }
    },
    "CredentialOffer" : {
      "type" : "object",
      "required" : [ "offers~attach" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "credential_preview" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "offers~attach" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        }
      }
    },
    "CredentialPreview" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "@type" : {
          "type" : "string",
          "example" : "issue-credential/1.0/credential-preview",
          "description" : "Message type identifier"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CredAttrSpec"
          }
        }
      }
    },
    "CredentialProposal" : {
      "type" : "object",
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_proposal" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "schema_issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_name" : {
          "type" : "string"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "CredentialStatusOptions" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "CredentialStatusList2017",
          "description" : "Credential status method type to use for the credential. Should match status method registered in the Verifiable Credential Extension Registry"
        }
      },
      "additionalProperties" : true
    },
    "DID" : {
      "type" : "object",
      "required" : [ "did", "key_type", "method", "posture", "verkey" ],
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "did:peer:WgWxqztrNooG92RXvxSTWv",
          "description" : "DID of interest",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        },
        "key_type" : {
          "type" : "string",
          "example" : "ed25519",
          "description" : "Key type associated with the DID",
          "enum" : [ "ed25519", "bls12381g2", "p256" ]
        },
        "metadata" : {
          "type" : "object",
          "description" : "Additional metadata associated with the DID",
          "additionalProperties" : { }
        },
        "method" : {
          "type" : "string",
          "example" : "sov",
          "description" : "Did method associated with the DID"
        },
        "posture" : {
          "type" : "string",
          "example" : "wallet_only",
          "description" : "Whether DID is current public DID, posted to ledger but not current public DID, or local to the wallet",
          "enum" : [ "public", "posted", "wallet_only" ]
        },
        "verkey" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "Public verification key",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        }
      }
    },
    "DIDCreate" : {
      "type" : "object",
      "properties" : {
        "method" : {
          "type" : "string",
          "example" : "sov",
          "description" : "Method for the requested DID.Supported methods are 'key', 'sov', and any other registered method."
        },
        "options" : {
          "$ref" : "#/definitions/DIDCreate_options"
        },
        "seed" : {
          "type" : "string",
          "example" : "000000000000000000000000Trustee1",
          "description" : "Optional seed to use for DID, Must be enabled in configuration before use."
        }
      }
    },
    "DIDCreateOptions" : {
      "type" : "object",
      "required" : [ "key_type" ],
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "did:peer:WgWxqztrNooG92RXvxSTWv",
          "description" : "Specify final value of the did (including did:<method>: prefix)if the method supports or requires so.",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        },
        "key_type" : {
          "type" : "string",
          "example" : "ed25519",
          "description" : "Key type to use for the DID keypair. Validated with the chosen DID method's supported key types.",
          "enum" : [ "ed25519", "bls12381g2", "p256" ]
        }
      }
    },
    "DIDEndpoint" : {
      "type" : "object",
      "required" : [ "did" ],
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "DID of interest",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "Endpoint to set (omit to delete)",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        }
      }
    },
    "DIDEndpointWithType" : {
      "type" : "object",
      "required" : [ "did" ],
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "DID of interest",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "Endpoint to set (omit to delete)",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        },
        "endpoint_type" : {
          "type" : "string",
          "example" : "Endpoint",
          "description" : "Endpoint type to set (default 'Endpoint'); affects only public or posted DIDs",
          "enum" : [ "Endpoint", "Profile", "LinkedDomains" ]
        },
        "mediation_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Mediation ID to use for endpoint information.",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }
      }
    },
    "DIDList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "DID list",
          "items" : {
            "$ref" : "#/definitions/DID"
          }
        }
      }
    },
    "DIDResult" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/DID"
        }
      }
    },
    "DIDRotateRequestJSON" : {
      "type" : "object",
      "required" : [ "to_did" ],
      "properties" : {
        "to_did" : {
          "type" : "string",
          "example" : "did:web:example.com",
          "description" : "The DID the rotating party is rotating to"
        }
      }
    },
    "DIDXRejectRequest" : {
      "type" : "object",
      "properties" : {
        "reason" : {
          "type" : "string",
          "example" : "Request rejected",
          "description" : "Reason for rejecting the DID Exchange"
        }
      }
    },
    "DIDXRequest" : {
      "type" : "object",
      "required" : [ "label" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "did" : {
          "type" : "string",
          "example" : "did:peer:WgWxqztrNooG92RXvxSTWv",
          "description" : "DID of exchange",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        },
        "did_doc~attach" : {
          "$ref" : "#/definitions/DIDXRequest_did_docattach"
        },
        "goal" : {
          "type" : "string",
          "example" : "To issue a Faber College Graduate credential",
          "description" : "A self-attested string that the receiver may want to display to the user about the context-specific goal of the out-of-band message"
        },
        "goal_code" : {
          "type" : "string",
          "example" : "issue-vc",
          "description" : "A self-attested code the receiver may want to display to the user or use in automatically deciding what to do with the out-of-band message"
        },
        "label" : {
          "type" : "string",
          "example" : "Request to connect with Bob",
          "description" : "Label for DID exchange request"
        }
      }
    },
    "DIFField" : {
      "type" : "object",
      "properties" : {
        "filter" : {
          "$ref" : "#/definitions/Filter"
        },
        "id" : {
          "type" : "string",
          "description" : "ID"
        },
        "path" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "description" : "Path"
          }
        },
        "predicate" : {
          "type" : "string",
          "description" : "Preference",
          "enum" : [ "required", "preferred" ]
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose"
        }
      }
    },
    "DIFHolder" : {
      "type" : "object",
      "properties" : {
        "directive" : {
          "type" : "string",
          "description" : "Preference",
          "enum" : [ "required", "preferred" ]
        },
        "field_id" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "description" : "FieldID",
            "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          }
        }
      }
    },
    "DIFOptions" : {
      "type" : "object",
      "properties" : {
        "challenge" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Challenge protect against replay attack",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        "domain" : {
          "type" : "string",
          "example" : "4jt78h47fh47",
          "description" : "Domain protect against replay attack"
        }
      }
    },
    "DIFPresSpec" : {
      "type" : "object",
      "properties" : {
        "issuer_id" : {
          "type" : "string",
          "description" : "Issuer identifier to sign the presentation, if different from current public DID"
        },
        "presentation_definition" : {
          "$ref" : "#/definitions/PresentationDefinition"
        },
        "record_ids" : {
          "type" : "object",
          "example" : {
            "<input descriptor id_1>" : [ "<record id_1>", "<record id_2>" ],
            "<input descriptor id_2>" : [ "<record id>" ]
          },
          "description" : "Mapping of input_descriptor id to list of stored W3C credential record_id",
          "additionalProperties" : { }
        },
        "reveal_doc" : {
          "type" : "object",
          "example" : {
            "@context" : [ "https://www.w3.org/2018/credentials/v1", "https://w3id.org/security/bbs/v1" ],
            "@explicit" : true,
            "@requireAll" : true,
            "credentialSubject" : {
              "@explicit" : true,
              "@requireAll" : true,
              "Observation" : [ {
                "effectiveDateTime" : { },
                "@explicit" : true,
                "@requireAll" : true
              } ]
            },
            "issuanceDate" : { },
            "issuer" : { },
            "type" : [ "VerifiableCredential", "LabReport" ]
          },
          "description" : "reveal doc [JSON-LD frame] dict used to derive the credential when selective disclosure is required",
          "additionalProperties" : { }
        }
      }
    },
    "DIFProofProposal" : {
      "type" : "object",
      "properties" : {
        "input_descriptors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InputDescriptors"
          }
        },
        "options" : {
          "$ref" : "#/definitions/DIFOptions"
        }
      }
    },
    "DIFProofRequest" : {
      "type" : "object",
      "required" : [ "presentation_definition" ],
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/DIFOptions"
        },
        "presentation_definition" : {
          "$ref" : "#/definitions/PresentationDefinition"
        }
      },
      "additionalProperties" : true
    },
    "DataIntegrityProofOptions" : {
      "type" : "object",
      "required" : [ "cryptosuite", "proofPurpose", "type", "verificationMethod" ],
      "properties" : {
        "challenge" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "The value is used once for a particular domain and window of time. This value is used to mitigate replay attacks."
        },
        "created" : {
          "type" : "string",
          "example" : "2010-01-01T19:23:24Z",
          "description" : "The date and time the proof was created is OPTIONAL and, if included, MUST be specified as an [XMLSCHEMA11-2] dateTimeStamp string"
        },
        "cryptosuite" : {
          "type" : "string",
          "example" : "eddsa-jcs-2022",
          "description" : "An identifier for the cryptographic suite that can be used to verify the proof."
        },
        "domain" : {
          "type" : "string",
          "example" : "example.com",
          "description" : "It conveys one or more security domains in which the proof is meant to be used."
        },
        "expires" : {
          "type" : "string",
          "example" : "2010-01-01T19:23:24Z",
          "description" : "The expires property is OPTIONAL and, if present, specifies when the proof expires. If present, it MUST be an [XMLSCHEMA11-2] dateTimeStamp string"
        },
        "id" : {
          "type" : "string",
          "example" : "urn:uuid:6a1676b8-b51f-11ed-937b-d76685a20ff5",
          "description" : "An optional identifier for the proof, which MUST be a URL [URL], such as a UUID as a URN"
        },
        "nonce" : {
          "type" : "string",
          "example" : "CF69iO3nfvqRsRBNElE8b4wO39SyJHPM7Gg1nExltW5vSfQA1lvDCR/zXX1To0/4NLo==",
          "description" : "One use of this field is to increase privacy by decreasing linkability that is the result of deterministically generated signatures."
        },
        "previousProof" : {
          "type" : "string",
          "example" : "urn:uuid:6a1676b8-b51f-11ed-937b-d76685a20ff5",
          "description" : "Each value identifies another data integrity proof that MUST verify before the current proof is processed."
        },
        "proofPurpose" : {
          "type" : "string",
          "example" : "assertionMethod",
          "description" : "The proof purpose acts as a safeguard to prevent the proof from being misused by being applied to a purpose other than the one that was intended."
        },
        "proofValue" : {
          "type" : "string",
          "example" : "zsy1AahqbzJQ63n9RtekmwzqZeVj494VppdAVJBnMYrTwft6cLJJGeTSSxCCJ6HKnRtwE7jjDh6sB2z2AAiZY9BBnCD8wUVgwqH3qchGRCuC2RugA4eQ9fUrR4Yuycac3caiaaay",
          "description" : "The value of the proof signature."
        },
        "type" : {
          "type" : "string",
          "example" : "DataIntegrityProof",
          "description" : "The specific type of proof MUST be specified as a string that maps to a URL [URL]."
        },
        "verificationMethod" : {
          "type" : "string",
          "example" : "did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL",
          "description" : "A verification method is the means and information needed to verify the proof.",
          "pattern" : "\\w+:(\\/?\\/?)[^\\s]+"
        }
      },
      "additionalProperties" : true
    },
    "Date" : {
      "type" : "object",
      "required" : [ "expires_time" ],
      "properties" : {
        "expires_time" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2021-03-29T05:22:19Z",
          "description" : "Expiry Date"
        }
      }
    },
    "Disclose" : {
      "type" : "object",
      "required" : [ "protocols" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "protocols" : {
          "type" : "array",
          "description" : "List of protocol descriptors",
          "items" : {
            "$ref" : "#/definitions/ProtocolDescriptor"
          }
        }
      }
    },
    "Disclosures" : {
      "type" : "object",
      "required" : [ "disclosures" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "disclosures" : {
          "type" : "array",
          "description" : "List of protocol or goal_code descriptors",
          "items" : { }
        }
      }
    },
    "Doc" : {
      "type" : "object",
      "required" : [ "credential", "options" ],
      "properties" : {
        "credential" : {
          "type" : "object",
          "description" : "Credential to sign",
          "additionalProperties" : { }
        },
        "options" : {
          "$ref" : "#/definitions/Doc_options"
        }
      }
    },
    "DocumentVerificationResult" : {
      "type" : "object",
      "required" : [ "verified" ],
      "properties" : {
        "document" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "errors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProofResult"
          }
        },
        "verified" : {
          "type" : "boolean"
        }
      }
    },
    "EndorserInfo" : {
      "type" : "object",
      "required" : [ "endorser_did" ],
      "properties" : {
        "endorser_did" : {
          "type" : "string",
          "description" : "Endorser DID"
        },
        "endorser_name" : {
          "type" : "string",
          "description" : "Endorser Name"
        }
      }
    },
    "EndpointsResult" : {
      "type" : "object",
      "properties" : {
        "my_endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "My endpoint",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        },
        "their_endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "Their endpoint",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        }
      }
    },
    "FetchCredentialResponse" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "$ref" : "#/definitions/VerifiableCredential"
        }
      }
    },
    "FetchKeyResponse" : {
      "type" : "object",
      "properties" : {
        "kid" : {
          "type" : "string",
          "example" : "did:web:example.com#key-01",
          "description" : "The associated kid"
        },
        "multikey" : {
          "type" : "string",
          "example" : "z6MkgKA7yrw5kYSiDuQFcye4bMaJpcfHFry3Bx45pdWh3s8i",
          "description" : "The Public Key Multibase format (multikey)"
        }
      }
    },
    "Filter" : {
      "type" : "object",
      "properties" : {
        "const" : {
          "description" : "Const"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "description" : "Enum"
          }
        },
        "exclusiveMaximum" : {
          "description" : "ExclusiveMaximum"
        },
        "exclusiveMinimum" : {
          "description" : "ExclusiveMinimum"
        },
        "format" : {
          "type" : "string",
          "description" : "Format"
        },
        "maxLength" : {
          "type" : "integer",
          "example" : 1234,
          "description" : "Max Length"
        },
        "maximum" : {
          "description" : "Maximum"
        },
        "minLength" : {
          "type" : "integer",
          "example" : 1234,
          "description" : "Min Length"
        },
        "minimum" : {
          "description" : "Minimum"
        },
        "not" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Not"
        },
        "pattern" : {
          "type" : "string",
          "description" : "Pattern"
        },
        "type" : {
          "type" : "string",
          "description" : "Type"
        }
      }
    },
    "Generated" : {
      "type" : "object",
      "properties" : {
        "master_secret" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "number" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "remainder" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        }
      }
    },
    "GetCredDefResult" : {
      "type" : "object",
      "properties" : {
        "credential_definition" : {
          "$ref" : "#/definitions/CredDefState_credential_definition"
        },
        "credential_definition_id" : {
          "type" : "string",
          "example" : "did:(method):3:CL:20:tag",
          "description" : "credential definition id"
        },
        "credential_definitions_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "resolution_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        }
      }
    },
    "GetCredDefsResponse" : {
      "type" : "object",
      "properties" : {
        "credential_definition_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "GvLGiRogTJubmj5B36qhYz:3:CL:8:faber.agent.degree_schema",
            "description" : "credential definition identifiers"
          }
        }
      }
    },
    "GetDIDEndpointResponse" : {
      "type" : "object",
      "properties" : {
        "endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "Full verification key",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
          "x-nullable" : true
        }
      }
    },
    "GetDIDVerkeyResponse" : {
      "type" : "object",
      "properties" : {
        "verkey" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "Full verification key",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
          "x-nullable" : true
        }
      }
    },
    "GetNymRoleResponse" : {
      "type" : "object",
      "properties" : {
        "role" : {
          "type" : "string",
          "example" : "ENDORSER",
          "description" : "Ledger role",
          "enum" : [ "STEWARD", "TRUSTEE", "ENDORSER", "NETWORK_MONITOR", "USER", "ROLE_REMOVE" ]
        }
      }
    },
    "GetSchemaResult" : {
      "type" : "object",
      "properties" : {
        "resolution_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "schema" : {
          "$ref" : "#/definitions/AnonCredsSchema"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "did:(method):2:schema_name:1.0",
          "description" : "Schema identifier"
        },
        "schema_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        }
      }
    },
    "GetSchemasResponse" : {
      "type" : "object",
      "properties" : {
        "schema_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "did:(method):2:schema_name:1.0",
            "description" : "Schema identifiers"
          }
        }
      }
    },
    "Hangup" : {
      "type" : "object",
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        }
      }
    },
    "HolderModuleResponse" : {
      "type" : "object"
    },
    "IndyAttrValue" : {
      "type" : "object",
      "required" : [ "encoded", "raw" ],
      "properties" : {
        "encoded" : {
          "type" : "string",
          "example" : "-1",
          "description" : "Attribute encoded value",
          "pattern" : "^-?[0-9]*$"
        },
        "raw" : {
          "type" : "string",
          "description" : "Attribute raw value"
        }
      }
    },
    "IndyCredAbstract" : {
      "type" : "object",
      "required" : [ "cred_def_id", "key_correctness_proof", "nonce", "schema_id" ],
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "key_correctness_proof" : {
          "$ref" : "#/definitions/IndyCredAbstract_key_correctness_proof"
        },
        "nonce" : {
          "type" : "string",
          "example" : "0",
          "description" : "Nonce in credential abstract",
          "pattern" : "^[0-9]*$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        }
      }
    },
    "IndyCredInfo" : {
      "type" : "object",
      "properties" : {
        "attrs" : {
          "type" : "object",
          "description" : "Attribute names and value",
          "additionalProperties" : {
            "type" : "string",
            "example" : "alice"
          }
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "cred_rev_id" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Credential revocation identifier",
          "pattern" : "^[1-9][0-9]*$",
          "x-nullable" : true
        },
        "referent" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Wallet referent"
        },
        "rev_reg_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
          "x-nullable" : true
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        }
      }
    },
    "IndyCredPrecis" : {
      "type" : "object",
      "required" : [ "cred_info" ],
      "properties" : {
        "cred_info" : {
          "$ref" : "#/definitions/IndyCredPrecis_cred_info"
        },
        "interval" : {
          "$ref" : "#/definitions/IndyCredPrecis_interval"
        },
        "presentation_referents" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "1_age_uuid",
            "description" : "presentation referent"
          }
        }
      }
    },
    "IndyCredRequest" : {
      "type" : "object",
      "required" : [ "blinded_ms", "blinded_ms_correctness_proof", "cred_def_id", "nonce", "prover_did" ],
      "properties" : {
        "blinded_ms" : {
          "type" : "object",
          "description" : "Blinded master secret",
          "additionalProperties" : { }
        },
        "blinded_ms_correctness_proof" : {
          "type" : "object",
          "description" : "Blinded master secret correctness proof",
          "additionalProperties" : { }
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "nonce" : {
          "type" : "string",
          "example" : "0",
          "description" : "Nonce in credential request",
          "pattern" : "^[0-9]*$"
        },
        "prover_did" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Prover DID/Random String/UUID"
        }
      }
    },
    "IndyCredential" : {
      "type" : "object",
      "required" : [ "cred_def_id", "schema_id", "signature", "signature_correctness_proof", "values" ],
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "rev_reg" : {
          "type" : "object",
          "description" : "Revocation registry state",
          "additionalProperties" : { },
          "x-nullable" : true
        },
        "rev_reg_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
          "x-nullable" : true
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "signature" : {
          "type" : "object",
          "description" : "Credential signature",
          "additionalProperties" : { }
        },
        "signature_correctness_proof" : {
          "type" : "object",
          "description" : "Credential signature correctness proof",
          "additionalProperties" : { }
        },
        "values" : {
          "type" : "object",
          "description" : "Credential attributes",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyAttrValue"
          }
        },
        "witness" : {
          "type" : "object",
          "description" : "Witness for revocation proof",
          "additionalProperties" : { },
          "x-nullable" : true
        }
      }
    },
    "IndyEQProof" : {
      "type" : "object",
      "properties" : {
        "a_prime" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "e" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "m" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string",
            "example" : "0",
            "pattern" : "^[0-9]*$"
          }
        },
        "m2" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "revealed_attrs" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string",
            "example" : "-1",
            "pattern" : "^-?[0-9]*$"
          }
        },
        "v" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        }
      }
    },
    "IndyGEProof" : {
      "type" : "object",
      "properties" : {
        "alpha" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "mj" : {
          "type" : "string",
          "example" : "0",
          "pattern" : "^[0-9]*$"
        },
        "predicate" : {
          "$ref" : "#/definitions/IndyGEProofPred"
        },
        "r" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string",
            "example" : "0",
            "pattern" : "^[0-9]*$"
          }
        },
        "t" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string",
            "example" : "0",
            "pattern" : "^[0-9]*$"
          }
        },
        "u" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string",
            "example" : "0",
            "pattern" : "^[0-9]*$"
          }
        }
      }
    },
    "IndyGEProofPred" : {
      "type" : "object",
      "properties" : {
        "attr_name" : {
          "type" : "string",
          "description" : "Attribute name, indy-canonicalized"
        },
        "p_type" : {
          "type" : "string",
          "description" : "Predicate type",
          "enum" : [ "LT", "LE", "GE", "GT" ]
        },
        "value" : {
          "type" : "integer",
          "description" : "Predicate threshold value"
        }
      }
    },
    "IndyKeyCorrectnessProof" : {
      "type" : "object",
      "required" : [ "c", "xr_cap", "xz_cap" ],
      "properties" : {
        "c" : {
          "type" : "string",
          "example" : "0",
          "description" : "c in key correctness proof",
          "pattern" : "^[0-9]*$"
        },
        "xr_cap" : {
          "type" : "array",
          "description" : "xr_cap in key correctness proof",
          "items" : {
            "type" : "array",
            "description" : "xr_cap components in key correctness proof",
            "items" : {
              "type" : "string",
              "description" : "xr_cap component values in key correctness proof"
            }
          }
        },
        "xz_cap" : {
          "type" : "string",
          "example" : "0",
          "description" : "xz_cap in key correctness proof",
          "pattern" : "^[0-9]*$"
        }
      }
    },
    "IndyNonRevocProof" : {
      "type" : "object",
      "properties" : {
        "c_list" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "x_list" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IndyNonRevocationInterval" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Earliest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        },
        "to" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Latest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "IndyPresAttrSpec" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "mime-type" : {
          "type" : "string",
          "example" : "image/jpeg",
          "description" : "MIME type (default null)"
        },
        "name" : {
          "type" : "string",
          "example" : "favourite_drink",
          "description" : "Attribute name"
        },
        "referent" : {
          "type" : "string",
          "example" : "0",
          "description" : "Credential referent"
        },
        "value" : {
          "type" : "string",
          "example" : "martini",
          "description" : "Attribute value"
        }
      }
    },
    "IndyPresPredSpec" : {
      "type" : "object",
      "required" : [ "name", "predicate", "threshold" ],
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "name" : {
          "type" : "string",
          "example" : "high_score",
          "description" : "Attribute name"
        },
        "predicate" : {
          "type" : "string",
          "example" : ">=",
          "description" : "Predicate type ('<', '<=', '>=', or '>')",
          "enum" : [ "<", "<=", ">=", ">" ]
        },
        "threshold" : {
          "type" : "integer",
          "description" : "Threshold value"
        }
      }
    },
    "IndyPresPreview" : {
      "type" : "object",
      "required" : [ "attributes", "predicates" ],
      "properties" : {
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/present-proof/1.0/presentation-preview",
          "description" : "Message type identifier"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IndyPresAttrSpec"
          }
        },
        "predicates" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IndyPresPredSpec"
          }
        }
      }
    },
    "IndyPresSpec" : {
      "type" : "object",
      "required" : [ "requested_attributes", "requested_predicates", "self_attested_attributes" ],
      "properties" : {
        "requested_attributes" : {
          "type" : "object",
          "description" : "Nested object mapping proof request attribute referents to requested-attribute specifiers",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyRequestedCredsRequestedAttr"
          }
        },
        "requested_predicates" : {
          "type" : "object",
          "description" : "Nested object mapping proof request predicate referents to requested-predicate specifiers",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyRequestedCredsRequestedPred"
          }
        },
        "self_attested_attributes" : {
          "type" : "object",
          "description" : "Self-attested attributes to build into proof",
          "additionalProperties" : {
            "type" : "string",
            "example" : "self_attested_value",
            "description" : "Self-attested attribute values to use in requested-credentials structure for proof construction"
          }
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "IndyPrimaryProof" : {
      "type" : "object",
      "properties" : {
        "eq_proof" : {
          "$ref" : "#/definitions/IndyPrimaryProof_eq_proof"
        },
        "ge_proofs" : {
          "type" : "array",
          "description" : "Indy GE proofs",
          "items" : {
            "$ref" : "#/definitions/IndyGEProof"
          },
          "x-nullable" : true
        }
      }
    },
    "IndyProof" : {
      "type" : "object",
      "properties" : {
        "identifiers" : {
          "type" : "array",
          "description" : "Indy proof.identifiers content",
          "items" : {
            "$ref" : "#/definitions/IndyProofIdentifier"
          }
        },
        "proof" : {
          "$ref" : "#/definitions/IndyProof_proof"
        },
        "requested_proof" : {
          "$ref" : "#/definitions/IndyProof_requested_proof"
        }
      }
    },
    "IndyProofIdentifier" : {
      "type" : "object",
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "rev_reg_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
          "x-nullable" : true
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "timestamp" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Timestamp epoch",
          "minimum" : 0,
          "maximum" : 18446744073709551615,
          "x-nullable" : true
        }
      }
    },
    "IndyProofProof" : {
      "type" : "object",
      "properties" : {
        "aggregated_proof" : {
          "$ref" : "#/definitions/IndyProofProof_aggregated_proof"
        },
        "proofs" : {
          "type" : "array",
          "description" : "Indy proof proofs",
          "items" : {
            "$ref" : "#/definitions/IndyProofProofProofsProof"
          }
        }
      }
    },
    "IndyProofProofAggregatedProof" : {
      "type" : "object",
      "properties" : {
        "c_hash" : {
          "type" : "string",
          "description" : "c_hash value"
        },
        "c_list" : {
          "type" : "array",
          "description" : "c_list value",
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }
      }
    },
    "IndyProofProofProofsProof" : {
      "type" : "object",
      "properties" : {
        "non_revoc_proof" : {
          "$ref" : "#/definitions/IndyProofProofProofsProof_non_revoc_proof"
        },
        "primary_proof" : {
          "$ref" : "#/definitions/IndyProofProofProofsProof_primary_proof"
        }
      }
    },
    "IndyProofReqAttrSpec" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "favouriteDrink",
          "description" : "Attribute name"
        },
        "names" : {
          "type" : "array",
          "description" : "Attribute name group",
          "items" : {
            "type" : "string",
            "example" : "age"
          }
        },
        "non_revoked" : {
          "$ref" : "#/definitions/IndyProofReqAttrSpecNonRevoked"
        },
        "restrictions" : {
          "type" : "array",
          "description" : "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag"
            }
          }
        }
      }
    },
    "IndyProofReqAttrSpecNonRevoked" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Earliest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        },
        "to" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Latest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "IndyProofReqPredSpec" : {
      "type" : "object",
      "required" : [ "name", "p_type", "p_value" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "index",
          "description" : "Attribute name"
        },
        "non_revoked" : {
          "$ref" : "#/definitions/IndyProofReqPredSpecNonRevoked"
        },
        "p_type" : {
          "type" : "string",
          "example" : ">=",
          "description" : "Predicate type ('<', '<=', '>=', or '>')",
          "enum" : [ "<", "<=", ">=", ">" ]
        },
        "p_value" : {
          "type" : "integer",
          "description" : "Threshold value"
        },
        "restrictions" : {
          "type" : "array",
          "description" : "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag"
            }
          }
        }
      }
    },
    "IndyProofReqPredSpecNonRevoked" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Earliest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        },
        "to" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Latest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "IndyProofRequest" : {
      "type" : "object",
      "required" : [ "requested_attributes", "requested_predicates" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Proof request",
          "description" : "Proof request name"
        },
        "non_revoked" : {
          "$ref" : "#/definitions/IndyProofRequestNonRevoked"
        },
        "nonce" : {
          "type" : "string",
          "example" : "1",
          "description" : "Nonce",
          "pattern" : "^[1-9][0-9]*$"
        },
        "requested_attributes" : {
          "type" : "object",
          "description" : "Requested attribute specifications of proof request",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyProofReqAttrSpec"
          }
        },
        "requested_predicates" : {
          "type" : "object",
          "description" : "Requested predicate specifications of proof request",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyProofReqPredSpec"
          }
        },
        "version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Proof request version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "IndyProofRequestNonRevoked" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Earliest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        },
        "to" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Latest time of interest in non-revocation interval",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "IndyProofRequestedProof" : {
      "type" : "object",
      "properties" : {
        "predicates" : {
          "type" : "object",
          "description" : "Proof requested proof predicates.",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyProofRequestedProofPredicate"
          }
        },
        "revealed_attr_groups" : {
          "type" : "object",
          "description" : "Proof requested proof revealed attribute groups",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyProofRequestedProofRevealedAttrGroup"
          },
          "x-nullable" : true
        },
        "revealed_attrs" : {
          "type" : "object",
          "description" : "Proof requested proof revealed attributes",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyProofRequestedProofRevealedAttr"
          },
          "x-nullable" : true
        },
        "self_attested_attrs" : {
          "type" : "object",
          "description" : "Proof requested proof self-attested attributes",
          "additionalProperties" : { }
        },
        "unrevealed_attrs" : {
          "type" : "object",
          "description" : "Unrevealed attributes",
          "additionalProperties" : { }
        }
      }
    },
    "IndyProofRequestedProofPredicate" : {
      "type" : "object",
      "properties" : {
        "sub_proof_index" : {
          "type" : "integer",
          "description" : "Sub-proof index"
        }
      }
    },
    "IndyProofRequestedProofRevealedAttr" : {
      "type" : "object",
      "properties" : {
        "encoded" : {
          "type" : "string",
          "example" : "-1",
          "description" : "Encoded value",
          "pattern" : "^-?[0-9]*$"
        },
        "raw" : {
          "type" : "string",
          "description" : "Raw value"
        },
        "sub_proof_index" : {
          "type" : "integer",
          "description" : "Sub-proof index"
        }
      }
    },
    "IndyProofRequestedProofRevealedAttrGroup" : {
      "type" : "object",
      "properties" : {
        "sub_proof_index" : {
          "type" : "integer",
          "description" : "Sub-proof index"
        },
        "values" : {
          "type" : "object",
          "description" : "Indy proof requested proof revealed attr groups group value",
          "additionalProperties" : {
            "$ref" : "#/definitions/RawEncoded"
          }
        }
      }
    },
    "IndyRequestedCredsRequestedAttr" : {
      "type" : "object",
      "required" : [ "cred_id" ],
      "properties" : {
        "cred_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Wallet credential identifier (typically but not necessarily a UUID)"
        },
        "revealed" : {
          "type" : "boolean",
          "description" : "Whether to reveal attribute in proof (default true)"
        }
      }
    },
    "IndyRequestedCredsRequestedPred" : {
      "type" : "object",
      "required" : [ "cred_id" ],
      "properties" : {
        "cred_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Wallet credential identifier (typically but not necessarily a UUID)"
        },
        "timestamp" : {
          "type" : "integer",
          "example" : 1640995199,
          "description" : "Epoch timestamp of interest for non-revocation proof",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "IndyRevRegDef" : {
      "type" : "object",
      "properties" : {
        "credDefId" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Indy revocation registry identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        },
        "revocDefType" : {
          "type" : "string",
          "example" : "CL_ACCUM",
          "description" : "Revocation registry type (specify CL_ACCUM)",
          "enum" : [ "CL_ACCUM" ]
        },
        "tag" : {
          "type" : "string",
          "description" : "Revocation registry tag"
        },
        "value" : {
          "$ref" : "#/definitions/IndyRevRegDef_value"
        },
        "ver" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Version of revocation registry definition",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "IndyRevRegDefValue" : {
      "type" : "object",
      "properties" : {
        "issuanceType" : {
          "type" : "string",
          "description" : "Issuance type",
          "enum" : [ "ISSUANCE_ON_DEMAND", "ISSUANCE_BY_DEFAULT" ]
        },
        "maxCredNum" : {
          "type" : "integer",
          "example" : 10,
          "description" : "Maximum number of credentials; registry size",
          "minimum" : 1
        },
        "publicKeys" : {
          "$ref" : "#/definitions/IndyRevRegDefValue_publicKeys"
        },
        "tailsHash" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "Tails hash value",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        },
        "tailsLocation" : {
          "type" : "string",
          "description" : "Tails file location"
        }
      }
    },
    "IndyRevRegDefValuePublicKeys" : {
      "type" : "object",
      "properties" : {
        "accumKey" : {
          "$ref" : "#/definitions/IndyRevRegDefValuePublicKeysAccumKey"
        }
      }
    },
    "IndyRevRegDefValuePublicKeysAccumKey" : {
      "type" : "object",
      "properties" : {
        "z" : {
          "type" : "string",
          "example" : "1 120F522F81E6B7 1 09F7A59005C4939854",
          "description" : "Value for z"
        }
      }
    },
    "IndyRevRegEntry" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "$ref" : "#/definitions/IndyRevRegEntry_value"
        },
        "ver" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Version of revocation registry entry",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "IndyRevRegEntryValue" : {
      "type" : "object",
      "properties" : {
        "accum" : {
          "type" : "string",
          "example" : "21 11792B036AED0AAA12A4 4 298B2571FFC63A737",
          "description" : "Accumulator value"
        },
        "prevAccum" : {
          "type" : "string",
          "example" : "21 137AC810975E4 6 76F0384B6F23",
          "description" : "Previous accumulator value"
        },
        "revoked" : {
          "type" : "array",
          "description" : "Revoked credential revocation identifiers",
          "items" : {
            "type" : "integer"
          }
        }
      }
    },
    "InnerCredDef" : {
      "type" : "object",
      "required" : [ "issuerId", "schemaId", "tag" ],
      "properties" : {
        "issuerId" : {
          "type" : "string",
          "example" : "did:(method):WgWxqztrNooG92RXvxSTWv",
          "description" : "Issuer Identifier of the credential definition"
        },
        "schemaId" : {
          "type" : "string",
          "example" : "did:(method):2:schema_name:1.0",
          "description" : "Schema identifier"
        },
        "tag" : {
          "type" : "string",
          "example" : "default",
          "description" : "Credential definition tag"
        }
      }
    },
    "InnerRevRegDef" : {
      "type" : "object",
      "required" : [ "credDefId", "issuerId", "maxCredNum", "tag" ],
      "properties" : {
        "credDefId" : {
          "type" : "string",
          "example" : "did:(method):2:schema_name:1.0",
          "description" : "Credential definition identifier"
        },
        "issuerId" : {
          "type" : "string",
          "example" : "did:(method):WgWxqztrNooG92RXvxSTWv",
          "description" : "Issuer Identifier of the credential definition or schema"
        },
        "maxCredNum" : {
          "type" : "integer",
          "example" : 777,
          "description" : "Maximum number of credential revocations per registry"
        },
        "tag" : {
          "type" : "string",
          "example" : "default",
          "description" : "tag for revocation registry"
        }
      }
    },
    "InputDescriptors" : {
      "type" : "object",
      "properties" : {
        "constraints" : {
          "$ref" : "#/definitions/Constraints"
        },
        "group" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "description" : "Group"
          }
        },
        "id" : {
          "type" : "string",
          "description" : "ID"
        },
        "metadata" : {
          "type" : "object",
          "description" : "Metadata dictionary",
          "additionalProperties" : { }
        },
        "name" : {
          "type" : "string",
          "description" : "Name"
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose"
        },
        "schema" : {
          "$ref" : "#/definitions/InputDescriptors_schema"
        }
      }
    },
    "IntroModuleResponse" : {
      "type" : "object"
    },
    "InvitationCreateRequest" : {
      "type" : "object",
      "properties" : {
        "accept" : {
          "type" : "array",
          "example" : [ "didcomm/aip1", "didcomm/aip2;env=rfc19" ],
          "description" : "List of mime type in order of preference that should be use in responding to the message",
          "items" : {
            "type" : "string"
          }
        },
        "alias" : {
          "type" : "string",
          "example" : "Barry",
          "description" : "Alias for connection"
        },
        "attachments" : {
          "type" : "array",
          "description" : "Optional invitation attachments",
          "items" : {
            "$ref" : "#/definitions/AttachmentDef"
          }
        },
        "goal" : {
          "type" : "string",
          "example" : "To issue a Faber College Graduate credential",
          "description" : "A self-attested string that the receiver may want to display to the user about the context-specific goal of the out-of-band message"
        },
        "goal_code" : {
          "type" : "string",
          "example" : "issue-vc",
          "description" : "A self-attested code the receiver may want to display to the user or use in automatically deciding what to do with the out-of-band message"
        },
        "handshake_protocols" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "https://didcomm.org/didexchange/1.0",
            "description" : "Handshake protocol to specify in invitation"
          }
        },
        "mediation_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Identifier for active mediation record to be used",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        "metadata" : {
          "type" : "object",
          "description" : "Optional metadata to attach to the connection created with the invitation",
          "additionalProperties" : { }
        },
        "my_label" : {
          "type" : "string",
          "example" : "Invitation to Barry",
          "description" : "Label for connection invitation"
        },
        "protocol_version" : {
          "type" : "string",
          "example" : "1.1",
          "description" : "OOB protocol version"
        },
        "use_did" : {
          "type" : "string",
          "example" : "did:example:123",
          "description" : "DID to use in invitation"
        },
        "use_did_method" : {
          "type" : "string",
          "example" : "did:peer:2",
          "description" : "DID method to use in invitation",
          "enum" : [ "did:peer:2", "did:peer:4" ]
        },
        "use_public_did" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to use public DID in invitation"
        }
      }
    },
    "InvitationMessage" : {
      "type" : "object",
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "accept" : {
          "type" : "array",
          "example" : [ "didcomm/aip1", "didcomm/aip2;env=rfc19" ],
          "description" : "List of mime type in order of preference",
          "items" : {
            "type" : "string"
          }
        },
        "goal" : {
          "type" : "string",
          "example" : "To issue a Faber College Graduate credential",
          "description" : "A self-attested string that the receiver may want to display to the user about the context-specific goal of the out-of-band message"
        },
        "goal_code" : {
          "type" : "string",
          "example" : "issue-vc",
          "description" : "A self-attested code the receiver may want to display to the user or use in automatically deciding what to do with the out-of-band message"
        },
        "handshake_protocols" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "https://didcomm.org/didexchange/1.0",
            "description" : "Handshake protocol"
          }
        },
        "imageUrl" : {
          "type" : "string",
          "format" : "url",
          "example" : "http://192.168.56.101/img/logo.jpg",
          "description" : "Optional image URL for out-of-band invitation",
          "x-nullable" : true
        },
        "label" : {
          "type" : "string",
          "example" : "Bob",
          "description" : "Optional label"
        },
        "requests~attach" : {
          "type" : "array",
          "description" : "Optional request attachment",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        },
        "services" : {
          "type" : "array",
          "example" : [ {
            "did" : "WgWxqztrNooG92RXvxSTWv",
            "id" : "string",
            "recipientKeys" : [ "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH" ],
            "routingKeys" : [ "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH" ],
            "serviceEndpoint" : "http://192.168.56.101:8020",
            "type" : "string"
          }, "did:sov:WgWxqztrNooG92RXvxSTWv" ],
          "items" : {
            "description" : "Either a DIDComm service object (as per RFC0067) or a DID string."
          }
        }
      }
    },
    "InvitationRecord" : {
      "type" : "object",
      "properties" : {
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "invi_msg_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Invitation message identifier"
        },
        "invitation" : {
          "$ref" : "#/definitions/InvitationRecord_invitation"
        },
        "invitation_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Invitation record identifier"
        },
        "invitation_url" : {
          "type" : "string",
          "example" : "https://example.com/endpoint?c_i=eyJAdHlwZSI6ICIuLi4iLCAiLi4uIjogIi4uLiJ9XX0=",
          "description" : "Invitation message URL"
        },
        "oob_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Out of band record identifier"
        },
        "state" : {
          "type" : "string",
          "example" : "await_response",
          "description" : "Out of band message exchange state"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "InvitationRecordResponse" : {
      "type" : "object"
    },
    "IssueCredentialModuleResponse" : {
      "type" : "object"
    },
    "IssueCredentialRequest" : {
      "type" : "object",
      "properties" : {
        "credential" : {
          "$ref" : "#/definitions/Credential"
        },
        "options" : {
          "$ref" : "#/definitions/LDProofVCOptions"
        }
      }
    },
    "IssueCredentialResponse" : {
      "type" : "object",
      "properties" : {
        "verifiableCredential" : {
          "$ref" : "#/definitions/VerifiableCredential"
        }
      }
    },
    "IssuerCredRevRecord" : {
      "type" : "object",
      "properties" : {
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "cred_ex_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential exchange record identifier at credential issue"
        },
        "cred_ex_version" : {
          "type" : "string",
          "description" : "Credential exchange version"
        },
        "cred_rev_id" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Credential revocation identifier",
          "pattern" : "^[1-9][0-9]*$"
        },
        "record_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Issuer credential revocation record identifier"
        },
        "rev_reg_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        },
        "state" : {
          "type" : "string",
          "example" : "issued",
          "description" : "Issue credential revocation record state"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "IssuerCredRevRecordSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "cred_def_id" : {
          "type" : "string",
          "description" : "Credential definition identifier"
        },
        "cred_ex_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential exchange record identifier at credential issue"
        },
        "cred_ex_version" : {
          "type" : "string",
          "description" : "Credential exchange version"
        },
        "cred_rev_id" : {
          "type" : "string",
          "description" : "Credential revocation identifier"
        },
        "record_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Issuer credential revocation record identifier"
        },
        "rev_reg_id" : {
          "type" : "string",
          "description" : "Revocation registry identifier"
        },
        "state" : {
          "type" : "string",
          "example" : "issued",
          "description" : "Issue credential revocation record state"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "IssuerRevRegRecord" : {
      "type" : "object",
      "properties" : {
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "error_msg" : {
          "type" : "string",
          "example" : "Revocation registry undefined",
          "description" : "Error message"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "max_cred_num" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "Maximum number of credentials for revocation registry"
        },
        "pending_pub" : {
          "type" : "array",
          "description" : "Credential revocation identifier for credential revoked and pending publication to ledger",
          "items" : {
            "type" : "string",
            "example" : "23"
          }
        },
        "record_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Issuer revocation registry record identifier"
        },
        "revoc_def_type" : {
          "type" : "string",
          "example" : "CL_ACCUM",
          "description" : "Revocation registry type (specify CL_ACCUM)",
          "enum" : [ "CL_ACCUM" ]
        },
        "revoc_reg_def" : {
          "$ref" : "#/definitions/IssuerRevRegRecord_revoc_reg_def"
        },
        "revoc_reg_entry" : {
          "$ref" : "#/definitions/IssuerRevRegRecord_revoc_reg_entry"
        },
        "revoc_reg_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Issue revocation registry record state"
        },
        "tag" : {
          "type" : "string",
          "description" : "Tag within issuer revocation registry identifier"
        },
        "tails_hash" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "Tails hash",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        },
        "tails_local_path" : {
          "type" : "string",
          "description" : "Local path to tails file"
        },
        "tails_public_uri" : {
          "type" : "string",
          "description" : "Public URI for tails file"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "JWSCreate" : {
      "type" : "object",
      "required" : [ "payload" ],
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "did:peer:WgWxqztrNooG92RXvxSTWv",
          "description" : "DID of interest",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "payload" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "verificationMethod" : {
          "type" : "string",
          "example" : "did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL",
          "description" : "Information used for proof verification",
          "pattern" : "\\w+:(\\/?\\/?)[^\\s]+"
        }
      }
    },
    "JWSVerify" : {
      "type" : "object",
      "properties" : {
        "jwt" : {
          "type" : "string",
          "example" : "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk",
          "pattern" : "^[a-zA-Z0-9_-]+\\.[a-zA-Z0-9_-]*\\.[a-zA-Z0-9_-]+$"
        }
      }
    },
    "JWSVerifyResponse" : {
      "type" : "object",
      "required" : [ "headers", "kid", "payload", "valid" ],
      "properties" : {
        "error" : {
          "type" : "string",
          "description" : "Error text"
        },
        "headers" : {
          "type" : "object",
          "description" : "Headers from verified JWT.",
          "additionalProperties" : { }
        },
        "kid" : {
          "type" : "string",
          "description" : "kid of signer"
        },
        "payload" : {
          "type" : "object",
          "description" : "Payload from verified JWT",
          "additionalProperties" : { }
        },
        "valid" : {
          "type" : "boolean"
        }
      }
    },
    "Keylist" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "List of keylist records",
          "items" : {
            "$ref" : "#/definitions/RouteRecord"
          }
        }
      }
    },
    "KeylistQuery" : {
      "type" : "object",
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "filter" : {
          "type" : "object",
          "example" : {
            "filter" : { }
          },
          "description" : "Query dictionary object",
          "additionalProperties" : { }
        },
        "paginate" : {
          "$ref" : "#/definitions/KeylistQuery_paginate"
        }
      }
    },
    "KeylistQueryFilterRequest" : {
      "type" : "object",
      "properties" : {
        "filter" : {
          "type" : "object",
          "description" : "Filter for keylist query",
          "additionalProperties" : { }
        }
      }
    },
    "KeylistQueryPaginate" : {
      "type" : "object",
      "properties" : {
        "limit" : {
          "type" : "integer",
          "example" : 30,
          "description" : "Limit for keylist query"
        },
        "offset" : {
          "type" : "integer",
          "example" : 0,
          "description" : "Offset value for query"
        }
      }
    },
    "KeylistUpdate" : {
      "type" : "object",
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "updates" : {
          "type" : "array",
          "description" : "List of update rules",
          "items" : {
            "$ref" : "#/definitions/KeylistUpdateRule"
          }
        }
      }
    },
    "KeylistUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "updates" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/KeylistUpdateRule"
          }
        }
      }
    },
    "KeylistUpdateRule" : {
      "type" : "object",
      "required" : [ "action", "recipient_key" ],
      "properties" : {
        "action" : {
          "type" : "string",
          "example" : "add",
          "description" : "Action for specific key",
          "enum" : [ "add", "remove" ]
        },
        "recipient_key" : {
          "type" : "string",
          "example" : "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
          "description" : "Key to remove or add",
          "pattern" : "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$|^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        }
      }
    },
    "LDProofVCDetail" : {
      "type" : "object",
      "required" : [ "credential", "options" ],
      "properties" : {
        "credential" : {
          "$ref" : "#/definitions/LDProofVCDetail_credential"
        },
        "options" : {
          "$ref" : "#/definitions/LDProofVCDetail_options"
        }
      },
      "additionalProperties" : true
    },
    "LDProofVCOptions" : {
      "type" : "object",
      "properties" : {
        "challenge" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "A challenge to include in the proof. SHOULD be provided by the requesting party of the credential (=holder)"
        },
        "created" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "The date and time of the proof (with a maximum accuracy in seconds). Defaults to current system time",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "credentialStatus" : {
          "$ref" : "#/definitions/LDProofVCOptions_credentialStatus"
        },
        "domain" : {
          "type" : "string",
          "example" : "example.com",
          "description" : "The intended domain of validity for the proof"
        },
        "proofPurpose" : {
          "type" : "string",
          "example" : "assertionMethod",
          "description" : "The proof purpose used for the proof. Should match proof purposes registered in the Linked Data Proofs Specification"
        },
        "proofType" : {
          "type" : "string",
          "example" : "Ed25519Signature2018",
          "description" : "The proof type used for the proof. Should match suites registered in the Linked Data Cryptographic Suite Registry"
        },
        "verificationMethod" : {
          "type" : "string",
          "example" : "did:example:123456#key-1",
          "description" : "The verification method to use for the proof. Should match a verification method in the wallet"
        }
      },
      "additionalProperties" : true
    },
    "LedgerConfigInstance" : {
      "type" : "object",
      "required" : [ "id", "is_production" ],
      "properties" : {
        "endorser_alias" : {
          "type" : "string",
          "description" : "Endorser service alias (optional)"
        },
        "endorser_did" : {
          "type" : "string",
          "description" : "Endorser DID (optional)"
        },
        "id" : {
          "type" : "string",
          "example" : "f47ac10b-58cc-4372-a567-0e02b2c3d479",
          "description" : "Ledger identifier. Auto-generated UUID4 if not provided"
        },
        "is_production" : {
          "type" : "boolean",
          "description" : "Production-grade ledger (true/false)"
        },
        "is_write" : {
          "type" : "boolean",
          "description" : "Write capability enabled (default: False)"
        },
        "keepalive" : {
          "type" : "integer",
          "description" : "Keep-alive timeout in seconds for idle connections"
        },
        "pool_name" : {
          "type" : "string",
          "example" : "bcovrin-test-pool",
          "description" : "Ledger pool name (defaults to ledger ID if not specified)"
        },
        "read_only" : {
          "type" : "boolean",
          "description" : "Read-only access (default: False)"
        },
        "socks_proxy" : {
          "type" : "string",
          "description" : "SOCKS proxy URL (optional)"
        }
      }
    },
    "LedgerConfigList" : {
      "type" : "object",
      "required" : [ "non_production_ledgers", "production_ledgers" ],
      "properties" : {
        "non_production_ledgers" : {
          "type" : "array",
          "description" : "Non-production ledgers (may be empty)",
          "items" : {
            "$ref" : "#/definitions/LedgerConfigInstance"
          }
        },
        "production_ledgers" : {
          "type" : "array",
          "description" : "Production ledgers (may be empty)",
          "items" : {
            "$ref" : "#/definitions/LedgerConfigInstance"
          }
        }
      }
    },
    "LedgerModulesResult" : {
      "type" : "object"
    },
    "LinkedDataProof" : {
      "type" : "object",
      "required" : [ "proofPurpose", "type", "verificationMethod" ],
      "properties" : {
        "challenge" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Associates a challenge with a proof, for use with a proofPurpose such as authentication"
        },
        "created" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "The string value of an ISO8601 combined date and time string generated by the Signature Algorithm",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "domain" : {
          "type" : "string",
          "example" : "https://example.com",
          "description" : "A string value specifying the restricted domain of the signature."
        },
        "jws" : {
          "type" : "string",
          "example" : "eyJhbGciOiAiRWREUc2UsICJjcml0IjogWyJiNjQiXX0..lKJU0Df_keblRKhZAS9Qq6zybm-HqUXNVZ8vgEPNTAjQ1Ch6YBKY7UBAjg6iBX5qBQ",
          "description" : "Associates a Detached Json Web Signature with a proof"
        },
        "nonce" : {
          "type" : "string",
          "example" : "CF69iO3nfvqRsRBNElE8b4wO39SyJHPM7Gg1nExltW5vSfQA1lvDCR/zXX1To0/4NLo==",
          "description" : "The nonce"
        },
        "proofPurpose" : {
          "type" : "string",
          "example" : "assertionMethod",
          "description" : "Proof purpose"
        },
        "proofValue" : {
          "type" : "string",
          "example" : "sy1AahqbzJQ63n9RtekmwzqZeVj494VppdAVJBnMYrTwft6cLJJGeTSSxCCJ6HKnRtwE7jjDh6sB2z2AAiZY9BBnCD8wUVgwqH3qchGRCuC2RugA4eQ9fUrR4Yuycac3caiaaay",
          "description" : "The proof value of a proof"
        },
        "type" : {
          "type" : "string",
          "example" : "Ed25519Signature2018",
          "description" : "Identifies the digital signature suite that was used to create the signature"
        },
        "verificationMethod" : {
          "type" : "string",
          "example" : "did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL",
          "description" : "Information used for proof verification",
          "pattern" : "\\w+:(\\/?\\/?)[^\\s]+"
        }
      },
      "additionalProperties" : true
    },
    "ListCredentialsResponse" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VerifiableCredential"
          }
        }
      }
    },
    "MediationCreateRequest" : {
      "type" : "object"
    },
    "MediationDeny" : {
      "type" : "object",
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        }
      }
    },
    "MediationGrant" : {
      "type" : "object",
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "endpoint" : {
          "type" : "string",
          "example" : "http://192.168.56.102:8020/",
          "description" : "endpoint on which messages destined for the recipient are received."
        },
        "routing_keys" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "description" : "Keys to use for forward message packaging"
          }
        }
      }
    },
    "MediationIdMatchInfo" : {
      "type" : "object",
      "required" : [ "mediation_id" ],
      "properties" : {
        "mediation_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Mediation record identifier"
        }
      }
    },
    "MediationList" : {
      "type" : "object",
      "required" : [ "results" ],
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "List of mediation records",
          "items" : {
            "$ref" : "#/definitions/MediationRecord"
          }
        }
      }
    },
    "MediationRecord" : {
      "type" : "object",
      "required" : [ "connection_id", "role" ],
      "properties" : {
        "connection_id" : {
          "type" : "string"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "endpoint" : {
          "type" : "string"
        },
        "mediation_id" : {
          "type" : "string"
        },
        "mediator_terms" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "recipient_terms" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "role" : {
          "type" : "string"
        },
        "routing_keys" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
            "pattern" : "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$"
          }
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "Menu" : {
      "type" : "object",
      "required" : [ "options" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "description" : {
          "type" : "string",
          "example" : "This menu presents options",
          "description" : "Introductory text for the menu"
        },
        "errormsg" : {
          "type" : "string",
          "example" : "Error: item not found",
          "description" : "An optional error message to display in menu header"
        },
        "options" : {
          "type" : "array",
          "description" : "List of menu options",
          "items" : {
            "$ref" : "#/definitions/MenuOption"
          }
        },
        "title" : {
          "type" : "string",
          "example" : "My Menu",
          "description" : "Menu title"
        }
      }
    },
    "MenuForm" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Window preference settings",
          "description" : "Additional descriptive text for menu form"
        },
        "params" : {
          "type" : "array",
          "description" : "List of form parameters",
          "items" : {
            "$ref" : "#/definitions/MenuFormParam"
          }
        },
        "submit-label" : {
          "type" : "string",
          "example" : "Send",
          "description" : "Alternative label for form submit button"
        },
        "title" : {
          "type" : "string",
          "example" : "Preferences",
          "description" : "Menu form title"
        }
      }
    },
    "MenuFormParam" : {
      "type" : "object",
      "required" : [ "name", "title" ],
      "properties" : {
        "default" : {
          "type" : "string",
          "example" : "0",
          "description" : "Default parameter value"
        },
        "description" : {
          "type" : "string",
          "example" : "Delay in seconds before starting",
          "description" : "Additional descriptive text for menu form parameter"
        },
        "name" : {
          "type" : "string",
          "example" : "delay",
          "description" : "Menu parameter name"
        },
        "required" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether parameter is required"
        },
        "title" : {
          "type" : "string",
          "example" : "Delay in seconds",
          "description" : "Menu parameter title"
        },
        "type" : {
          "type" : "string",
          "example" : "int",
          "description" : "Menu form parameter input type"
        }
      }
    },
    "MenuJson" : {
      "type" : "object",
      "required" : [ "options" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "User preferences for window settings",
          "description" : "Introductory text for the menu"
        },
        "errormsg" : {
          "type" : "string",
          "example" : "Error: item not present",
          "description" : "Optional error message to display in menu header"
        },
        "options" : {
          "type" : "array",
          "description" : "List of menu options",
          "items" : {
            "$ref" : "#/definitions/MenuOption"
          }
        },
        "title" : {
          "type" : "string",
          "example" : "My Menu",
          "description" : "Menu title"
        }
      }
    },
    "MenuOption" : {
      "type" : "object",
      "required" : [ "name", "title" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Window display preferences",
          "description" : "Additional descriptive text for menu option"
        },
        "disabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to show option as disabled"
        },
        "form" : {
          "$ref" : "#/definitions/MenuForm"
        },
        "name" : {
          "type" : "string",
          "example" : "window_prefs",
          "description" : "Menu option name (unique identifier)"
        },
        "title" : {
          "type" : "string",
          "example" : "Window Preferences",
          "description" : "Menu option title"
        }
      }
    },
    "MultitenantModuleResponse" : {
      "type" : "object"
    },
    "OobRecord" : {
      "type" : "object",
      "required" : [ "invi_msg_id", "invitation", "oob_id", "state" ],
      "properties" : {
        "attach_thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection record identifier"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection record identifier"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "invi_msg_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Invitation message identifier"
        },
        "invitation" : {
          "$ref" : "#/definitions/InvitationRecord_invitation"
        },
        "multi_use" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Allow for multiple uses of the oob invitation"
        },
        "oob_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Oob record identifier"
        },
        "our_recipient_key" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Recipient key used for oob invitation"
        },
        "role" : {
          "type" : "string",
          "example" : "receiver",
          "description" : "OOB Role",
          "enum" : [ "sender", "receiver" ]
        },
        "state" : {
          "type" : "string",
          "example" : "await-response",
          "description" : "Out of band message exchange state",
          "enum" : [ "initial", "prepare-response", "await-response", "reuse-not-accepted", "reuse-accepted", "done", "deleted" ]
        },
        "their_service" : {
          "$ref" : "#/definitions/ServiceDecorator"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "PerformRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Query",
          "description" : "Menu option name"
        },
        "params" : {
          "type" : "object",
          "description" : "Input parameter values",
          "additionalProperties" : {
            "type" : "string",
            "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          }
        }
      }
    },
    "PingRequest" : {
      "type" : "object",
      "properties" : {
        "comment" : {
          "type" : "string",
          "description" : "Comment for the ping message",
          "x-nullable" : true
        }
      }
    },
    "PingRequestResponse" : {
      "type" : "object",
      "properties" : {
        "thread_id" : {
          "type" : "string",
          "description" : "Thread ID of the ping message"
        }
      }
    },
    "Presentation" : {
      "type" : "object",
      "required" : [ "@context", "type" ],
      "properties" : {
        "@context" : {
          "type" : "array",
          "example" : [ "https://www.w3.org/2018/credentials/v1" ],
          "description" : "The JSON-LD context of the presentation",
          "items" : { }
        },
        "holder" : {
          "example" : "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
          "description" : "The JSON-LD Verifiable Credential Holder. Either string of object with id field."
        },
        "id" : {
          "type" : "string",
          "example" : "http://example.edu/presentations/1872",
          "description" : "The ID of the presentation",
          "pattern" : "\\w+:(\\/?\\/?)[^\\s]+"
        },
        "proof" : {
          "$ref" : "#/definitions/Presentation_proof"
        },
        "type" : {
          "type" : "array",
          "example" : [ "VerifiablePresentation" ],
          "description" : "The JSON-LD type of the presentation",
          "items" : {
            "type" : "string"
          }
        },
        "verifiableCredential" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "additionalProperties" : { }
          }
        }
      },
      "additionalProperties" : true
    },
    "PresentationDefinition" : {
      "type" : "object",
      "properties" : {
        "format" : {
          "$ref" : "#/definitions/ClaimFormat"
        },
        "id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Unique Resource Identifier",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        "input_descriptors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InputDescriptors"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "Human-friendly name that describes what the presentation definition pertains to"
        },
        "purpose" : {
          "type" : "string",
          "description" : "Describes the purpose for which the Presentation Definition's inputs are being requested"
        },
        "submission_requirements" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubmissionRequirements"
          }
        }
      }
    },
    "PresentationProposal" : {
      "type" : "object",
      "required" : [ "presentation_proposal" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "presentation_proposal" : {
          "$ref" : "#/definitions/IndyPresPreview"
        }
      }
    },
    "PresentationRequest" : {
      "type" : "object",
      "required" : [ "request_presentations~attach" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "request_presentations~attach" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        }
      }
    },
    "PresentationVerificationResult" : {
      "type" : "object",
      "required" : [ "verified" ],
      "properties" : {
        "credential_results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DocumentVerificationResult"
          }
        },
        "errors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "presentation_result" : {
          "$ref" : "#/definitions/DocumentVerificationResult"
        },
        "verified" : {
          "type" : "boolean"
        }
      }
    },
    "ProfileSettings" : {
      "type" : "object",
      "properties" : {
        "settings" : {
          "type" : "object",
          "example" : {
            "debug.invite_public" : true,
            "log.level" : "INFO",
            "public_invites" : false
          },
          "description" : "Profile settings dict",
          "additionalProperties" : { }
        }
      }
    },
    "ProofResult" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "string"
        },
        "proof" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "purpose_result" : {
          "$ref" : "#/definitions/PurposeResult"
        },
        "verified" : {
          "type" : "boolean"
        }
      }
    },
    "ProtocolDescriptor" : {
      "type" : "object",
      "required" : [ "pid" ],
      "properties" : {
        "pid" : {
          "type" : "string"
        },
        "roles" : {
          "type" : "array",
          "description" : "List of roles",
          "items" : {
            "type" : "string",
            "example" : "requester",
            "description" : "Role: requester or responder"
          },
          "x-nullable" : true
        }
      }
    },
    "ProvePresentationRequest" : {
      "type" : "object",
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/LDProofVCOptions"
        },
        "presentation" : {
          "$ref" : "#/definitions/Presentation"
        }
      }
    },
    "ProvePresentationResponse" : {
      "type" : "object",
      "properties" : {
        "verifiablePresentation" : {
          "$ref" : "#/definitions/VerifiablePresentation"
        }
      }
    },
    "PublishRevocations" : {
      "type" : "object",
      "properties" : {
        "rrid2crid" : {
          "type" : "object",
          "description" : "Credential revocation ids by revocation registry id",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "12345",
              "description" : "Credential revocation identifier",
              "pattern" : "^[1-9][0-9]*$"
            }
          }
        }
      }
    },
    "PublishRevocationsOptions" : {
      "type" : "object",
      "properties" : {
        "create_transaction_for_endorser" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Create transaction for endorser (optional, default false). Use this for agents who don't specify an author role but want to create a transaction for an endorser to sign."
        },
        "endorser_connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier (optional) (this is an example). You can set this if you know the endorser's connection id you want to use. If not specified then the agent will attempt to find an endorser connection."
        }
      }
    },
    "PublishRevocationsResultSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "rrid2crid" : {
          "type" : "object",
          "description" : "Credential revocation ids by revocation registry id",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "12345",
              "description" : "Credential revocation identifier",
              "pattern" : "^[1-9][0-9]*$"
            }
          }
        }
      }
    },
    "PublishRevocationsSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/PublishRevocationsOptions"
        },
        "rrid2crid" : {
          "type" : "object",
          "description" : "Credential revocation ids by revocation registry id",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "12345",
              "description" : "Credential revocation identifier",
              "pattern" : "^[1-9][0-9]*$"
            }
          }
        }
      }
    },
    "PurposeResult" : {
      "type" : "object",
      "properties" : {
        "controller" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "error" : {
          "type" : "string"
        },
        "valid" : {
          "type" : "boolean"
        }
      }
    },
    "Queries" : {
      "type" : "object",
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "queries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryItem"
          }
        }
      }
    },
    "Query" : {
      "type" : "object",
      "required" : [ "query" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "x-nullable" : true
        },
        "query" : {
          "type" : "string"
        }
      }
    },
    "QueryItem" : {
      "type" : "object",
      "required" : [ "feature-type", "match" ],
      "properties" : {
        "feature-type" : {
          "type" : "string",
          "description" : "feature type",
          "enum" : [ "protocol", "goal-code" ]
        },
        "match" : {
          "type" : "string",
          "description" : "match"
        }
      }
    },
    "RawEncoded" : {
      "type" : "object",
      "properties" : {
        "encoded" : {
          "type" : "string",
          "example" : "-1",
          "description" : "Encoded value",
          "pattern" : "^-?[0-9]*$"
        },
        "raw" : {
          "type" : "string",
          "description" : "Raw value"
        }
      }
    },
    "RemoveWalletRequest" : {
      "type" : "object",
      "properties" : {
        "wallet_key" : {
          "type" : "string",
          "example" : "MySecretKey123",
          "description" : "Master key used for key derivation. Only required for unmanaged wallets."
        }
      }
    },
    "ResolutionResult" : {
      "type" : "object",
      "required" : [ "did_document", "metadata" ],
      "properties" : {
        "did_document" : {
          "type" : "object",
          "description" : "DID Document",
          "additionalProperties" : { }
        },
        "metadata" : {
          "type" : "object",
          "description" : "Resolution metadata",
          "additionalProperties" : { }
        }
      }
    },
    "RevList" : {
      "type" : "object",
      "properties" : {
        "currentAccumulator" : {
          "type" : "string",
          "example" : "21 118...1FB",
          "description" : "The current accumulator value"
        },
        "issuerId" : {
          "type" : "string",
          "example" : "did:(method):WgWxqztrNooG92RXvxSTWv",
          "description" : "Issuer Identifier of the credential definition or schema"
        },
        "revRegDefId" : {
          "type" : "string",
          "example" : "did:(method):4:did:<method>:3:CL:20:tag:CL_ACCUM:0",
          "description" : "The ID of the revocation registry definition"
        },
        "revocationList" : {
          "type" : "array",
          "example" : [ 0, 1, 1, 0 ],
          "description" : "Bit list representing revoked credentials",
          "items" : {
            "type" : "integer"
          }
        },
        "timestamp" : {
          "type" : "integer",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Timestamp at which revocation list is applicable"
        }
      }
    },
    "RevListCreateRequest" : {
      "type" : "object",
      "required" : [ "rev_reg_def_id" ],
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/RevListOptions"
        },
        "rev_reg_def_id" : {
          "type" : "string",
          "example" : "did:(method):4:did:<method>:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry definition identifier"
        }
      }
    },
    "RevListOptions" : {
      "type" : "object",
      "properties" : {
        "create_transaction_for_endorser" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Create transaction for endorser (optional, default false). Use this for agents who don't specify an author role but want to create a transaction for an endorser to sign."
        },
        "endorser_connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier (optional) (this is an example). You can set this if you know the endorser's connection id you want to use. If not specified then the agent will attempt to find an endorser connection."
        }
      }
    },
    "RevListResult" : {
      "type" : "object",
      "properties" : {
        "job_id" : {
          "type" : "string"
        },
        "registration_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "revocation_list_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "revocation_list_state" : {
          "$ref" : "#/definitions/RevListState"
        }
      }
    },
    "RevListState" : {
      "type" : "object",
      "properties" : {
        "revocation_list" : {
          "$ref" : "#/definitions/RevListState_revocation_list"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "finished", "failed", "action", "wait" ]
        }
      }
    },
    "RevRegCreateRequest" : {
      "type" : "object",
      "properties" : {
        "credential_definition_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "max_cred_num" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "Revocation registry size",
          "minimum" : 4,
          "maximum" : 32768
        }
      }
    },
    "RevRegCreateRequestSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/RevRegDefOptions"
        },
        "revocation_registry_definition" : {
          "$ref" : "#/definitions/InnerRevRegDef"
        }
      }
    },
    "RevRegDef" : {
      "type" : "object",
      "properties" : {
        "credDefId" : {
          "type" : "string",
          "example" : "did:(method):3:CL:20:tag",
          "description" : "Credential definition identifier"
        },
        "issuerId" : {
          "type" : "string",
          "example" : "did:(method):WgWxqztrNooG92RXvxSTWv",
          "description" : "Issuer Identifier of the credential definition or schema"
        },
        "revocDefType" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string",
          "example" : "default",
          "description" : "tag for the revocation registry definition"
        },
        "value" : {
          "$ref" : "#/definitions/RevRegDefValue"
        }
      }
    },
    "RevRegDefOptions" : {
      "type" : "object",
      "properties" : {
        "create_transaction_for_endorser" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Create transaction for endorser (optional, default false). Use this for agents who don't specify an author role but want to create a transaction for an endorser to sign."
        },
        "endorser_connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier (optional) (this is an example). You can set this if you know the endorser's connection id you want to use. If not specified then the agent will attempt to find an endorser connection."
        }
      }
    },
    "RevRegDefResult" : {
      "type" : "object",
      "properties" : {
        "job_id" : {
          "type" : "string"
        },
        "registration_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "revocation_registry_definition_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "revocation_registry_definition_state" : {
          "$ref" : "#/definitions/RevRegDefState"
        }
      }
    },
    "RevRegDefState" : {
      "type" : "object",
      "properties" : {
        "revocation_registry_definition" : {
          "$ref" : "#/definitions/RevRegDefState_revocation_registry_definition"
        },
        "revocation_registry_definition_id" : {
          "type" : "string",
          "example" : "did:(method):4:did:<method>:3:CL:20:tag:CL_ACCUM:0",
          "description" : "revocation registry definition id"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "finished", "failed", "action", "wait", "decommissioned", "full" ]
        }
      }
    },
    "RevRegDefValue" : {
      "type" : "object",
      "properties" : {
        "maxCredNum" : {
          "type" : "integer",
          "example" : 777
        },
        "publicKeys" : {
          "type" : "object",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "additionalProperties" : { }
        },
        "tailsHash" : {
          "type" : "string",
          "example" : "7Qen9RDyemMuV7xGQvp7NjwMSpyHieJyBakycxN7dX7P"
        },
        "tailsLocation" : {
          "type" : "string",
          "example" : "https://tails-server.com/hash/7Qen9RDyemMuV7xGQvp7NjwMSpyHieJyBakycxN7dX7P"
        }
      }
    },
    "RevRegIssuedResult" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "integer",
          "example" : 0,
          "description" : "Number of credentials issued against revocation registry",
          "minimum" : 0
        }
      }
    },
    "RevRegIssuedResultSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "integer",
          "example" : 0,
          "description" : "Number of credentials issued against revocation registry",
          "minimum" : 0
        }
      }
    },
    "RevRegResult" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/IssuerRevRegRecord"
        }
      }
    },
    "RevRegResultSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/IssuerRevRegRecord"
        }
      }
    },
    "RevRegUpdateTailsFileUri" : {
      "type" : "object",
      "required" : [ "tails_public_uri" ],
      "properties" : {
        "tails_public_uri" : {
          "type" : "string",
          "format" : "url",
          "example" : "http://192.168.56.133:6543/revocation/registry/WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0/tails-file",
          "description" : "Public URI to the tails file"
        }
      }
    },
    "RevRegWalletUpdatedResult" : {
      "type" : "object",
      "properties" : {
        "accum_calculated" : {
          "type" : "object",
          "description" : "Calculated accumulator for phantom revocations",
          "additionalProperties" : { }
        },
        "accum_fixed" : {
          "type" : "object",
          "description" : "Applied ledger transaction to fix revocations",
          "additionalProperties" : { }
        },
        "rev_reg_delta" : {
          "type" : "object",
          "description" : "Indy revocation registry delta",
          "additionalProperties" : { }
        }
      }
    },
    "RevRegWalletUpdatedResultSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "accum_calculated" : {
          "type" : "object",
          "description" : "Calculated accumulator for phantom revocations",
          "additionalProperties" : { }
        },
        "accum_fixed" : {
          "type" : "object",
          "description" : "Applied ledger transaction to fix revocations",
          "additionalProperties" : { }
        },
        "rev_reg_delta" : {
          "type" : "object",
          "description" : "Indy revocation registry delta",
          "additionalProperties" : { }
        }
      }
    },
    "RevRegsCreated" : {
      "type" : "object",
      "properties" : {
        "rev_reg_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
            "description" : "Revocation registry identifiers",
            "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
          }
        }
      }
    },
    "RevRegsCreatedSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "rev_reg_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "did:(method):4:did:<method>:3:CL:20:tag:CL_ACCUM:0",
            "description" : "Revocation registry identifiers",
            "pattern" : "^(.+$)"
          }
        }
      }
    },
    "RevocationModuleResponse" : {
      "type" : "object"
    },
    "RevokeRequest" : {
      "type" : "object",
      "properties" : {
        "comment" : {
          "type" : "string",
          "description" : "Optional comment to include in revocation notification"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection ID to which the revocation notification will be sent; required if notify is true",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        "cred_ex_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential exchange identifier",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        "cred_rev_id" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Credential revocation identifier",
          "pattern" : "^[1-9][0-9]*$"
        },
        "notify" : {
          "type" : "boolean",
          "description" : "Send a notification to the credential recipient"
        },
        "notify_version" : {
          "type" : "string",
          "description" : "Specify which version of the revocation notification should be sent",
          "enum" : [ "v1_0", "v2_0" ]
        },
        "publish" : {
          "type" : "boolean",
          "description" : "(True) publish revocation to ledger immediately, or (default, False) mark it pending"
        },
        "rev_reg_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        },
        "thread_id" : {
          "type" : "string",
          "description" : "Thread ID of the credential exchange message thread resulting in the credential now being revoked; required if notify is true"
        }
      }
    },
    "RevokeRequestSchemaAnonCreds" : {
      "type" : "object",
      "properties" : {
        "comment" : {
          "type" : "string",
          "description" : "Optional comment to include in revocation notification"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection ID to which the revocation notification will be sent; required if notify is true",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        "cred_ex_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential exchange identifier",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        "cred_rev_id" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Credential revocation identifier",
          "pattern" : "^[1-9][0-9]*$"
        },
        "notify" : {
          "type" : "boolean",
          "description" : "Send a notification to the credential recipient"
        },
        "notify_version" : {
          "type" : "string",
          "description" : "Specify which version of the revocation notification should be sent",
          "enum" : [ "v1_0", "v2_0" ]
        },
        "publish" : {
          "type" : "boolean",
          "description" : "(True) publish revocation to ledger immediately, or (default, False) mark it pending"
        },
        "rev_reg_id" : {
          "type" : "string",
          "example" : "did:(method):4:did:<method>:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry identifier",
          "pattern" : "^(.+$)"
        },
        "thread_id" : {
          "type" : "string",
          "description" : "Thread ID of the credential exchange message thread resulting in the credential now being revoked; required if notify is true"
        }
      }
    },
    "Rotate" : {
      "type" : "object",
      "required" : [ "to_did" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "to_did" : {
          "type" : "string",
          "example" : "did:example:newdid",
          "description" : "The DID the rotating party is rotating to"
        }
      }
    },
    "RouteRecord" : {
      "type" : "object",
      "required" : [ "recipient_key" ],
      "properties" : {
        "connection_id" : {
          "type" : "string"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "recipient_key" : {
          "type" : "string"
        },
        "record_id" : {
          "type" : "string"
        },
        "role" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "wallet_id" : {
          "type" : "string"
        }
      }
    },
    "SDJWSCreate" : {
      "type" : "object",
      "required" : [ "payload" ],
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "did:peer:WgWxqztrNooG92RXvxSTWv",
          "description" : "DID of interest",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+)(:[a-zA-Z0-9_.%-]+)?:([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "non_sd_list" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "",
            "pattern" : "[a-z0-9:\\[\\]_\\.@?\\(\\)]"
          }
        },
        "payload" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "verificationMethod" : {
          "type" : "string",
          "example" : "did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL",
          "description" : "Information used for proof verification",
          "pattern" : "\\w+:(\\/?\\/?)[^\\s]+"
        }
      }
    },
    "SDJWSVerify" : {
      "type" : "object",
      "properties" : {
        "sd_jwt" : {
          "type" : "string",
          "example" : "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk~WyJEM3BUSFdCYWNRcFdpREc2TWZKLUZnIiwgIkRFIl0~WyJPMTFySVRjRTdHcXExYW9oRkd0aDh3IiwgIlNBIl0~WyJkVmEzX1JlTGNsWTU0R1FHZm5oWlRnIiwgInVwZGF0ZWRfYXQiLCAxNTcwMDAwMDAwXQ",
          "pattern" : "^[a-zA-Z0-9_-]+\\.[a-zA-Z0-9_-]*\\.[a-zA-Z0-9_-]+(?:~[a-zA-Z0-9._-]+)*~?$"
        }
      }
    },
    "SDJWSVerifyResponse" : {
      "type" : "object",
      "required" : [ "headers", "kid", "payload", "valid" ],
      "properties" : {
        "disclosures" : {
          "type" : "array",
          "example" : [ [ "fx1iT_mETjGiC-JzRARnVg", "name", "Alice" ], [ "n4-t3mlh8jSS6yMIT7QHnA", "street_address", {
            "_sd" : [ "kLZrLK7enwfqeOzJ9-Ss88YS3mhjOAEk9lr_ix2Heng" ]
          } ] ],
          "description" : "Disclosure arrays associated with the SD-JWT",
          "items" : {
            "type" : "array",
            "items" : { }
          }
        },
        "error" : {
          "type" : "string",
          "description" : "Error text"
        },
        "headers" : {
          "type" : "object",
          "description" : "Headers from verified JWT.",
          "additionalProperties" : { }
        },
        "kid" : {
          "type" : "string",
          "description" : "kid of signer"
        },
        "payload" : {
          "type" : "object",
          "description" : "Payload from verified JWT",
          "additionalProperties" : { }
        },
        "valid" : {
          "type" : "boolean"
        }
      }
    },
    "Schema" : {
      "type" : "object",
      "properties" : {
        "attrNames" : {
          "type" : "array",
          "description" : "Schema attribute names",
          "items" : {
            "type" : "string",
            "example" : "score",
            "description" : "Attribute name"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "name" : {
          "type" : "string",
          "example" : "schema_name",
          "description" : "Schema name"
        },
        "seqNo" : {
          "type" : "integer",
          "example" : 10,
          "description" : "Schema sequence number",
          "minimum" : 1
        },
        "ver" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Node protocol version",
          "pattern" : "^[0-9.]+$"
        },
        "version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "SchemaGetResult" : {
      "type" : "object",
      "properties" : {
        "schema" : {
          "$ref" : "#/definitions/Schema"
        }
      }
    },
    "SchemaInputDescriptor" : {
      "type" : "object",
      "properties" : {
        "required" : {
          "type" : "boolean",
          "description" : "Required"
        },
        "uri" : {
          "type" : "string",
          "description" : "URI"
        }
      }
    },
    "SchemaPostOption" : {
      "type" : "object",
      "properties" : {
        "create_transaction_for_endorser" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Create transaction for endorser (optional, default false). Use this for agents who don't specify an author role but want to create a transaction for an endorser to sign."
        },
        "endorser_connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier (optional) (this is an example). You can set this if you know the endorser's connection id you want to use. If not specified then the agent will attempt to find an endorser connection."
        }
      }
    },
    "SchemaPostRequest" : {
      "type" : "object",
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/SchemaPostOption"
        },
        "schema" : {
          "$ref" : "#/definitions/AnonCredsSchema"
        }
      }
    },
    "SchemaResult" : {
      "type" : "object",
      "properties" : {
        "job_id" : {
          "type" : "string"
        },
        "registration_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "schema_metadata" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "schema_state" : {
          "$ref" : "#/definitions/SchemaState"
        }
      }
    },
    "SchemaSendRequest" : {
      "type" : "object",
      "required" : [ "attributes", "schema_name", "schema_version" ],
      "properties" : {
        "attributes" : {
          "type" : "array",
          "description" : "List of schema attributes",
          "items" : {
            "type" : "string",
            "example" : "score",
            "description" : "attribute name"
          }
        },
        "schema_name" : {
          "type" : "string",
          "example" : "prefs",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "SchemaSendResult" : {
      "type" : "object",
      "required" : [ "schema_id" ],
      "properties" : {
        "schema" : {
          "$ref" : "#/definitions/SchemaSendResult_schema"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        }
      }
    },
    "SchemaState" : {
      "type" : "object",
      "properties" : {
        "schema" : {
          "$ref" : "#/definitions/AnonCredsSchema"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "did:(method):2:schema_name:1.0",
          "description" : "Schema identifier"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "finished", "failed", "action", "wait" ]
        }
      }
    },
    "SchemasCreatedResult" : {
      "type" : "object",
      "properties" : {
        "schema_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
            "description" : "Schema identifiers",
            "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
          }
        }
      }
    },
    "SchemasInputDescriptorFilter" : {
      "type" : "object",
      "properties" : {
        "oneof_filter" : {
          "type" : "boolean",
          "description" : "oneOf"
        },
        "uri_groups" : {
          "type" : "array",
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/SchemaInputDescriptor"
            }
          }
        }
      }
    },
    "SendMenu" : {
      "type" : "object",
      "required" : [ "menu" ],
      "properties" : {
        "menu" : {
          "$ref" : "#/definitions/SendMenu_menu"
        }
      }
    },
    "SendMessage" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "type" : "string",
          "example" : "Hello",
          "description" : "Message content"
        }
      }
    },
    "ServiceDecorator" : {
      "type" : "object",
      "required" : [ "recipientKeys", "serviceEndpoint" ],
      "properties" : {
        "recipientKeys" : {
          "type" : "array",
          "description" : "List of recipient keys",
          "items" : {
            "type" : "string",
            "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
            "description" : "Recipient public key",
            "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
          }
        },
        "routingKeys" : {
          "type" : "array",
          "description" : "List of routing keys",
          "items" : {
            "type" : "string",
            "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
            "description" : "Routing key",
            "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
          }
        },
        "serviceEndpoint" : {
          "type" : "string",
          "example" : "http://192.168.56.101:8020",
          "description" : "Service endpoint at which to reach this agent"
        }
      }
    },
    "SignRequest" : {
      "type" : "object",
      "required" : [ "doc", "verkey" ],
      "properties" : {
        "doc" : {
          "$ref" : "#/definitions/Doc"
        },
        "verkey" : {
          "type" : "string",
          "description" : "Verkey to use for signing"
        }
      }
    },
    "SignResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "string",
          "description" : "Error text"
        },
        "signed_doc" : {
          "type" : "object",
          "description" : "Signed document",
          "additionalProperties" : { }
        }
      }
    },
    "SignatureOptions" : {
      "type" : "object",
      "required" : [ "proofPurpose", "verificationMethod" ],
      "properties" : {
        "challenge" : {
          "type" : "string"
        },
        "domain" : {
          "type" : "string"
        },
        "proofPurpose" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "verificationMethod" : {
          "type" : "string"
        }
      }
    },
    "SignedDoc" : {
      "type" : "object",
      "required" : [ "proof" ],
      "properties" : {
        "proof" : {
          "$ref" : "#/definitions/SignedDoc_proof"
        }
      },
      "additionalProperties" : true
    },
    "StoreCredentialRequest" : {
      "type" : "object",
      "properties" : {
        "verifiableCredential" : {
          "$ref" : "#/definitions/VerifiableCredential"
        }
      }
    },
    "StoreCredentialResponse" : {
      "type" : "object",
      "properties" : {
        "credentialId" : {
          "type" : "string"
        }
      }
    },
    "SubmissionRequirements" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1234,
          "description" : "Count Value"
        },
        "from" : {
          "type" : "string",
          "description" : "From"
        },
        "from_nested" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubmissionRequirements"
          }
        },
        "max" : {
          "type" : "integer",
          "example" : 1234,
          "description" : "Max Value"
        },
        "min" : {
          "type" : "integer",
          "example" : 1234,
          "description" : "Min Value"
        },
        "name" : {
          "type" : "string",
          "description" : "Name"
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose"
        },
        "rule" : {
          "type" : "string",
          "description" : "Selection",
          "enum" : [ "all", "pick" ]
        }
      }
    },
    "TAAAccept" : {
      "type" : "object",
      "properties" : {
        "mechanism" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "TAAAcceptance" : {
      "type" : "object",
      "properties" : {
        "mechanism" : {
          "type" : "string"
        },
        "time" : {
          "type" : "integer",
          "example" : 1640995199,
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "TAAInfo" : {
      "type" : "object",
      "properties" : {
        "aml_record" : {
          "$ref" : "#/definitions/AMLRecord"
        },
        "taa_accepted" : {
          "$ref" : "#/definitions/TAAAcceptance"
        },
        "taa_record" : {
          "$ref" : "#/definitions/TAARecord"
        },
        "taa_required" : {
          "type" : "boolean"
        }
      }
    },
    "TAARecord" : {
      "type" : "object",
      "properties" : {
        "digest" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "TAAResult" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/TAAInfo"
        }
      }
    },
    "TailsDeleteResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        }
      }
    },
    "TransactionJobs" : {
      "type" : "object",
      "properties" : {
        "transaction_my_job" : {
          "type" : "string",
          "description" : "My transaction related job",
          "enum" : [ "TRANSACTION_AUTHOR", "TRANSACTION_ENDORSER", "reset" ]
        },
        "transaction_their_job" : {
          "type" : "string",
          "description" : "Their transaction related job",
          "enum" : [ "TRANSACTION_AUTHOR", "TRANSACTION_ENDORSER", "reset" ]
        }
      }
    },
    "TransactionList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "List of transaction records",
          "items" : {
            "$ref" : "#/definitions/TransactionRecord"
          }
        }
      }
    },
    "TransactionRecord" : {
      "type" : "object",
      "properties" : {
        "_type" : {
          "type" : "string",
          "example" : "101",
          "description" : "Transaction type"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "The connection identifier for this particular transaction record"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "endorser_write_txn" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Request Endorser to write the ledger transaction, this parameter is deprecated and no longer supported."
        },
        "formats" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : {
              "attach_id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "format" : "dif/endorse-transaction/request@v1.0"
            },
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "messages_attach" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : {
              "@id" : "143c458d-1b1c-40c7-ab85-4d16808ddf0a",
              "data" : {
                "json" : "{\"endorser\": \"V4SGRU86Z58d6TV7PBUe6f\",\"identifier\": \"LjgpST2rjsoxYegQDRm7EL\",\"operation\": {\"data\": {\"attr_names\": [\"first_name\", \"last_name\"],\"name\": \"test_schema\",\"version\": \"2.1\",},\"type\": \"101\",},\"protocolVersion\": 2,\"reqId\": 1597766666168851000,\"signatures\": {\"LjgpST2rjsox\": \"4ATKMn6Y9sTgwqaGTm7py2c2M8x1EVDTWKZArwyuPgjU\"}, \"taaAcceptance\": {\"mechanism\": \"manual\",\"taaDigest\": \"f50fe2c2ab977006761d36bd6f23e4c6a7e0fc2feb9f62\",\"time\": 1597708800,}}"
              },
              "mime-type" : "application/json"
            },
            "additionalProperties" : { }
          }
        },
        "meta_data" : {
          "type" : "object",
          "example" : {
            "context" : {
              "param1" : "param1_value",
              "param2" : "param2_value"
            },
            "post_process" : [ {
              "topic" : "topic_value",
              "other" : "other_value"
            } ]
          },
          "additionalProperties" : { }
        },
        "signature_request" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : {
              "author_goal_code" : "aries.transaction.ledger.write",
              "context" : "did:sov",
              "method" : "add-signature",
              "signature_type" : "default",
              "signer_goal_code" : "aries.transaction.endorse"
            },
            "additionalProperties" : { }
          }
        },
        "signature_response" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "example" : {
              "context" : "did:sov",
              "message_id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "method" : "add-signature",
              "signer_goal_code" : "aries.transaction.refuse"
            },
            "additionalProperties" : { }
          }
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Thread Identifier"
        },
        "timing" : {
          "type" : "object",
          "example" : {
            "expires_time" : "2020-12-13T17:29:06+0000"
          },
          "additionalProperties" : { }
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "transaction_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Transaction identifier"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "TxnOrCredentialDefinitionSendResult" : {
      "type" : "object",
      "properties" : {
        "sent" : {
          "$ref" : "#/definitions/CredentialDefinitionSendResult"
        },
        "txn" : {
          "$ref" : "#/definitions/TxnOrCredentialDefinitionSendResult_txn"
        }
      }
    },
    "TxnOrPublishRevocationsResult" : {
      "type" : "object",
      "properties" : {
        "rrid2crid" : {
          "type" : "object",
          "description" : "Credential revocation ids by revocation registry id",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "12345",
              "description" : "Credential revocation identifier",
              "pattern" : "^[1-9][0-9]*$"
            }
          }
        },
        "txn" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "description" : "Revocation registry revocations transaction to endorse",
            "allOf" : [ {
              "$ref" : "#/definitions/TransactionRecord"
            } ]
          }
        }
      }
    },
    "TxnOrRegisterLedgerNymResponse" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Success of nym registration operation"
        },
        "txn" : {
          "$ref" : "#/definitions/TxnOrRegisterLedgerNymResponse_txn"
        }
      }
    },
    "TxnOrRevRegResult" : {
      "type" : "object",
      "properties" : {
        "sent" : {
          "$ref" : "#/definitions/RevRegResult"
        },
        "txn" : {
          "$ref" : "#/definitions/TxnOrRevRegResult_txn"
        }
      }
    },
    "TxnOrSchemaSendResult" : {
      "type" : "object",
      "properties" : {
        "sent" : {
          "$ref" : "#/definitions/TxnOrSchemaSendResult_sent"
        },
        "txn" : {
          "$ref" : "#/definitions/TxnOrSchemaSendResult_txn"
        }
      }
    },
    "UpdateKeyRequest" : {
      "type" : "object",
      "required" : [ "kid", "multikey" ],
      "properties" : {
        "kid" : {
          "type" : "string",
          "example" : "did:web:example.com#key-02",
          "description" : "New kid to bind to the key pair, such as a verificationMethod."
        },
        "multikey" : {
          "type" : "string",
          "example" : "z6MkgKA7yrw5kYSiDuQFcye4bMaJpcfHFry3Bx45pdWh3s8i",
          "description" : "Multikey of the key pair to update"
        }
      }
    },
    "UpdateKeyResponse" : {
      "type" : "object",
      "properties" : {
        "kid" : {
          "type" : "string",
          "example" : "did:web:example.com#key-02",
          "description" : "The associated kid"
        },
        "multikey" : {
          "type" : "string",
          "example" : "z6MkgKA7yrw5kYSiDuQFcye4bMaJpcfHFry3Bx45pdWh3s8i",
          "description" : "The Public Key Multibase format (multikey)"
        }
      }
    },
    "UpdateProfileSettings" : {
      "type" : "object",
      "properties" : {
        "extra_settings" : {
          "type" : "object",
          "example" : {
            "ACAPY_INVITE_PUBLIC" : true,
            "log-level" : "INFO",
            "public-invites" : false
          },
          "description" : "Agent config key-value pairs",
          "additionalProperties" : { }
        }
      }
    },
    "UpdateWalletRequest" : {
      "type" : "object",
      "properties" : {
        "extra_settings" : {
          "type" : "object",
          "description" : "Agent config key-value pairs",
          "additionalProperties" : { }
        },
        "image_url" : {
          "type" : "string",
          "example" : "https://aries.ca/images/sample.png",
          "description" : "Image url for this wallet. This image url is publicized (self-attested) to other agents as part of forming a connection."
        },
        "label" : {
          "type" : "string",
          "example" : "Alice",
          "description" : "Label for this wallet. This label is publicized (self-attested) to other agents as part of forming a connection."
        },
        "wallet_dispatch_type" : {
          "type" : "string",
          "example" : "default",
          "description" : "Webhook target dispatch type for this wallet. default: Dispatch only to webhooks associated with this wallet. base: Dispatch only to webhooks associated with the base wallet. both: Dispatch to both webhook targets.",
          "enum" : [ "default", "both", "base" ]
        },
        "wallet_webhook_urls" : {
          "type" : "array",
          "description" : "List of Webhook URLs associated with this subwallet",
          "items" : {
            "type" : "string",
            "example" : "http://localhost:8022/webhooks",
            "description" : "Optional webhook URL to receive webhook messages"
          }
        }
      }
    },
    "UpgradeResult" : {
      "type" : "object"
    },
    "V10CredentialBoundOfferRequest" : {
      "type" : "object",
      "properties" : {
        "counter_proposal" : {
          "$ref" : "#/definitions/V10CredentialBoundOfferRequest_counter_proposal"
        }
      }
    },
    "V10CredentialConnFreeOfferRequest" : {
      "type" : "object",
      "required" : [ "cred_def_id", "credential_preview" ],
      "properties" : {
        "auto_issue" : {
          "type" : "boolean",
          "description" : "Whether to respond automatically to credential requests, creating and issuing requested credentials"
        },
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_preview" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        }
      }
    },
    "V10CredentialCreate" : {
      "type" : "object",
      "required" : [ "credential_proposal" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_proposal" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Credential issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "schema_issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Schema issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_name" : {
          "type" : "string",
          "example" : "preferences",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        }
      }
    },
    "V10CredentialExchange" : {
      "type" : "object",
      "properties" : {
        "auto_issue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Issuer choice to issue to request in this credential exchange"
        },
        "auto_offer" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Holder choice to accept offer in this credential exchange"
        },
        "auto_remove" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Issuer choice to remove this credential exchange record when complete"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "credential" : {
          "$ref" : "#/definitions/V10CredentialExchange_credential"
        },
        "credential_definition_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_exchange_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential exchange identifier"
        },
        "credential_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential identifier"
        },
        "credential_offer" : {
          "$ref" : "#/definitions/V10CredentialExchange_credential_offer"
        },
        "credential_offer_dict" : {
          "$ref" : "#/definitions/V10CredentialExchange_credential_offer_dict"
        },
        "credential_proposal_dict" : {
          "$ref" : "#/definitions/V10CredentialExchange_credential_proposal_dict"
        },
        "credential_request" : {
          "$ref" : "#/definitions/V10CredentialExchange_credential_request"
        },
        "credential_request_metadata" : {
          "type" : "object",
          "description" : "(Indy) credential request metadata",
          "additionalProperties" : { }
        },
        "error_msg" : {
          "type" : "string",
          "example" : "Credential definition identifier is not set in proposal",
          "description" : "Error message"
        },
        "initiator" : {
          "type" : "string",
          "example" : "self",
          "description" : "Issue-credential exchange initiator: self or external",
          "enum" : [ "self", "external" ]
        },
        "parent_thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Parent thread identifier"
        },
        "raw_credential" : {
          "$ref" : "#/definitions/V10CredentialExchange_raw_credential"
        },
        "revoc_reg_id" : {
          "type" : "string",
          "description" : "Revocation registry identifier"
        },
        "revocation_id" : {
          "type" : "string",
          "description" : "Credential identifier within revocation registry"
        },
        "role" : {
          "type" : "string",
          "example" : "issuer",
          "description" : "Issue-credential exchange role: holder or issuer",
          "enum" : [ "holder", "issuer" ]
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "state" : {
          "type" : "string",
          "example" : "credential_acked",
          "description" : "Issue-credential exchange state"
        },
        "thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Thread identifier"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "V10CredentialExchangeAutoRemoveRequest" : {
      "type" : "object",
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        }
      }
    },
    "V10CredentialExchangeListResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "Aries#0036 v1.0 credential exchange records",
          "items" : {
            "$ref" : "#/definitions/V10CredentialExchange"
          }
        }
      }
    },
    "V10CredentialFreeOfferRequest" : {
      "type" : "object",
      "required" : [ "connection_id", "cred_def_id", "credential_preview" ],
      "properties" : {
        "auto_issue" : {
          "type" : "boolean",
          "description" : "Whether to respond automatically to credential requests, creating and issuing requested credentials"
        },
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_preview" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        }
      }
    },
    "V10CredentialIssueRequest" : {
      "type" : "object",
      "properties" : {
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        }
      }
    },
    "V10CredentialProblemReportRequest" : {
      "type" : "object",
      "required" : [ "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        }
      }
    },
    "V10CredentialProposalRequestMand" : {
      "type" : "object",
      "required" : [ "connection_id", "credential_proposal" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_proposal" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Credential issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "schema_issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Schema issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_name" : {
          "type" : "string",
          "example" : "preferences",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        }
      }
    },
    "V10CredentialProposalRequestOpt" : {
      "type" : "object",
      "required" : [ "connection_id" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_proposal" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Credential issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "schema_issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Schema issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_name" : {
          "type" : "string",
          "example" : "preferences",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        }
      }
    },
    "V10CredentialStoreRequest" : {
      "type" : "object",
      "properties" : {
        "credential_id" : {
          "type" : "string"
        }
      }
    },
    "V10DiscoveryExchangeListResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "description" : "Discover Features v1.0 exchange record",
            "allOf" : [ {
              "$ref" : "#/definitions/V10DiscoveryRecord"
            } ]
          }
        }
      }
    },
    "V10DiscoveryRecord" : {
      "type" : "object",
      "properties" : {
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "disclose" : {
          "$ref" : "#/definitions/V10DiscoveryRecord_disclose"
        },
        "discovery_exchange_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential exchange identifier"
        },
        "query_msg" : {
          "$ref" : "#/definitions/V10DiscoveryRecord_query_msg"
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Thread identifier"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "V10PresentProofModuleResponse" : {
      "type" : "object"
    },
    "V10PresentationCreateRequestRequest" : {
      "type" : "object",
      "required" : [ "proof_request" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the presentation exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "auto_verify" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Verifier choice to auto-verify proof presentation"
        },
        "comment" : {
          "type" : "string",
          "x-nullable" : true
        },
        "proof_request" : {
          "$ref" : "#/definitions/IndyProofRequest"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10PresentationExchange" : {
      "type" : "object",
      "properties" : {
        "auto_present" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Prover choice to auto-present proof as verifier requests"
        },
        "auto_remove" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Verifier choice to remove this presentation exchange record when complete"
        },
        "auto_verify" : {
          "type" : "boolean",
          "description" : "Verifier choice to auto-verify proof presentation"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "error_msg" : {
          "type" : "string",
          "example" : "Invalid structure",
          "description" : "Error message"
        },
        "initiator" : {
          "type" : "string",
          "example" : "self",
          "description" : "Present-proof exchange initiator: self or external",
          "enum" : [ "self", "external" ]
        },
        "presentation" : {
          "$ref" : "#/definitions/V10PresentationExchange_presentation"
        },
        "presentation_exchange_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Presentation exchange identifier"
        },
        "presentation_proposal_dict" : {
          "$ref" : "#/definitions/V10PresentationExchange_presentation_proposal_dict"
        },
        "presentation_request" : {
          "$ref" : "#/definitions/V10PresentationExchange_presentation_request"
        },
        "presentation_request_dict" : {
          "$ref" : "#/definitions/V10PresentationExchange_presentation_request_dict"
        },
        "role" : {
          "type" : "string",
          "example" : "prover",
          "description" : "Present-proof exchange role: prover or verifier",
          "enum" : [ "prover", "verifier" ]
        },
        "state" : {
          "type" : "string",
          "example" : "verified",
          "description" : "Present-proof exchange state"
        },
        "thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Thread identifier"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "verified" : {
          "type" : "string",
          "example" : "true",
          "description" : "Whether presentation is verified: true or false",
          "enum" : [ "true", "false" ]
        },
        "verified_msgs" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "description" : "Proof verification warning or error information"
          }
        }
      }
    },
    "V10PresentationExchangeList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "Aries RFC 37 v1.0 presentation exchange records",
          "items" : {
            "$ref" : "#/definitions/V10PresentationExchange"
          }
        }
      }
    },
    "V10PresentationProblemReportRequest" : {
      "type" : "object",
      "required" : [ "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        }
      }
    },
    "V10PresentationProposalRequest" : {
      "type" : "object",
      "required" : [ "connection_id", "presentation_proposal" ],
      "properties" : {
        "auto_present" : {
          "type" : "boolean",
          "description" : "Whether to respond automatically to presentation requests, building and presenting requested proof"
        },
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the presentation exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "presentation_proposal" : {
          "$ref" : "#/definitions/IndyPresPreview"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10PresentationSendRequest" : {
      "type" : "object",
      "required" : [ "requested_attributes", "requested_predicates", "self_attested_attributes" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the presentation exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "requested_attributes" : {
          "type" : "object",
          "description" : "Nested object mapping proof request attribute referents to requested-attribute specifiers",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyRequestedCredsRequestedAttr"
          }
        },
        "requested_predicates" : {
          "type" : "object",
          "description" : "Nested object mapping proof request predicate referents to requested-predicate specifiers",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyRequestedCredsRequestedPred"
          }
        },
        "self_attested_attributes" : {
          "type" : "object",
          "description" : "Self-attested attributes to build into proof",
          "additionalProperties" : {
            "type" : "string",
            "example" : "self_attested_value",
            "description" : "Self-attested attribute values to use in requested-credentials structure for proof construction"
          }
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10PresentationSendRequestRequest" : {
      "type" : "object",
      "required" : [ "connection_id", "proof_request" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the presentation exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "auto_verify" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Verifier choice to auto-verify proof presentation"
        },
        "comment" : {
          "type" : "string",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "proof_request" : {
          "$ref" : "#/definitions/IndyProofRequest"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10PresentationSendRequestToProposal" : {
      "type" : "object",
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the presentation exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "auto_verify" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Verifier choice to auto-verify proof presentation"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V20CredAttrSpec" : {
      "type" : "object",
      "required" : [ "name", "value" ],
      "properties" : {
        "mime-type" : {
          "type" : "string",
          "example" : "image/jpeg",
          "description" : "MIME type: omit for (null) default",
          "x-nullable" : true
        },
        "name" : {
          "type" : "string",
          "example" : "favourite_drink",
          "description" : "Attribute name"
        },
        "value" : {
          "type" : "string",
          "example" : "martini",
          "description" : "Attribute value: base64-encode if MIME type is present"
        }
      }
    },
    "V20CredBoundOfferRequest" : {
      "type" : "object",
      "properties" : {
        "counter_preview" : {
          "$ref" : "#/definitions/V20CredBoundOfferRequest_counter_preview"
        },
        "filter" : {
          "$ref" : "#/definitions/V20CredBoundOfferRequest_filter"
        }
      }
    },
    "V20CredExFree" : {
      "type" : "object",
      "required" : [ "connection_id", "filter" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "credential_preview" : {
          "$ref" : "#/definitions/V20CredPreview"
        },
        "filter" : {
          "$ref" : "#/definitions/V20CredBoundOfferRequest_filter"
        },
        "replacement_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Optional identifier used to manage credential replacement",
          "x-nullable" : true
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "verification_method" : {
          "type" : "string",
          "description" : "For ld-proofs. Verification method for signing.",
          "x-nullable" : true
        }
      }
    },
    "V20CredExRecord" : {
      "type" : "object",
      "properties" : {
        "auto_issue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Issuer choice to issue to request in this credential exchange"
        },
        "auto_offer" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Holder choice to accept offer in this credential exchange"
        },
        "auto_remove" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Issuer choice to remove this credential exchange record when complete"
        },
        "by_format" : {
          "$ref" : "#/definitions/V20CredExRecord_by_format"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "cred_ex_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential exchange identifier"
        },
        "cred_issue" : {
          "$ref" : "#/definitions/V20CredExRecord_cred_issue"
        },
        "cred_offer" : {
          "$ref" : "#/definitions/V10CredentialExchange_credential_offer_dict"
        },
        "cred_preview" : {
          "$ref" : "#/definitions/V20CredExRecord_cred_preview"
        },
        "cred_proposal" : {
          "$ref" : "#/definitions/V10CredentialExchange_credential_proposal_dict"
        },
        "cred_request" : {
          "$ref" : "#/definitions/V20CredExRecord_cred_request"
        },
        "error_msg" : {
          "type" : "string",
          "example" : "The front fell off",
          "description" : "Error message"
        },
        "initiator" : {
          "type" : "string",
          "example" : "self",
          "description" : "Issue-credential exchange initiator: self or external",
          "enum" : [ "self", "external" ]
        },
        "parent_thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Parent thread identifier"
        },
        "role" : {
          "type" : "string",
          "example" : "issuer",
          "description" : "Issue-credential exchange role: holder or issuer",
          "enum" : [ "issuer", "holder" ]
        },
        "state" : {
          "type" : "string",
          "example" : "done",
          "description" : "Issue-credential exchange state",
          "enum" : [ "proposal-sent", "proposal-received", "offer-sent", "offer-received", "request-sent", "request-received", "credential-issued", "credential-received", "done", "credential-revoked", "abandoned", "deleted" ]
        },
        "thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Thread identifier"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "V20CredExRecordByFormat" : {
      "type" : "object",
      "properties" : {
        "cred_issue" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "cred_offer" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "cred_proposal" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "cred_request" : {
          "type" : "object",
          "additionalProperties" : { }
        }
      }
    },
    "V20CredExRecordDetail" : {
      "type" : "object",
      "properties" : {
        "cred_ex_record" : {
          "$ref" : "#/definitions/V20CredExRecordDetail_cred_ex_record"
        },
        "indy" : {
          "$ref" : "#/definitions/V20CredExRecordIndy"
        },
        "ld_proof" : {
          "$ref" : "#/definitions/V20CredExRecordLDProof"
        },
        "vc_di" : {
          "$ref" : "#/definitions/V20CredExRecord"
        }
      }
    },
    "V20CredExRecordIndy" : {
      "type" : "object",
      "properties" : {
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "cred_ex_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Corresponding v2.0 credential exchange record identifier"
        },
        "cred_ex_indy_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Record identifier"
        },
        "cred_id_stored" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential identifier stored in wallet"
        },
        "cred_request_metadata" : {
          "type" : "object",
          "description" : "Credential request metadata for indy holder",
          "additionalProperties" : { }
        },
        "cred_rev_id" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Credential revocation identifier within revocation registry",
          "pattern" : "^[1-9][0-9]*$"
        },
        "rev_reg_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "V20CredExRecordLDProof" : {
      "type" : "object",
      "properties" : {
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "cred_ex_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Corresponding v2.0 credential exchange record identifier"
        },
        "cred_ex_ld_proof_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Record identifier"
        },
        "cred_id_stored" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential identifier stored in wallet"
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "V20CredExRecordListResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "Credential exchange records and corresponding detail records",
          "items" : {
            "$ref" : "#/definitions/V20CredExRecordDetail"
          }
        }
      }
    },
    "V20CredFilter" : {
      "type" : "object",
      "properties" : {
        "anoncreds" : {
          "$ref" : "#/definitions/V20CredFilter_anoncreds"
        },
        "indy" : {
          "$ref" : "#/definitions/V20CredFilter_indy"
        },
        "ld_proof" : {
          "$ref" : "#/definitions/V20CredFilter_ld_proof"
        },
        "vc_di" : {
          "$ref" : "#/definitions/V20CredFilter_vc_di"
        }
      }
    },
    "V20CredFilterAnonCreds" : {
      "type" : "object",
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "did:(method):3:CL:20:tag",
          "description" : "Credential definition identifier"
        },
        "issuer_id" : {
          "type" : "string",
          "example" : "did:(method):WgWxqztrNooG92RXvxSTWv",
          "description" : "Credential issuer ID"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "did:(method):2:schema_name:1.0",
          "description" : "Schema identifier"
        },
        "schema_issuer_id" : {
          "type" : "string",
          "example" : "did:(method):WgWxqztrNooG92RXvxSTWv",
          "description" : "Schema issuer ID"
        },
        "schema_name" : {
          "type" : "string",
          "example" : "preferences",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version"
        }
      }
    },
    "V20CredFilterIndy" : {
      "type" : "object",
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Credential issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "schema_issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Schema issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_name" : {
          "type" : "string",
          "example" : "preferences",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "V20CredFilterLDProof" : {
      "type" : "object",
      "required" : [ "ld_proof" ],
      "properties" : {
        "ld_proof" : {
          "$ref" : "#/definitions/V20CredFilter_ld_proof"
        }
      }
    },
    "V20CredFilterVCDI" : {
      "type" : "object",
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Credential issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "schema_issuer_did" : {
          "type" : "string",
          "example" : "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "description" : "Schema issuer DID",
          "pattern" : "^(did:(sov|indy):)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_name" : {
          "type" : "string",
          "example" : "preferences",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "V20CredFormat" : {
      "type" : "object",
      "required" : [ "attach_id", "format" ],
      "properties" : {
        "attach_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Attachment identifier"
        },
        "format" : {
          "type" : "string",
          "example" : "aries/ld-proof-vc-detail@v1.0",
          "description" : "Attachment format specifier"
        }
      }
    },
    "V20CredIssue" : {
      "type" : "object",
      "required" : [ "credentials~attach", "formats" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "credentials~attach" : {
          "type" : "array",
          "description" : "Credential attachments",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        },
        "formats" : {
          "type" : "array",
          "description" : "Acceptable attachment formats",
          "items" : {
            "$ref" : "#/definitions/V20CredFormat"
          }
        },
        "replacement_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Issuer-unique identifier to coordinate credential replacement"
        }
      }
    },
    "V20CredIssueProblemReportRequest" : {
      "type" : "object",
      "required" : [ "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        }
      }
    },
    "V20CredIssueRequest" : {
      "type" : "object",
      "properties" : {
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        }
      }
    },
    "V20CredOffer" : {
      "type" : "object",
      "required" : [ "formats", "offers~attach" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "credential_preview" : {
          "$ref" : "#/definitions/V20CredPreview"
        },
        "formats" : {
          "type" : "array",
          "description" : "Acceptable credential formats",
          "items" : {
            "$ref" : "#/definitions/V20CredFormat"
          }
        },
        "offers~attach" : {
          "type" : "array",
          "description" : "Offer attachments",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        },
        "replacement_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Issuer-unique identifier to coordinate credential replacement"
        }
      }
    },
    "V20CredOfferConnFreeRequest" : {
      "type" : "object",
      "required" : [ "filter" ],
      "properties" : {
        "auto_issue" : {
          "type" : "boolean",
          "description" : "Whether to respond automatically to credential requests, creating and issuing requested credentials"
        },
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "credential_preview" : {
          "$ref" : "#/definitions/V20CredPreview"
        },
        "filter" : {
          "$ref" : "#/definitions/V20CredBoundOfferRequest_filter"
        },
        "replacement_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Optional identifier used to manage credential replacement",
          "x-nullable" : true
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        }
      }
    },
    "V20CredOfferRequest" : {
      "type" : "object",
      "required" : [ "connection_id", "filter" ],
      "properties" : {
        "auto_issue" : {
          "type" : "boolean",
          "description" : "Whether to respond automatically to credential requests, creating and issuing requested credentials"
        },
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "credential_preview" : {
          "$ref" : "#/definitions/V20CredPreview"
        },
        "filter" : {
          "$ref" : "#/definitions/V20CredBoundOfferRequest_filter"
        },
        "replacement_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Optional identifier used to manage credential replacement",
          "x-nullable" : true
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        }
      }
    },
    "V20CredPreview" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "@type" : {
          "type" : "string",
          "example" : "issue-credential/2.0/credential-preview",
          "description" : "Message type identifier"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/V20CredAttrSpec"
          }
        }
      }
    },
    "V20CredProposal" : {
      "type" : "object",
      "required" : [ "filters~attach", "formats" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "credential_preview" : {
          "$ref" : "#/definitions/V20CredProposal_credential_preview"
        },
        "filters~attach" : {
          "type" : "array",
          "description" : "Credential filter per acceptable format on corresponding identifier",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        },
        "formats" : {
          "type" : "array",
          "description" : "Attachment formats",
          "items" : {
            "$ref" : "#/definitions/V20CredFormat"
          }
        }
      }
    },
    "V20CredRequest" : {
      "type" : "object",
      "required" : [ "formats", "requests~attach" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "formats" : {
          "type" : "array",
          "description" : "Acceptable attachment formats",
          "items" : {
            "$ref" : "#/definitions/V20CredFormat"
          }
        },
        "requests~attach" : {
          "type" : "array",
          "description" : "Request attachments",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        }
      }
    },
    "V20CredRequestFree" : {
      "type" : "object",
      "required" : [ "connection_id", "filter" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "filter" : {
          "$ref" : "#/definitions/V20CredBoundOfferRequest_filter"
        },
        "holder_did" : {
          "type" : "string",
          "example" : "did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs",
          "description" : "Holder DID to substitute for the credentialSubject.id",
          "x-nullable" : true
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V20CredRequestRequest" : {
      "type" : "object",
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "holder_did" : {
          "type" : "string",
          "example" : "did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs",
          "description" : "Holder DID to substitute for the credentialSubject.id",
          "x-nullable" : true
        }
      }
    },
    "V20CredStoreRequest" : {
      "type" : "object",
      "properties" : {
        "credential_id" : {
          "type" : "string"
        }
      }
    },
    "V20DiscoveryExchangeListResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "description" : "Discover Features v2.0 exchange record",
            "allOf" : [ {
              "$ref" : "#/definitions/V20DiscoveryRecord"
            } ]
          }
        }
      }
    },
    "V20DiscoveryExchangeResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "$ref" : "#/definitions/V20DiscoveryExchangeResult_results"
        }
      }
    },
    "V20DiscoveryRecord" : {
      "type" : "object",
      "properties" : {
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "disclosures" : {
          "$ref" : "#/definitions/V20DiscoveryRecord_disclosures"
        },
        "discovery_exchange_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential exchange identifier"
        },
        "queries_msg" : {
          "$ref" : "#/definitions/V20DiscoveryRecord_queries_msg"
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Thread identifier"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "V20IssueCredSchemaCore" : {
      "type" : "object",
      "required" : [ "filter" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "credential_preview" : {
          "$ref" : "#/definitions/V20CredPreview"
        },
        "filter" : {
          "$ref" : "#/definitions/V20CredBoundOfferRequest_filter"
        },
        "replacement_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Optional identifier used to manage credential replacement",
          "x-nullable" : true
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        }
      }
    },
    "V20IssueCredentialModuleResponse" : {
      "type" : "object"
    },
    "V20Pres" : {
      "type" : "object",
      "required" : [ "formats", "presentations~attach" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "formats" : {
          "type" : "array",
          "description" : "Acceptable attachment formats",
          "items" : {
            "$ref" : "#/definitions/V20PresFormat"
          }
        },
        "presentations~attach" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        }
      }
    },
    "V20PresCreateRequestRequest" : {
      "type" : "object",
      "required" : [ "presentation_request" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the presentation exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "auto_verify" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Verifier choice to auto-verify proof presentation"
        },
        "comment" : {
          "type" : "string",
          "x-nullable" : true
        },
        "presentation_request" : {
          "$ref" : "#/definitions/V20PresRequestByFormat"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V20PresExRecord" : {
      "type" : "object",
      "properties" : {
        "auto_present" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Prover choice to auto-present proof as verifier requests"
        },
        "auto_remove" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Verifier choice to remove this presentation exchange record when complete"
        },
        "auto_verify" : {
          "type" : "boolean",
          "description" : "Verifier choice to auto-verify proof presentation"
        },
        "by_format" : {
          "$ref" : "#/definitions/V20PresExRecord_by_format"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "error_msg" : {
          "type" : "string",
          "example" : "Invalid structure",
          "description" : "Error message"
        },
        "initiator" : {
          "type" : "string",
          "example" : "self",
          "description" : "Present-proof exchange initiator: self or external",
          "enum" : [ "self", "external" ]
        },
        "pres" : {
          "$ref" : "#/definitions/V20PresExRecord_pres"
        },
        "pres_ex_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Presentation exchange identifier"
        },
        "pres_proposal" : {
          "$ref" : "#/definitions/V10PresentationExchange_presentation_proposal_dict"
        },
        "pres_request" : {
          "$ref" : "#/definitions/V10PresentationExchange_presentation_request_dict"
        },
        "role" : {
          "type" : "string",
          "example" : "prover",
          "description" : "Present-proof exchange role: prover or verifier",
          "enum" : [ "prover", "verifier" ]
        },
        "state" : {
          "type" : "string",
          "description" : "Present-proof exchange state",
          "enum" : [ "proposal-sent", "proposal-received", "request-sent", "request-received", "presentation-sent", "presentation-received", "done", "abandoned", "deleted" ]
        },
        "thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Thread identifier"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "verified" : {
          "type" : "string",
          "example" : "true",
          "description" : "Whether presentation is verified: 'true' or 'false'",
          "enum" : [ "true", "false" ]
        },
        "verified_msgs" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "description" : "Proof verification warning or error information"
          }
        }
      }
    },
    "V20PresExRecordByFormat" : {
      "type" : "object",
      "properties" : {
        "pres" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "pres_proposal" : {
          "type" : "object",
          "additionalProperties" : { }
        },
        "pres_request" : {
          "type" : "object",
          "additionalProperties" : { }
        }
      }
    },
    "V20PresExRecordList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "Presentation exchange records",
          "items" : {
            "$ref" : "#/definitions/V20PresExRecord"
          }
        }
      }
    },
    "V20PresFormat" : {
      "type" : "object",
      "required" : [ "attach_id", "format" ],
      "properties" : {
        "attach_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Attachment identifier"
        },
        "format" : {
          "type" : "string",
          "example" : "dif/presentation-exchange/submission@v1.0",
          "description" : "Attachment format specifier"
        }
      }
    },
    "V20PresProblemReportRequest" : {
      "type" : "object",
      "required" : [ "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        }
      }
    },
    "V20PresProposal" : {
      "type" : "object",
      "required" : [ "formats", "proposals~attach" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment"
        },
        "formats" : {
          "type" : "array",
          "description" : "Acceptable attachment formats",
          "items" : {
            "$ref" : "#/definitions/V20PresFormat"
          }
        },
        "proposals~attach" : {
          "type" : "array",
          "description" : "Attachment per acceptable format on corresponding identifier",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        }
      }
    },
    "V20PresProposalByFormat" : {
      "type" : "object",
      "properties" : {
        "anoncreds" : {
          "$ref" : "#/definitions/V20PresProposalByFormat_anoncreds"
        },
        "dif" : {
          "$ref" : "#/definitions/V20PresProposalByFormat_dif"
        },
        "indy" : {
          "$ref" : "#/definitions/V20PresProposalByFormat_indy"
        }
      }
    },
    "V20PresProposalRequest" : {
      "type" : "object",
      "required" : [ "connection_id", "presentation_proposal" ],
      "properties" : {
        "auto_present" : {
          "type" : "boolean",
          "description" : "Whether to respond automatically to presentation requests, building and presenting requested proof"
        },
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the presentation exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "presentation_proposal" : {
          "$ref" : "#/definitions/V20PresProposalByFormat"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V20PresRequest" : {
      "type" : "object",
      "required" : [ "formats", "request_presentations~attach" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment"
        },
        "formats" : {
          "type" : "array",
          "description" : "Acceptable attachment formats",
          "items" : {
            "$ref" : "#/definitions/V20PresFormat"
          }
        },
        "request_presentations~attach" : {
          "type" : "array",
          "description" : "Attachment per acceptable format on corresponding identifier",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        },
        "will_confirm" : {
          "type" : "boolean",
          "description" : "Whether verifier will send confirmation ack"
        }
      }
    },
    "V20PresRequestByFormat" : {
      "type" : "object",
      "properties" : {
        "anoncreds" : {
          "$ref" : "#/definitions/V20PresProposalByFormat_anoncreds"
        },
        "dif" : {
          "$ref" : "#/definitions/V20PresRequestByFormat_dif"
        },
        "indy" : {
          "$ref" : "#/definitions/V20PresRequestByFormat_indy"
        }
      }
    },
    "V20PresSendRequestRequest" : {
      "type" : "object",
      "required" : [ "connection_id", "presentation_request" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the presentation exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "auto_verify" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Verifier choice to auto-verify proof presentation"
        },
        "comment" : {
          "type" : "string",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "presentation_request" : {
          "$ref" : "#/definitions/V20PresRequestByFormat"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V20PresSpecByFormatRequest" : {
      "type" : "object",
      "properties" : {
        "anoncreds" : {
          "$ref" : "#/definitions/V20PresSpecByFormatRequest_anoncreds"
        },
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the presentation exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "dif" : {
          "$ref" : "#/definitions/V20PresSpecByFormatRequest_dif"
        },
        "indy" : {
          "$ref" : "#/definitions/V20PresSpecByFormatRequest_indy"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        }
      }
    },
    "V20PresentProofModuleResponse" : {
      "type" : "object"
    },
    "V20PresentationSendRequestToProposal" : {
      "type" : "object",
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the presentation exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "auto_verify" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Verifier choice to auto-verify proof presentation"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "VCRecord" : {
      "type" : "object",
      "properties" : {
        "contexts" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "https://myhost:8021",
            "description" : "Context",
            "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
          }
        },
        "cred_tags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string",
            "description" : "Retrieval tag value"
          }
        },
        "cred_value" : {
          "type" : "object",
          "description" : "(JSON-serializable) credential value",
          "additionalProperties" : { }
        },
        "expanded_types" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "https://w3id.org/citizenship#PermanentResidentCard",
            "description" : "JSON-LD expanded type extracted from type and context"
          }
        },
        "given_id" : {
          "type" : "string",
          "example" : "http://example.edu/credentials/3732",
          "description" : "Credential identifier"
        },
        "issuer_id" : {
          "type" : "string",
          "example" : "https://example.edu/issuers/14",
          "description" : "Issuer identifier"
        },
        "proof_types" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "Ed25519Signature2018",
            "description" : "Signature suite used for proof"
          }
        },
        "record_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Record identifier"
        },
        "schema_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "https://example.org/examples/degree.json",
            "description" : "Schema identifier"
          }
        },
        "subject_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "did:example:ebfeb1f712ebc6f1c276e12ec21",
            "description" : "Subject identifier"
          }
        }
      }
    },
    "VCRecordList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VCRecord"
          }
        }
      }
    },
    "VerifiableCredential" : {
      "type" : "object",
      "required" : [ "@context", "credentialSubject", "issuer", "proof", "type" ],
      "properties" : {
        "@context" : {
          "type" : "array",
          "example" : [ "https://www.w3.org/2018/credentials/v1", "https://www.w3.org/2018/credentials/examples/v1" ],
          "description" : "The JSON-LD context of the credential",
          "items" : { }
        },
        "credentialStatus" : {
          "example" : ""
        },
        "credentialSubject" : {
          "example" : ""
        },
        "expirationDate" : {
          "type" : "string",
          "example" : "2010-01-01T19:23:24Z",
          "description" : "The expiration date",
          "pattern" : "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$"
        },
        "id" : {
          "type" : "string",
          "example" : "http://example.edu/credentials/1872",
          "description" : "The ID of the credential",
          "pattern" : "\\w+:(\\/?\\/?)[^\\s]+"
        },
        "issuanceDate" : {
          "type" : "string",
          "example" : "2010-01-01T19:23:24Z",
          "description" : "The issuance date",
          "pattern" : "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$"
        },
        "issuer" : {
          "example" : "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
          "description" : "The JSON-LD Verifiable Credential Issuer. Either string of object with id field."
        },
        "proof" : {
          "$ref" : "#/definitions/Credential_proof"
        },
        "type" : {
          "type" : "array",
          "example" : [ "VerifiableCredential", "AlumniCredential" ],
          "description" : "The JSON-LD type of the credential",
          "items" : {
            "type" : "string"
          }
        },
        "validFrom" : {
          "type" : "string",
          "example" : "2010-01-01T19:23:24Z",
          "description" : "The valid from date",
          "pattern" : "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$"
        },
        "validUntil" : {
          "type" : "string",
          "example" : "2010-01-01T19:23:24Z",
          "description" : "The valid until date",
          "pattern" : "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$"
        }
      },
      "additionalProperties" : true
    },
    "VerifiablePresentation" : {
      "type" : "object",
      "required" : [ "@context", "proof", "type" ],
      "properties" : {
        "@context" : {
          "type" : "array",
          "example" : [ "https://www.w3.org/2018/credentials/v1" ],
          "description" : "The JSON-LD context of the presentation",
          "items" : { }
        },
        "holder" : {
          "example" : "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
          "description" : "The JSON-LD Verifiable Credential Holder. Either string of object with id field."
        },
        "id" : {
          "type" : "string",
          "example" : "http://example.edu/presentations/1872",
          "description" : "The ID of the presentation",
          "pattern" : "\\w+:(\\/?\\/?)[^\\s]+"
        },
        "proof" : {
          "$ref" : "#/definitions/Presentation_proof"
        },
        "type" : {
          "type" : "array",
          "example" : [ "VerifiablePresentation" ],
          "description" : "The JSON-LD type of the presentation",
          "items" : {
            "type" : "string"
          }
        },
        "verifiableCredential" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "additionalProperties" : { }
          }
        }
      },
      "additionalProperties" : true
    },
    "VerifyCredentialRequest" : {
      "type" : "object",
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/LDProofVCOptions"
        },
        "verifiableCredential" : {
          "$ref" : "#/definitions/VerifiableCredential"
        }
      }
    },
    "VerifyCredentialResponse" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "$ref" : "#/definitions/PresentationVerificationResult"
        }
      }
    },
    "VerifyDiRequest" : {
      "type" : "object",
      "required" : [ "securedDocument" ],
      "properties" : {
        "securedDocument" : {
          "type" : "object",
          "example" : {
            "hello" : "world",
            "proof" : [ {
              "cryptosuite" : "eddsa-jcs-2022",
              "proofPurpose" : "assertionMethod",
              "type" : "DataIntegrityProof",
              "verificationMethod" : "did:key:                            z6MksxraKwH8GR7NKeQ4HVZAeRKvD76kfd6G7jm8MscbDmy8#                                z6MksxraKwH8GR7NKeQ4HVZAeRKvD76kfd6G7jm8MscbDmy8",
              "proofValue" : "zHtda8vV7kJQUPfSKiTGSQDhZfhkgtpnVziT7cdEzhu                            fjPjbeRmysHvizMJEox1eHR7xUGzNUj1V4yaKiLw7UA6E"
            } ]
          },
          "additionalProperties" : { }
        }
      }
    },
    "VerifyDiResponse" : {
      "type" : "object",
      "properties" : {
        "verified" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Verified"
        }
      }
    },
    "VerifyPresentationRequest" : {
      "type" : "object",
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/LDProofVCOptions"
        },
        "verifiablePresentation" : {
          "$ref" : "#/definitions/VerifiablePresentation"
        }
      }
    },
    "VerifyPresentationResponse" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "$ref" : "#/definitions/PresentationVerificationResult"
        }
      }
    },
    "VerifyRequest" : {
      "type" : "object",
      "required" : [ "doc" ],
      "properties" : {
        "doc" : {
          "$ref" : "#/definitions/VerifyRequest_doc"
        },
        "verkey" : {
          "type" : "string",
          "description" : "Verkey to use for doc verification"
        }
      }
    },
    "VerifyResponse" : {
      "type" : "object",
      "required" : [ "valid" ],
      "properties" : {
        "error" : {
          "type" : "string",
          "description" : "Error text"
        },
        "valid" : {
          "type" : "boolean"
        }
      }
    },
    "W3CCredentialsListRequest" : {
      "type" : "object",
      "properties" : {
        "contexts" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "https://myhost:8021",
            "description" : "Credential context to match",
            "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
          }
        },
        "given_id" : {
          "type" : "string",
          "description" : "Given credential id to match"
        },
        "issuer_id" : {
          "type" : "string",
          "description" : "Credential issuer identifier to match"
        },
        "max_results" : {
          "type" : "integer",
          "description" : "Maximum number of results to return"
        },
        "proof_types" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "Ed25519Signature2018",
            "description" : "Signature suite used for proof"
          }
        },
        "schema_ids" : {
          "type" : "array",
          "description" : "Schema identifiers, all of which to match",
          "items" : {
            "type" : "string",
            "example" : "https://myhost:8021",
            "description" : "Credential schema identifier",
            "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
          }
        },
        "subject_ids" : {
          "type" : "array",
          "description" : "Subject identifiers, all of which to match",
          "items" : {
            "type" : "string",
            "description" : "Subject identifier"
          }
        },
        "tag_query" : {
          "type" : "object",
          "description" : "Tag filter",
          "additionalProperties" : {
            "type" : "string",
            "description" : "Tag value"
          }
        },
        "types" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "https://myhost:8021",
            "description" : "Credential type to match",
            "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
          }
        }
      }
    },
    "WalletList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "List of wallet records",
          "items" : {
            "$ref" : "#/definitions/WalletRecord"
          }
        }
      }
    },
    "WalletModuleResponse" : {
      "type" : "object"
    },
    "WalletRecord" : {
      "type" : "object",
      "required" : [ "key_management_mode", "wallet_id" ],
      "properties" : {
        "created_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "key_management_mode" : {
          "type" : "string",
          "description" : "Mode regarding management of wallet key",
          "enum" : [ "managed", "unmanaged" ]
        },
        "settings" : {
          "type" : "object",
          "description" : "Settings for this wallet.",
          "additionalProperties" : { }
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2021-12-31T23:59:59Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "wallet_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Wallet record ID"
        }
      }
    },
    "WriteLedger" : {
      "type" : "object",
      "properties" : {
        "ledger_id" : {
          "type" : "string"
        }
      }
    },
    "ActionMenuFetchResult_result" : {
      "type" : "object",
      "description" : "Action menu"
    },
    "AddProof_options" : {
      "type" : "object",
      "example" : "{\"cryptosuite\":\"eddsa-jcs-2022\",\"proofPurpose\":\"assertionMethod\",\"type\":\"DataIntegrityProof\",\"verificationMethod\":\"did:web:example.com#key-01\"}"
    },
    "AttachDecoratorData_jws" : {
      "type" : "object",
      "description" : "Detached Java Web Signature"
    },
    "CredDefState_credential_definition" : {
      "type" : "object",
      "description" : "credential definition"
    },
    "CredDefValue_primary" : {
      "type" : "object",
      "description" : "Primary value for credential definition"
    },
    "CredDefValue_revocation" : {
      "type" : "object",
      "description" : "Revocation value for credential definition"
    },
    "Credential_proof" : {
      "type" : "object",
      "description" : "The proof of the credential",
      "example" : "{\"created\":\"2019-12-11T03:50:55\",\"jws\":\"eyJhbGciOiAiRWREU0EiLCAiYjY0IjogZmFsc2UsICJjcml0JiNjQiXX0..lKJU0Df_keblRKhZAS9Qq6zybm-HqUXNVZ8vgEPNTAjQKBhQDxvXNo7nvtUBb_Eq1Ch6YBKY5qBQ\",\"proofPurpose\":\"assertionMethod\",\"type\":\"Ed25519Signature2018\",\"verificationMethod\":\"did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL\"}"
    },
    "CredentialDefinition_value" : {
      "type" : "object",
      "description" : "Credential definition primary and revocation values"
    },
    "DIDCreate_options" : {
      "type" : "object",
      "description" : "To define a key type and/or a did depending on chosen DID method."
    },
    "DIDXRequest_did_docattach" : {
      "type" : "object",
      "description" : "As signed attachment, DID Doc associated with DID"
    },
    "Doc_options" : {
      "type" : "object",
      "description" : "Signature options"
    },
    "IndyCredAbstract_key_correctness_proof" : {
      "type" : "object",
      "description" : "Key correctness proof"
    },
    "IndyCredPrecis_cred_info" : {
      "type" : "object",
      "description" : "Credential info"
    },
    "IndyCredPrecis_interval" : {
      "type" : "object",
      "description" : "Non-revocation interval from presentation request"
    },
    "IndyPrimaryProof_eq_proof" : {
      "type" : "object",
      "description" : "Indy equality proof",
      "x-nullable" : true
    },
    "IndyProof_proof" : {
      "type" : "object",
      "description" : "Indy proof.proof content"
    },
    "IndyProof_requested_proof" : {
      "type" : "object",
      "description" : "Indy proof.requested_proof content"
    },
    "IndyProofProof_aggregated_proof" : {
      "type" : "object",
      "description" : "Indy proof aggregated proof"
    },
    "IndyProofProofProofsProof_non_revoc_proof" : {
      "type" : "object",
      "description" : "Indy non-revocation proof",
      "x-nullable" : true
    },
    "IndyProofProofProofsProof_primary_proof" : {
      "type" : "object",
      "description" : "Indy primary proof"
    },
    "IndyRevRegDef_value" : {
      "type" : "object",
      "description" : "Revocation registry definition value"
    },
    "IndyRevRegDefValue_publicKeys" : {
      "type" : "object",
      "description" : "Public keys"
    },
    "IndyRevRegEntry_value" : {
      "type" : "object",
      "description" : "Revocation registry entry value"
    },
    "InputDescriptors_schema" : {
      "type" : "object",
      "description" : "Accepts a list of schema or a dict containing filters like oneof_filter.",
      "example" : "{\"oneof_filter\":[[{\"uri\":\"https://www.w3.org/Test1#Test1\"},{\"uri\":\"https://www.w3.org/Test2#Test2\"}],{\"oneof_filter\":[[{\"uri\":\"https://www.w3.org/Test1#Test1\"}],[{\"uri\":\"https://www.w3.org/Test2#Test2\"}]]}]}"
    },
    "InvitationRecord_invitation" : {
      "type" : "object",
      "description" : "Out of band invitation message"
    },
    "IssuerRevRegRecord_revoc_reg_def" : {
      "type" : "object",
      "description" : "Revocation registry definition"
    },
    "IssuerRevRegRecord_revoc_reg_entry" : {
      "type" : "object",
      "description" : "Revocation registry entry"
    },
    "KeylistQuery_paginate" : {
      "type" : "object",
      "description" : "Pagination info"
    },
    "LDProofVCDetail_credential" : {
      "type" : "object",
      "description" : "Detail of the JSON-LD Credential to be issued",
      "example" : "{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://w3id.org/citizenship/v1\"],\"credentialSubject\":{\"familyName\":\"SMITH\",\"gender\":\"Male\",\"givenName\":\"JOHN\",\"type\":[\"PermanentResident\",\"Person\"]},\"description\":\"Government of Example Permanent Resident Card.\",\"identifier\":\"83627465\",\"issuanceDate\":\"2019-12-03T12:19:52Z\",\"issuer\":\"did:key:z6MkmjY8GnV5i9YTDtPETC2uUAW6ejw3nk5mXF5yci5ab7th\",\"name\":\"Permanent Resident Card\",\"type\":[\"VerifiableCredential\",\"PermanentResidentCard\"]}"
    },
    "LDProofVCDetail_options" : {
      "type" : "object",
      "description" : "Options for specifying how the linked data proof is created.",
      "example" : "{\"proofType\":\"Ed25519Signature2018\"}"
    },
    "LDProofVCOptions_credentialStatus" : {
      "type" : "object",
      "description" : "The credential status mechanism to use for the credential. Omitting the property indicates the issued credential will not include a credential status"
    },
    "Presentation_proof" : {
      "type" : "object",
      "description" : "The proof of the presentation",
      "example" : "{\"created\":\"2019-12-11T03:50:55\",\"jws\":\"eyJhbGciOiAiRWREU0EiLCAiYjY0IjogZmFsc2UsICJjcml0JiNjQiXX0..lKJU0Df_keblRKhZAS9Qq6zybm-HqUXNVZ8vgEPNTAjQKBhQDxvXNo7nvtUBb_Eq1Ch6YBKY5qBQ\",\"proofPurpose\":\"assertionMethod\",\"type\":\"Ed25519Signature2018\",\"verificationMethod\":\"did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL\"}"
    },
    "RevListState_revocation_list" : {
      "type" : "object",
      "description" : "revocation list"
    },
    "RevRegDefState_revocation_registry_definition" : {
      "type" : "object",
      "description" : "revocation registry definition"
    },
    "SchemaSendResult_schema" : {
      "type" : "object",
      "description" : "Schema definition"
    },
    "SendMenu_menu" : {
      "type" : "object",
      "description" : "Menu to send to connection"
    },
    "SignedDoc_proof" : {
      "type" : "object",
      "description" : "Linked data proof"
    },
    "TxnOrCredentialDefinitionSendResult_txn" : {
      "type" : "object",
      "description" : "Credential definition transaction to endorse"
    },
    "TxnOrRegisterLedgerNymResponse_txn" : {
      "type" : "object",
      "description" : "DID transaction to endorse"
    },
    "TxnOrRevRegResult_txn" : {
      "type" : "object",
      "description" : "Revocation registry definition transaction to endorse"
    },
    "TxnOrSchemaSendResult_sent" : {
      "type" : "object",
      "description" : "Content sent"
    },
    "TxnOrSchemaSendResult_txn" : {
      "type" : "object",
      "description" : "Schema transaction to endorse"
    },
    "V10CredentialBoundOfferRequest_counter_proposal" : {
      "type" : "object",
      "description" : "Optional counter-proposal"
    },
    "V10CredentialExchange_credential" : {
      "type" : "object",
      "description" : "Credential as stored"
    },
    "V10CredentialExchange_credential_offer" : {
      "type" : "object",
      "description" : "(Indy) credential offer"
    },
    "V10CredentialExchange_credential_offer_dict" : {
      "type" : "object",
      "description" : "Credential offer message"
    },
    "V10CredentialExchange_credential_proposal_dict" : {
      "type" : "object",
      "description" : "Credential proposal message"
    },
    "V10CredentialExchange_credential_request" : {
      "type" : "object",
      "description" : "(Indy) credential request"
    },
    "V10CredentialExchange_raw_credential" : {
      "type" : "object",
      "description" : "Credential as received, prior to storage in holder wallet"
    },
    "V10DiscoveryRecord_disclose" : {
      "type" : "object",
      "description" : "Disclose message"
    },
    "V10DiscoveryRecord_query_msg" : {
      "type" : "object",
      "description" : "Query message"
    },
    "V10PresentationExchange_presentation" : {
      "type" : "object",
      "description" : "(Indy) presentation (also known as proof)"
    },
    "V10PresentationExchange_presentation_proposal_dict" : {
      "type" : "object",
      "description" : "Presentation proposal message"
    },
    "V10PresentationExchange_presentation_request" : {
      "type" : "object",
      "description" : "(Indy) presentation request (also known as proof request)"
    },
    "V10PresentationExchange_presentation_request_dict" : {
      "type" : "object",
      "description" : "Presentation request message"
    },
    "V20CredBoundOfferRequest_counter_preview" : {
      "type" : "object",
      "description" : "Optional content for counter-proposal"
    },
    "V20CredBoundOfferRequest_filter" : {
      "type" : "object",
      "description" : "Credential specification criteria by format"
    },
    "V20CredExRecord_by_format" : {
      "type" : "object",
      "description" : "Attachment content by format for proposal, offer, request, and issue"
    },
    "V20CredExRecord_cred_issue" : {
      "type" : "object",
      "description" : "Serialized credential issue message"
    },
    "V20CredExRecord_cred_preview" : {
      "type" : "object",
      "description" : "Credential preview from credential proposal"
    },
    "V20CredExRecord_cred_request" : {
      "type" : "object",
      "description" : "Serialized credential request message"
    },
    "V20CredExRecordDetail_cred_ex_record" : {
      "type" : "object",
      "description" : "Credential exchange record"
    },
    "V20CredFilter_anoncreds" : {
      "type" : "object",
      "description" : "Credential filter for anoncreds"
    },
    "V20CredFilter_indy" : {
      "type" : "object",
      "description" : "Credential filter for indy"
    },
    "V20CredFilter_ld_proof" : {
      "type" : "object",
      "description" : "Credential filter for linked data proof"
    },
    "V20CredFilter_vc_di" : {
      "type" : "object",
      "description" : "Credential filter for vc_di"
    },
    "V20CredProposal_credential_preview" : {
      "type" : "object",
      "description" : "Credential preview"
    },
    "V20DiscoveryExchangeResult_results" : {
      "type" : "object",
      "description" : "Discover Features v2.0 exchange record"
    },
    "V20DiscoveryRecord_disclosures" : {
      "type" : "object",
      "description" : "Disclosures message"
    },
    "V20DiscoveryRecord_queries_msg" : {
      "type" : "object",
      "description" : "Queries message"
    },
    "V20PresExRecord_by_format" : {
      "type" : "object",
      "description" : "Attachment content by format for proposal, request, and presentation"
    },
    "V20PresExRecord_pres" : {
      "type" : "object",
      "description" : "Presentation message"
    },
    "V20PresProposalByFormat_anoncreds" : {
      "type" : "object",
      "description" : "Presentation proposal for anoncreds"
    },
    "V20PresProposalByFormat_dif" : {
      "type" : "object",
      "description" : "Presentation proposal for DIF"
    },
    "V20PresProposalByFormat_indy" : {
      "type" : "object",
      "description" : "Presentation proposal for indy"
    },
    "V20PresRequestByFormat_dif" : {
      "type" : "object",
      "description" : "Presentation request for DIF"
    },
    "V20PresRequestByFormat_indy" : {
      "type" : "object",
      "description" : "Presentation request for indy"
    },
    "V20PresSpecByFormatRequest_anoncreds" : {
      "type" : "object",
      "description" : "Presentation specification for anoncreds"
    },
    "V20PresSpecByFormatRequest_dif" : {
      "type" : "object",
      "description" : "Optional Presentation specification for DIF, overrides the PresentationExchange record's PresRequest"
    },
    "V20PresSpecByFormatRequest_indy" : {
      "type" : "object",
      "description" : "Presentation specification for indy"
    },
    "VerifyRequest_doc" : {
      "type" : "object",
      "description" : "Signed document"
    }
  }
}