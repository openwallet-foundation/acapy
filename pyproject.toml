[tool.poetry]
name = "aries_cloudagent"
version = "0.12.5"
description = "Hyperledger Aries Cloud Agent Python (ACA-Py) is a foundation for building decentralized identity applications and services running in non-mobile environments. "
authors = ["Hyperledger Aries <aries@lists.hyperledger.org>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{include = "aries_cloudagent"}]
classifiers = [
            "Programming Language :: Python :: 3",
            "License :: OSI Approved :: Apache Software License",
	    "Operating System :: OS Independent",
]
repository = "https://github.com/hyperledger/aries-cloudagent-python"


[tool.poetry.dependencies]
python = "^3.9"
aiohttp="~3.9.4"
aiohttp-apispec="~2.2.1"
aiohttp-cors="~0.7.0"
apispec="~3.3.0"
async-timeout="~4.0.2"
base58="~2.1.0"
ConfigArgParse="~1.5.3"
deepmerge="~0.3.0"
ecdsa="~0.16.1"
jsonpath-ng="1.6.1"
Markdown="~3.5.2"
markupsafe="2.0.1"
marshmallow="~3.20.1"
nest_asyncio="~1.5.5"
packaging="~23.1"
portalocker="~2.7.0"
prompt_toolkit=">=2.0.9,<2.1.0"
pydid="^0.4.3"
pyjwt="~2.8.0"
pyld="^2.0.4"
pynacl="~1.5.0"
python-dateutil="~2.8.1"
python-json-logger="~2.0.7"
pytz="~2021.1"
pyyaml="~6.0.1"
qrcode = {version = ">=6.1,<7.0", extras = ["pil"]}
requests="~2.31.0"
rlp="4.0.0"
unflatten="~0.1"
sd-jwt = "^0.10.3"
did-peer-2 = "^0.1.2"
did-peer-4 = "^0.1.4"

# askar
aries-askar= { version = "~0.4.3", optional = true }
indy-credx= { version = "~1.1.1", optional = true }
indy-vdr= { version = "~0.4.0", optional = true }
anoncreds= { version = "0.2.0", optional = true }

# bbs
ursa-bbs-signatures= { version = "~1.0.1", optional = true }

# indy
python3-indy= { version = "^1.11.1", optional = true }

[tool.poetry.group.dev.dependencies]
pre-commit="~3.3.3"
# Sync with version in .pre-commit-config.yaml
ruff = "0.1.2"
# Sync with version in .github/workflows/blackformat.yml
# Sync with version in .pre-commit-config.yaml
black="24.3.0"

sphinx="1.8.4"
sphinx-rtd-theme=">=0.4.3"

ptvsd="4.3.2"
pydevd="1.5.1"

pydevd-pycharm="~193.6015.39"

# testing
pytest= "^8.0.0"
pytest-asyncio= "^0.23.5"
pytest-cov= "4.1.0"
pytest-ruff="^0.1.1"
mock= "~4.0"

[tool.poetry.extras]
askar = [
      "aries-askar",
      "indy-credx",
      "indy-vdr",
      "anoncreds"
]
bbs = [
    "ursa-bbs-signatures"
]
indy = [
     "python3-indy"
]

[tool.poetry.scripts]
aca-py = "aries_cloudagent.__main__:script_main"

[tool.ruff]
select = ["B006", "C", "D", "E", "F"]

ignore = [
    # Google Python Doc Style
    "D203", "D204", "D213", "D215", "D400", "D401", "D404", "D406", "D407",
    "D408", "D409", "D413",
    "D202", # Allow blank line after docstring
    "D104", # Don't require docstring in public package
    # Things that we should fix, but are too much work right now
    "D417", "C901",
]

include = ["aries_cloudagent/**/*.py"]

line-length = 90

[tool.ruff.per-file-ignores]
"**/{tests}/*" = ["B006", "D", "E501", "F841"]

[tool.pytest.ini_options]
testpaths = "aries_cloudagent"
addopts = """
    --quiet --junitxml=./test-reports/junit.xml
    --cov-config .coveragerc --cov=aries_cloudagent --cov-report term --cov-report xml
    --ruff
"""
markers = [
    "anoncreds: Tests specifically relating to AnonCreds support",
    "askar: Tests specifically relating to Aries-Askar support",
    "indy: Tests specifically relating to Hyperledger Indy SDK support",
    "indy_credx: Tests specifically relating to Indy-Credx support",
    "indy_vdr: Tests specifically relating to Indy-VDR support",
    "ursa_bbs_signatures: Tests specificaly relating to BBS Signatures support",
    "postgres: Tests relating to the postgres storage plugin for Indy",
]
junit_family = "xunit1"
asyncio_mode = "auto"
filterwarnings = [
    'ignore:distutils Version classes are deprecated. Use packaging.version instead.:DeprecationWarning', # Ignore specific DeprecationWarning for old packages using distutils version class
]

[tool.coverage.run]

omit = [
    "*/tests/*",
    "demo/*",
    "docker/*",
    "docs/*",
    "scripts/*",
]
data_file = "test-reports/.coverage"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract"
]
precision = 2
skip_covered = true
show_missing = true

[tool.coverage.xml]
output = "test-reports/coverage.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
