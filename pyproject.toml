[tool.poetry]
name = "acapy_agent"
version = "1.3.0rc0"
description = "(ACA-Py) A Cloud Agent Python is a foundation for building decentralized identity applications and services running in non-mobile environments. "
authors = []
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "acapy_agent" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
repository = "https://github.com/openwallet-foundation/acapy"


[tool.poetry.dependencies]
python = "^3.12"
aiohttp = "~3.11.12"
aiohttp-apispec-acapy = "~3.0.3"
aiohttp-cors = ">=0.7,<0.9"
apispec = "^6.6.0"
base58 = "~2.1.0"
ConfigArgParse = "~1.7"
deepmerge = "^2.0"
ecdsa = "~0.19.0"
jsonpath-ng = "^1.7.0"
Markdown = "~3.7"
markupsafe = "^3.0.2"
marshmallow = "~3.26.1"
nest_asyncio = "~1.6.0"
packaging = "^24.2"
portalocker = "^3.1.1"
prompt_toolkit = ">=2.0.9,<3.1.0"
pydid = "^0.5.1"
pyjwt = "~2.10.1"
pyld = "^2.0.4"
pynacl = "~1.5.0"
python-dateutil = "^2.9.0"
python-json-logger = "^3.2.1"
pyyaml = "~6.0.2"
qrcode = { version = "^8.0", extras = ["pil"] }
requests = "~2.32.3"
rlp = "^4.1.0"
unflatten = "~0.2"
sd-jwt = "^0.10.3"
uuid_utils = "^0.10.0"

# did libraries
did-peer-2 = "^0.1.2"
did-peer-4 = "^0.1.4"
did-webvh = ">=0.3.0"

# Verifiable Credentials
indy-credx = "~1.1.1"
anoncreds = "~0.2.0"

# askar
aries-askar = ">=0.4.3"

# indy 
indy-vdr = "~0.4.0"

# bbs
ursa-bbs-signatures = { version = "~1.0.1", optional = true }

# didcommv2
didcomm-messaging = { version = "^0.1.1a0", optional = true }
canonicaljson = "^2.0.0"

[tool.poetry.group.dev.dependencies]
# Sync with version in .pre-commit-config.yaml and .github/workflows/format.yml
ruff = "~0.11.0"

pre-commit = ">=4.1,<4.3"

pydevd = "~3.3.0"

pydevd-pycharm = "^251.17181.23"

# testing
pytest = "^8.3.4"
pytest-asyncio = "^0.25.3"
pytest-cov = "^6.0.0"
pytest-ruff = "^0.4.1"
pytest-xdist = "^3.6.1"
debugpy = "^1.8.11"

[tool.poetry.extras]
bbs = ["ursa-bbs-signatures"]
didcommv2 = ["didcomm-messaging"]

[tool.poetry.scripts]
aca-py = "acapy_agent.__main__:script_main"

[tool.ruff]
lint.select = ["B006", "C", "D", "E", "F"]

lint.ignore = [
    # Google Python Doc Style
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D401",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "D202", # Allow blank line after docstring
    "D104", # Don't require docstring in public package
    # Things that we should fix, but are too much work right now
    "C901",
]

include = ["acapy_agent/**/*.py"]

line-length = 90

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["B006", "D", "E501", "F841"]

[tool.pytest.ini_options]
testpaths = "acapy_agent"
addopts = """
    -n auto
    --quiet --junitxml=./test-reports/junit.xml
    --cov-config .coveragerc --cov-report term --cov-report xml
    --ruff
"""
markers = [
    "anoncreds: Tests specifically relating to AnonCreds support",
    "askar: Tests specifically relating to Aries-Askar support",
    "indy: Tests specifically relating to Hyperledger Indy SDK support",
    "indy_credx: Tests specifically relating to Indy-Credx support",
    "indy_vdr: Tests specifically relating to Indy-VDR support",
    "ursa_bbs_signatures: Tests specifically relating to BBS Signatures support",
    "postgres: Tests relating to the postgres storage plugin for Indy",
]
junit_family = "xunit1"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "module"

[tool.coverage.run]

omit = ["*/tests/*", "demo/*", "docker/*", "docs/*", "scripts/*"]
data_file = "test-reports/.coverage"

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "@abstract"]
precision = 2
skip_covered = true
show_missing = true

[tool.coverage.xml]
output = "test-reports/coverage.xml"

[build-system]
requires = ["poetry-core>=2.1"]
build-backend = "poetry.core.masonry.api"
