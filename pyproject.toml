[tool.poetry]
name = "acapy_agent"
version = "1.3.2"
description = "(ACA-Py) A Cloud Agent Python is a foundation for building decentralized identity applications and services running in non-mobile environments. "
authors = []
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "acapy_agent" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
repository = "https://github.com/openwallet-foundation/acapy"


[tool.poetry.dependencies]
python = "^3.12"

aiohttp = ">=3.11.16,<3.13.0"
aiohttp-apispec-acapy = "~3.0.3"
aiohttp-cors = ">=0.7,<0.9"
apispec = "^6.6.0"
base58 = "~2.1.0"
canonicaljson = "^2.0.0"
ConfigArgParse = "~1.7"
deepmerge = "^2.0"
jsonpath-ng = "^1.7.0"
Markdown = ">=3.7,<3.10"
markupsafe = "^3.0.2"
marshmallow = "~3.26.1"
nest_asyncio = "~1.6.0"
packaging = ">=24.2,<26.0"
portalocker = "^3.1.1"
prompt_toolkit = ">=3.0,<3.1"
pydid = "^0.5.1"
pyjwt = "~2.10.1"
pyld = "^2.0.4"
pynacl = ">=1.5,<1.7"
python-dateutil = "^2.9.0"
python-json-logger = "^3.2.1"
pyyaml = "~6.0.2"
qrcode = { version = "^8.1", extras = ["pil"] }
requests = "~2.32.3"
rlp = "^4.1.0"
sd-jwt = "^0.10.3"
unflatten = "~0.2"
uuid_utils = ">=0.10,<0.12"

# did libraries
did-peer-2 = "^0.1.2"
did-peer-4 = "^0.1.4"
did-webvh = ">=1.0.0"

# Verifiable Credentials
anoncreds = "~0.2.0"
indy-credx = "~1.1.1"

# askar
aries-askar = ">=0.4.3"

# indy 
indy-vdr = "~0.4.0"

# bbs
ursa-bbs-signatures = { version = "~1.0.1", optional = true }

# didcommv2
didcomm-messaging = { version = "^0.1.1a0", optional = true }
# database_manager
psycopg = { version = "^3.2.1", extras = ["pool", "binary"] }
sqlcipher3-binary = { version = ">=0.5.4", optional = true }


[tool.poetry.group.dev.dependencies]
# Sync with version in .pre-commit-config.yaml and .github/workflows/format.yml
ruff = "~=0.13.3"

pre-commit = ">=4.1,<4.4"

pydevd = ">=3.3,<3.5"

pydevd-pycharm = ">=251.17181.23,<254.0.0"

# testing
pytest = "^8.3.4"
pytest-asyncio = "^1.0.0"
pytest-cov = ">=6,<8"
pytest-ruff = ">=0.4.1,<0.6.0"
pytest-xdist = "^3.6.1"
debugpy = "^1.8.11"

[tool.poetry.extras]
bbs = ["ursa-bbs-signatures"]
didcommv2 = ["didcomm-messaging"]
sqlcipher = ["sqlcipher3-binary"] # SQLCipher support

[tool.poetry.scripts]
aca-py = "acapy_agent.__main__:script_main"

[tool.ruff]
lint.select = [
    "B006", # Check for uses of mutable objects as function arguments
    "C90",  # mccabe (code complexity)
    "D",    # pydocstyle (docstring style)
    "E",    # pycodestyle (style errors)
    "F",    # pyflakes (detect invalid Python code)
    "I",    # isort (import sorting)
    # To be added later:
    # "ANN",   # flake8-annotations (type annotation checks)
    # "ASYNC", # flake8-async (detect async code errors)
    # "B",     # flake8-bugbear (detect likely bugs)
    # "N",     # pep8-naming (naming conventions)
    # "PL",    # pylint (rich code analysis)
    # "RUF",   # ruff-specific rules
    # "UP",    # pyupgrade (upgrade syntax)
    # "W",     # pycodestyle warnings (style warnings)
]

lint.ignore = [
    # Comments describe the rule being ignored
    "D104", # Require docstring in public package
    "D203", # Use a blank line to separate the docstring from the class definition
    "D213", # Multi-line docstring should start at the second line
    "D400", # First line of docstring should end with a period
    "D401", # First line of docstring should be in imperative mood
    # Should be fixed later:
    "C901", # Method is too complex
]

include = ["acapy_agent/**/*.py"]

line-length = 90

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["B006", "D", "E501", "F841"]

[tool.pytest.ini_options]
testpaths = "acapy_agent"
addopts = """
    -n auto
    --quiet --junitxml=./test-reports/junit.xml
    --cov-config .coveragerc --cov-report term --cov-report xml
    --ruff
"""
markers = [
    "anoncreds: Tests specifically relating to AnonCreds support",
    "askar: Tests specifically relating to Aries-Askar support",
    "indy: Tests specifically relating to Hyperledger Indy SDK support",
    "indy_credx: Tests specifically relating to Indy-Credx support",
    "indy_vdr: Tests specifically relating to Indy-VDR support",
    "ursa_bbs_signatures: Tests specifically relating to BBS Signatures support",
    "postgres: Tests relating to the postgres storage plugin for Indy",
]
junit_family = "xunit1"
asyncio_mode = "auto"

[tool.coverage.run]
omit = ["*/tests/*", "demo/*", "docker/*", "docs/*", "scripts/*"]
data_file = "test-reports/.coverage"

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "@abstract"]
precision = 2
skip_covered = true
show_missing = true

[tool.coverage.xml]
output = "test-reports/coverage.xml"

[build-system]
requires = ["poetry-core>=2.1"]
build-backend = "poetry.core.masonry.api"
