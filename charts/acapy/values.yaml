# Default values for AcaPy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  defaultStorageClass: ""
  ## Security parameters
  ##
  security:
    ## @param global.security.allowInsecureImages Allows skipping image verification
    allowInsecureImages: false
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto
## @section Common parameters
##
## @param nameOverride String to partially override fullname include (will maintain the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override fullname template
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
##
kubeVersion: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param replicaCount Number of AcaPy pods
replicaCount: 1
## @param updateStrategy.type Set up update strategy for AcaPy installation.
## Set to Recreate if you use persistent volume that cannot be mounted by more than one pods to make sure the pods is destroyed first.
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
## Example:
## updateStrategy:
##  type: RollingUpdate
##  rollingUpdate:
##    maxSurge: 25%
##    maxUnavailable: 25%
##
updateStrategy:
  type: RollingUpdate
## AcaPy image version
## ref: https://github.com/openwallet-foundation/acapy/pkgs/container/acapy-agent
## @param image.registry [default: REGISTRY_NAME] AcaPy image registry
## @param image.repository [default: REPOSITORY_NAME/AcaPy] AcaPy Image name
## @skip image.tag AcaPy Image tag
## @param image.digest AcaPy image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy AcaPy image pull policy
## @param image.pullSecrets Specify docker-registry secret names as an array
##
image:
  registry: ghcr.io
  repository: openwallet-foundation/acapy-agent
  tag: py3.12-1.3.0
  digest: ""
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

## @section Configuration files
##
## @descriptionStart
## Configuration file is mounted as is into the container. See the AcaPy documentation for details.
## Note: Secure values of the configuration are passed via equivalent environment variables from secrets.
## @descriptionEnd
##
## @param argfile.yml.admin-insecure-mode Run the admin web server in insecure mode. DO NOT USE FOR PRODUCTION DEPLOYMENTS. The admin server will be publicly available to anyone who has access to the interface. An auto-generated admin API Key is supplied via `ACAPY-ADMIN-API-KEY`.
## @param argfile.yml.auto-accept-invites Automatically accept invites without firing a webhook event or waiting for an admin request. Default: false.
## @param argfile.yml.auto-accept-requests Automatically accept connection requests without firing a webhook event or waiting for an admin request. Default: false.
## @param argfile.yml.auto-create-revocation-transactions For Authors, specify whether to automatically create transactions for a cred def's revocation registry. (If not specified, the controller must invoke the endpoints required to create the revocation registry and assign to the cred def.)
## @param argfile.yml.auto-promote-author-did For authors, specify whether to automatically promote a DID to the wallet public DID after writing to the ledger.``
## @param argfile.yml.auto-ping-connection Automatically send a trust ping immediately after a connection response is accepted. Some agents require this before marking a connection as 'active'. Default: false.
## @param argfile.yml.auto-provision If the requested profile does not exist, initialize it with the given parameters.
## @param argfile.yml.auto-request-endorsement For Authors, specify whether to automatically request endorsement for all transactions. (If not specified, the controller must invoke the request endorse operation for each transaction.)
## @param argfile.yml.auto-respond-credential-offer Automatically respond to Indy credential offers with a credential request. Default: false
## @param argfile.yml.auto-respond-credential-proposal Auto-respond to credential proposals with corresponding credential offers.
## @param argfile.yml.auto-respond-credential-request Auto-respond to credential requests with corresponding credentials.
## @param argfile.yml.auto-respond-presentation-proposal Auto-respond to presentation proposals with corresponding presentation requests.
## @param argfile.yml.auto-respond-presentation-request Automatically respond to Indy presentation requests with a constructed presentation if a corresponding credential can be retrieved for every referent in the presentation request. Default: false.
## @param argfile.yml.auto-store-credential Automatically store an issued credential upon receipt. Default: false.
## @param argfile.yml.auto-verify-presentation Automatically verify a presentation when it is received. Default: false.
## @param argfile.yml.auto-write-transactions For Authors, specify whether to automatically write any endorsed transactions. (If not specified, the controller must invoke the write transaction operation for each transaction.)
## @param argfile.yml.emit-new-didcomm-mime-type Send packed agent messages with the DIDComm MIME type as of RFC 0044; i.e., 'application/didcomm-envelope-enc' instead of 'application/ssi-agent-wire'.
## @param argfile.yml.emit-new-didcomm-prefix Emit protocol messages with new DIDComm prefix; i.e., 'https://didcomm.org/' instead of (default) prefix 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/'.
## @param argfile.yml.endorser-alias For transaction Authors, specify the alias of the Endorser connection that will be used to endorse transactions.
## @param argfile.yml.endorser-protocol-role Specify the role ('author' or 'endorser') which this agent will participate. Authors will request transaction endorsement from an Endorser. Endorsers will endorse transactions from Authors, and may write their own  transactions to the ledger. If no role (or 'none') is specified then the endorsement protocol will not be used and this agent will write transactions to the ledger directly.
## @param argfile.yml.auto-respond-messages Automatically respond to basic messages indicating the message was received. Default: false.
## @param argfile.yml.auto-verify-presentation Automatically verify a presentation when it is received. Default: false.
## @param argfile.yml.genesis-transactions-list Load YAML configuration for connecting to multiple HyperLedger Indy ledgers.
## @param argfile.yml.log-level Specifies a custom logging level as one of: ('debug', 'info', 'warning', 'error', 'critical')
## @param argfile.yml.monitor-ping Send a webhook when a ping is sent or received.
## @param argfile.yml.multitenant-admin Specify whether to enable the multitenant admin api.
## @param argfile.yml.multitenant Enable multitenant mode.
## @param argfile.yml.notify-revocation Specifies that aca-py will notify credential recipients when revoking a credential it issued.
## @param argfile.yml.preserve-exchange-records Keep credential exchange records after exchange has completed.
## @param argfile.yml.requests-through-public-did Must be set to true when using "implicit" invitations.
## @param argfile.yml.public-invites Send invitations out using the public DID for the agent, and receive connection requests solicited by invitations which use the public DID. Default: false.
## @param argfile.yml.read-only-ledger Sets ledger to read-only to prevent updates. Default: false.
## @param argfile.yml.wallet-local-did If this parameter is set, provisions the wallet with a local DID from the '--seed' parameter, instead of a public DID to use with a Hyperledger Indy ledger. Default: false.
## @param argfile.yml.wallet-name Specifies the wallet name to be used by the agent. This is useful if your deployment has multiple wallets.
## @param argfile.yml.wallet-storage-type Specifies the type of Indy wallet backend to use. Supported internal storage types are 'basic' (memory), 'default' (sqlite), and 'postgres_storage'.  The default, if not specified, is 'default'.
## @param argfile.yml.wallet-type Specifies the type of Indy wallet provider to use. Supported internal storage types are 'basic' (memory) and 'indy'. The default (if not specified) is 'basic'.
## @param argfile.yml.webhook-url Send webhooks containing internal state changes to the specified URL. Optional API key to be passed in the request body can be appended using a hash separator [#]. This is useful for a controller to monitor agent events and respond to those events using the admin API. If not specified, webhooks are not published by the agent.
##
argfile.yml:
  admin-insecure-mode: false
  auto-accept-invites: true
  auto-accept-requests: true
  auto-create-revocation-transactions: false
  auto-ping-connection: true
  auto-promote-author-did: true
  auto-provision: true
  auto-request-endorsement: false
  auto-respond-credential-offer: true
  auto-respond-credential-proposal: false
  auto-respond-credential-request: false
  auto-respond-messages: true
  auto-respond-presentation-proposal: true
  auto-respond-presentation-request: false
  auto-store-credential: true
  auto-verify-presentation: false
  auto-write-transactions: false
  emit-new-didcomm-mime-type: true
  emit-new-didcomm-prefix: true
  endorser-alias: endorser
  endorser-protocol-role: author
  genesis-transactions-list: /tmp/ledgers.yml
  log-level: info
  monitor-ping: false
  multitenant-admin: false
  multitenant: false
  notify-revocation: false
  preserve-exchange-records: true
  requests-through-public-did: false
  public-invites: false
  read-only-ledger: true
  # tails-server-base-url: https://tails-test.vonx.io
  # tails-server-upload-url: https://tails-test.vonx.io
  wallet-local-did: true
  wallet-name: askar-wallet
  wallet-storage-type: postgres_storage
  wallet-type: askar
  webhook-url: '{{ include "acapy.host" . }}'

## @param ledgers.yml [object]
ledgers.yml: {}

## Specify configuration values for each plugin.
## Configuration values are plugin specific, and are rendered as is into the plugin-config.yml file.
##
## @param plugin-config.yml [object] Plugin configuration file
##
plugin-config.yml: {}

## @param websockets.enabled Enable or disable the websocket transport for the agent.
##
websockets:
  enabled: false

## @section Wallet Storage configuration
## @descriptionStart
##  Specifies the storage configuration to use for the wallet.
##  This is required if you are for using 'postgres_storage' wallet 'storage type.
##  For example, '{"url":"localhost:5432", "wallet_scheme":"MultiWalletSingleTable"}'.
##  This configuration maps to the indy sdk postgres plugin (PostgresConfig).
## @descriptionEnd
##
## @param walletStorageConfig.json Raw json, overrides all other values including postgres subchart values. e.g.: '{"url":"localhost:5432", "max_connections":"10", "wallet_scheme":"DatabasePerWallet"}'
## @param walletStorageConfig.url Database url. Overrides all other values including postgres subchart values.
## @param walletStorageConfig.max_connections Client max connections, defaults to 10.
## @param walletStorageConfig.wallet_scheme Wallet scheme.
##
walletStorageConfig:
  json: ""
  url: ""
  max_connections: 10
  wallet_scheme: DatabasePerWallet

## @section Wallet Storage Credentials
## @descriptionStart
##  Specifies the storage credentials to use for the wallet.
##  This is required if you are for using 'postgres_storage' wallet 'storage type.
##  For example, '{"account":"postgres","password":"mysecretpassword","admin_account":"postgres","admin_password":"mysecretpassword"}'.
##  This configuration maps to the indy sdk postgres plugin (PostgresCredential).
##  NOTE: admin_user must have the CREATEDB role or else initialization will fail.
## @descriptionEnd
##
## @param walletStorageCredentials.json Raw json with database credentials. Overrides all other values including postgres subchart values. e.g.: '{"account":"postgres","password":"mysecretpassword","admin_account":"postgres","admin_password":"mysecretpassword"}'
## @param walletStorageCredentials.account Database account name.
## @param walletStorageCredentials.admin_account Database account with CREATEDB role used to create additional databases per wallet.
## @param walletStorageCredentials.admin_password Database password for admin account.
## @param walletStorageCredentials.existingSecret Name of an existing secret containing 'database-user', 'database-password', 'admin-password' keys.
## @param walletStorageCredentials.secretKeys.adminPasswordKey Key in existing secret containing admin password.
## @param walletStorageCredentials.secretKeys.userPasswordKey Key in existing secret containing password .
##
walletStorageCredentials:
  json: ""
  account: acapy
  admin_account: postgres
  admin_password: ""
  existingSecret: ""
  secretKeys:
    adminPasswordKey: postgres-password
    userPasswordKey: password

## @section Persistence
## Enable persistence using Persistent Volume Claims
## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using PVC
  ##
  enabled: true
  ## @param persistence.existingClaim Name of an existing PVC to use
  ##
  existingClaim: ""
  ## @param persistence.storageClass PVC Storage Class for Tails volume
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.accessModes PVC Access Mode for Tails volume
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  ##
  accessModes:
    - ReadWriteMany
  ## @param persistence.size PVC Storage Request for Tails volume
  ##
  size: 1Gi
  ## @param persistence.annotations Persistent Volume Claim annotations
  ##
  annotations: {}

## @section Service and Ports
## AcaPy service parameters
##
service:
  ## @param service.type AcaPy service type
  ##
  type: ClusterIP
  ## @param service.ports.http AcaPy service HTTP port
  ## @param service.ports.admin AcaPy service admin port
  ## @param service.ports.ws AcaPy service websockets port
  ##
  ports:
    http: 8021
    admin: 8022
    ws: 8023

  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## @param service.nodePorts.admin Node port for admin
  ## @param service.nodePorts.ws Node port for websockets
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http: ""
    admin: ""
    ws: ""
  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
  ##
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}
  ## @param service.clusterIP AcaPy service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP AcaPy service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges AcaPy service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy AcaPy service external traffic policy
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for AcaPy service
  ##
  annotations: {}
  ## @param service.extraPorts Extra port to expose on AcaPy service
  ##
  extraPorts: []

## @section Network Policy
## Network Policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
  ##
  enabled: true
  ## @param networkPolicy.allowExternal Don't require server label for connections
  ## The Policy model to apply. When set to false, only pods with the correct
  ## server label will have network access to the ports server is listening
  ## on. When true, server will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: true
  ## @param networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
  ##
  allowExternalEgress: true
  ## @param networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `networkPolicy.allowExternal` is true.
  ##
  addExternalClientAccess: true
  ## @param networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
  ## e.g:
  ## extraIngress:
  ##   - ports:
  ##       - port: 1234
  ##     from:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  extraIngress: []
  ## @param networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
  ## e.g:
  ## extraEgress:
  ##   - ports:
  ##       - port: 1234
  ##     to:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  ##
  extraEgress: []
  ## @param networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `networkPolicy.allowExternal` is true.
  ## e.g:
  ## ingressPodMatchLabels:
  ##   my-client: "true"
  #
  ingressPodMatchLabels: {}
  ## @param networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
  ## @param networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
  ##
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}

## @section Ingress and Endpoint configuration
## Configure the ingress resource that allows you to access the
## AcaPy installation. Set up the URL
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
## @param agentUrl must be set if ingress is not enabled
agentUrl: ""
## @param adminUrl must be set if ingress is not enabled
adminUrl: ""
##
ingress:
  ## @param ingress.agent.enabled Set to true to enable ingress record generation
  ##
  agent:
    enabled: false
    ## @param ingress.agent.pathType Ingress Path type
    ##
    pathType: ImplementationSpecific
    ## @param ingress.agent.apiVersion Override API Version (automatically detected if not set)
    ##
    apiVersion: ""
    ## @param ingress.agent.hostname When the ingress is enabled, a host pointing to this will be created
    ##
    hostname: acapy.local
    ## @param ingress.agent.path Default path for the ingress resource
    ## The Path to AcaPy. You may need to set this to '/*' in order to use this with ALB ingress controllers.
    ##
    path: /
    ## @param ingress.agent.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ## @param ingress.agent.tls Enable TLS configuration for the hostname defined at ingress.hostname parameter
    ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
    ## You can use the ingress.agent.secrets parameter to create this TLS secret or relay on cert-manager to create it
    ##
    tls: false
    ## @param ingress.agent.extraHosts The list of additional hostnames to be covered with this ingress record.
    ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
    ## extraHosts:
    ## - name: acapy.local
    ##   path: /
    ##
    extraHosts: []
    ## @param ingress.agent.extraPaths Any additional arbitrary paths that may need to be added to the ingress under the main host.
    ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param ingress.agent.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
    ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## extraTls:
    ## - hosts:
    ##     - acapy.local
    ##   secretName: acapy.local-tls
    ##
    extraTls: []
    ## @param ingress.agent.secrets If you're providing your own certificates, please use this to add the certificates as secrets
    ## key and certificate should start with -----BEGIN CERTIFICATE----- or
    ## -----BEGIN RSA PRIVATE KEY-----
    ##
    ## name should line up with a tlsSecret set further up
    ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
    ##
    ## @param ingress.agent.secrets It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ## e.g:
    ## - name: acapy.local-tls
    ##   key:
    ##   certificate:
    ##
    secrets: []
    ## @param ingress.agent.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false
    ## @param ingress.agent.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ingressClassName: ""
    ## @param ingress.agent.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []
  ## @param ingress.admin.enabled Set to true to enable ingress record generation
  ##
  admin:
    enabled: false
    ## @param ingress.admin.pathType Ingress Path type
    ##
    pathType: ImplementationSpecific
    ## @param ingress.admin.apiVersion Override API Version (automatically detected if not set)
    ##
    apiVersion: ""
    ## @param ingress.admin.hostname When the ingress is enabled, a host pointing to this will be created
    ##
    hostname: admin.acapy.local
    ## @param ingress.admin.path Default path for the ingress resource
    ## The Path to AcaPy. You may need to set this to '/*' in order to use this with ALB ingress controllers.
    ##
    path: /
    ## @param ingress.admin.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ## @param ingress.admin.tls Enable TLS configuration for the hostname defined at ingress.hostname parameter
    ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
    ## You can use the ingress.admin.secrets parameter to create this TLS secret or relay on cert-manager to create it
    ##
    tls: false
    ## @param ingress.admin.extraHosts The list of additional hostnames to be covered with this ingress record.
    ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
    ## extraHosts:
    ## - name: acapy.local
    ##   path: /
    ##
    extraHosts: []
    ## @param ingress.admin.extraPaths Any additional arbitrary paths that may need to be added to the ingress under the main host.
    ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param ingress.admin.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
    ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## extraTls:
    ## - hosts:
    ##     - acapy.local
    ##   secretName: acapy.local-tls
    ##
    extraTls: []
    ## @param ingress.admin.secrets If you're providing your own certificates, please use this to add the certificates as secrets
    ## key and certificate should start with -----BEGIN CERTIFICATE----- or
    ## -----BEGIN RSA PRIVATE KEY-----
    ##
    ## name should line up with a tlsSecret set further up
    ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
    ##
    ## @param ingress.admin.secrets It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ## e.g:
    ## - name: acapy.local-tls
    ##   key:
    ##   certificate:
    ##
    secrets: []
    ## @param ingress.admin.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false
    ## @param ingress.admin.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ingressClassName: ""
    ## @param ingress.admin.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []

## @section Deployment parameters
## AcaPy container's resource requests and limits
## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## @param resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if resources is set (resources is recommended for production).
## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
##
resourcesPreset: "none"
## @param resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
## Example:
## resources:
##   requests:
##     cpu: 2
##     memory: 512Mi
##   limits:
##     cpu: 3
##     memory: 1024Mi
##
resources: {}

## AcaPy pods' liveness probe. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
## @param livenessProbe.httpGet.path Request path for livenessProbe
## @param livenessProbe.httpGet.port Port for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 20
  timeoutSeconds: 10
  failureThreshold: 6
  successThreshold: 1
  httpGet:
    path: /status/live
    port: admin
## AcaPy pods' readiness probe. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
## @param readinessProbe.httpGet.path Request path for readinessProbe
## @param readinessProbe.httpGet.port Port for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
  httpGet:
    path: /status/ready
    port: admin
## @param initContainers Add additional init containers for the hidden node pod(s)
## Example:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: []
##
## @param extraArgs Array containing extra command line arguments to configure aca-py
## For example:
## extraArgs:
##  - --my-arg=my-value
##  - --my-flag
extraArgs: []
##
## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
##
extraEnvVarsSecret: ""
## @param extraEnvVars Array containing extra env vars to configure AcaPy
## For example:
## extraEnvVars:
##  - name: GF_DEFAULT_INSTANCE_NAME
##    value: my-instance
##
extraEnvVars: []
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
##
nodeAffinityPreset:
  type: ""
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
## @param nodeSelector Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param topologySpreadConstraints Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
##
## topologySpreadConstraints:
##   - maxSkew: 1
##     topologyKey: failure-domain.beta.kubernetes.io/zone
##     whenUnsatisfiable: DoNotSchedule
##
topologySpreadConstraints: []
## @param podLabels Pod labels
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

## @param extraVolumes Array of extra volumes to be added to the deployment (evaluated as template). Requires setting `extraVolumeMounts`
##
extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

## @param extraVolumeMounts Array of extra volume mounts to be added to the container (evaluated as template). Normally used with `extraVolumes`.
##
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## @section PostgreSQL Parameters
##

## @section Autoscaling
## Autoscaling configuration
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
## @param autoscaling.enabled Enable Horizontal POD autoscaling for AcaPy
## @param autoscaling.minReplicas Minimum number of AcaPy replicas
## @param autoscaling.maxReplicas Maximum number of AcaPy replicas
## @param autoscaling.targetCPUUtilizationPercentage Target CPU utilization percentage
## @param autoscaling.targetMemoryUtilizationPercentage Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  ## HPA Scaling Behavior
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#configurable-scaling-behavior
  ##
  behavior:
    ## HPA behavior when scaling up
    ## @param autoscaling.behavior.scaleUp.stabilizationWindowSeconds The number of seconds for which past recommendations should be considered while scaling up
    ## @param autoscaling.behavior.scaleUp.selectPolicy The priority of policies that the autoscaler will apply when scaling up
    ## @param autoscaling.behavior.scaleUp.policies [array] HPA scaling policies when scaling up
    ## e.g:
    ## Policy to scale 20% of the pod in 60s
    ## - type: Percent
    ##   value: 20
    ##   periodSeconds: 60
    ##
    scaleUp:
      stabilizationWindowSeconds: 60
      selectPolicy: Max
      policies: []
    ## HPA behavior when scaling down
    ## @param autoscaling.behavior.scaleDown.stabilizationWindowSeconds The number of seconds for which past recommendations should be considered while scaling down
    ## @param autoscaling.behavior.scaleDown.selectPolicy The priority of policies that the autoscaler will apply when scaling down
    ## @param autoscaling.behavior.scaleDown.policies [array] HPA scaling policies when scaling down
    ## e.g:
    ## Policy to scale one pod in 300s
    ## - type: Pods
    ##   value: 1
    ##   periodSeconds: 300
    ##
    scaleDown:
      stabilizationWindowSeconds: 120
      selectPolicy: Max
      policies:
        - type: Pods
          value: 1
          periodSeconds: 300

## @section RBAC and Security settings
## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Enable creation of ServiceAccount for acapy pod
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the `common.names.fullname` template
  name: ""
  ## @param serviceAccount.annotations Annotations for service account. Evaluated as a template.
  ## Only used if `create` is `true`.
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Auto-mount token for the Service Account
  ##
  automountServiceAccountToken: false
## @param automountServiceAccountToken Auto-mount token in pod
##
automountServiceAccountToken: false
## @param podSecurityContext.enabled Enable securityContext on for AcaPy deployment
## @param podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
## @param podSecurityContext.sysctls Set kernel settings using the sysctl interface
## @param podSecurityContext.supplementalGroups Set filesystem extra groups
## @param podSecurityContext.fsGroup Group to configure permissions for volumes
##
podSecurityContext:
  enabled: true
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param containerSecurityContext.enabled Enabled containers' Security Context
## @param containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
## @param containerSecurityContext.runAsUser Set containers' Security Context runAsUser
## @param containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
## @param containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
## @param containerSecurityContext.privileged Set container's Security Context privileged
## @param containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
## @param containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
## @param containerSecurityContext.capabilities.drop List of capabilities to be dropped
## @param containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
##
containerSecurityContext:
  enabled: true
  seLinuxOptions: {}
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"

## @section PostgreSQL Parameters
## PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param postgresql.auth.username Name for a custom user to create
## @param postgresql.auth.database Name for a custom database to create
## @param postgresql.auth.enablePostgresUser Assign a password to the "postgres" admin user. Otherwise, remote access will be blocked for this user. Not recommended for production deployments.
## @param postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials
## @param postgresql.architecture PostgreSQL architecture (`standalone` or `replication`)
##
postgresql:
  enabled: true
  auth:
    username: acapy
    database: ""
    enablePostgresUser: true
    existingSecret: ""
  architecture: standalone
  primary:
    persistence:
      ## @param postgresql.primary.persistence.enabled Enable PostgreSQL Primary data persistence using PVC
      ##
      enabled: true
      ## @param postgresql.primary.persistence.size PVC Storage Request for PostgreSQL volume
      ##
      size: 1Gi
    ## Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ## @param postgresql.primary.containerSecurityContext.enabled Enable container security context
    ##
    containerSecurityContext:
      enabled: false
    ## Pod Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ## @param postgresql.primary.podSecurityContext.enabled Enable security context
    ##
    podSecurityContext:
      enabled: false
    ## PostgreSQL Primary resource requests and limits
    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## @param postgresql.primary.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if primary.resources is set (primary.resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "nano"
    ## @param postgresql.primary.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## Example:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}
    ## @param postgresql.primary.extendedConfiguration Extended PostgreSQL Primary configuration (appended to main or default configuration)
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#allow-settings-to-be-loaded-from-files-other-than-the-default-postgresqlconf
    ##
    extendedConfiguration: |
      max_connections = 500
